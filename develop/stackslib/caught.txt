stackslib/src/blockstack_cli.rs:574:5: replace generate_secret_key -> Result<String, CliError> with Ok(String::new())
stackslib/src/blockstack_cli.rs:431:5: replace handle_contract_call -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/blockstack_cli.rs:516:5: replace handle_token_transfer -> Result<String, CliError> with Ok(String::new())
stackslib/src/blockstack_cli.rs:516:5: replace handle_token_transfer -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/blockstack_cli.rs:605:5: replace get_addresses -> Result<String, CliError> with Ok(String::new())
stackslib/src/blockstack_cli.rs:644:5: replace decode_transaction -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/blockstack_cli.rs:605:5: replace get_addresses -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/blockstack_cli.rs:644:5: replace decode_transaction -> Result<String, CliError> with Ok(String::new())
stackslib/src/blockstack_cli.rs:682:5: replace decode_header -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/blockstack_cli.rs:721:5: replace decode_block -> Result<String, CliError> with Ok(String::new())
stackslib/src/blockstack_cli.rs:758:5: replace decode_microblock -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/blockstack_cli.rs:758:5: replace decode_microblock -> Result<String, CliError> with Ok(String::new())
stackslib/src/blockstack_cli.rs:431:5: replace handle_contract_call -> Result<String, CliError> with Ok(String::new())
stackslib/src/blockstack_cli.rs:193:9: replace <impl Error for CliError>::source -> Option<&(dyn std::error::Error +'static)> with None
stackslib/src/blockstack_cli.rs:372:5: replace handle_contract_publish -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/blockstack_cli.rs:852:5: replace main_handler -> Result<String, CliError> with Ok(String::new())
stackslib/src/blockstack_cli.rs:797:5: replace decode_microblocks -> Result<String, CliError> with Ok(String::new())
stackslib/src/blockstack_cli.rs:836:5: replace main with ()
stackslib/src/lib.rs:125:5: replace version_string -> String with String::new()
stackslib/src/blockstack_cli.rs:721:5: replace decode_block -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/blockstack_cli.rs:574:5: replace generate_secret_key -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/blockstack_cli.rs:682:5: replace decode_header -> Result<String, CliError> with Ok(String::new())
stackslib/src/blockstack_cli.rs:797:5: replace decode_microblocks -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/main.rs:1402:5: replace tip_mine with ()
stackslib/src/net/mod.rs:323:9: replace <impl Display for Error>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/blockstack_cli.rs:852:5: replace main_handler -> Result<String, CliError> with Ok("xyzzy".into())
stackslib/src/net/mod.rs:620:9: replace RPCHandlerArgs<'a>::get_estimators_ref -> Option<(&dyn CostEstimator, &dyn FeeEstimator, &dyn CostMetric)> with None
stackslib/src/lib.rs:125:5: replace version_string -> String with "xyzzy".into()
stackslib/src/net/mod.rs:699:9: replace StacksNodeState<'a>::canonical_stacks_tip_height -> u32 with 0
stackslib/src/net/mod.rs:433:9: replace <impl Error for Error>::cause -> Option<&dyn error::Error> with None
stackslib/src/blockstack_cli.rs:372:5: replace handle_contract_publish -> Result<String, CliError> with Ok(String::new())
stackslib/src/net/mod.rs:889:9: replace <impl Display for NeighborAddress>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/blockstack_cli.rs:203:9: replace <impl Display for CliError>::fmt -> std::fmt::Result with Ok(Default::default())
stackslib/src/main.rs:89:5: replace main with ()
stackslib/src/net/mod.rs:570:9: replace <impl PeerHostExtensions for PeerHost>::try_from_url -> Option<PeerHost> with None
stackslib/src/net/mod.rs:1311:9: replace <impl PartialEq for Neighbor>::eq -> bool with true
stackslib/src/net/mod.rs:1237:9: replace <impl Display for NeighborKey>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/net/mod.rs:1228:9: replace <impl PartialEq for NeighborKey>::eq -> bool with true
stackslib/src/net/mod.rs:1228:9: replace <impl PartialEq for NeighborKey>::eq -> bool with false
stackslib/src/net/mod.rs:1323:9: replace Neighbor::is_always_allowed -> bool with false
stackslib/src/net/mod.rs:1323:9: replace Neighbor::is_always_allowed -> bool with true
stackslib/src/net/mod.rs:900:9: replace <impl Debug for NeighborAddress>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/net/mod.rs:1311:9: replace <impl PartialEq for Neighbor>::eq -> bool with false
stackslib/src/net/mod.rs:1413:9: replace NetworkResult::has_blocks -> bool with true
stackslib/src/net/mod.rs:1413:9: replace NetworkResult::has_blocks -> bool with false
stackslib/src/net/mod.rs:1327:9: replace Neighbor::is_denied -> bool with true
stackslib/src/net/mod.rs:1335:9: replace <impl Display for Neighbor>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/net/mod.rs:1417:9: replace NetworkResult::has_microblocks -> bool with false
stackslib/src/net/mod.rs:1429:9: replace NetworkResult::has_attachments -> bool with true
stackslib/src/net/mod.rs:1423:9: replace NetworkResult::has_transactions -> bool with false
stackslib/src/net/mod.rs:1450:9: replace NetworkResult::has_data_to_store -> bool with true
stackslib/src/net/mod.rs:1505:9: replace NetworkResult::consume_http_uploads -> () with ()
stackslib/src/net/mod.rs:1433:9: replace NetworkResult::has_stackerdb_chunks -> bool with false
stackslib/src/burnchains/mod.rs:78:9: replace MagicBytes::default -> MagicBytes with Default::default()
stackslib/src/burnchains/mod.rs:195:9: replace BurnchainTransaction::vtxindex -> u32 with 0
stackslib/src/burnchains/mod.rs:195:9: replace BurnchainTransaction::vtxindex -> u32 with 1
stackslib/src/burnchains/mod.rs:201:9: replace BurnchainTransaction::opcode -> u8 with 0
stackslib/src/burnchains/mod.rs:201:9: replace BurnchainTransaction::opcode -> u8 with 1
stackslib/src/burnchains/mod.rs:207:9: replace BurnchainTransaction::data -> Vec<u8> with vec![]
stackslib/src/burnchains/mod.rs:207:9: replace BurnchainTransaction::data -> Vec<u8> with vec![0]
stackslib/src/burnchains/mod.rs:207:9: replace BurnchainTransaction::data -> Vec<u8> with vec![1]
stackslib/src/burnchains/mod.rs:213:9: replace BurnchainTransaction::num_signers -> usize with 0
stackslib/src/burnchains/mod.rs:219:9: replace BurnchainTransaction::get_input_tx_ref -> Option<&(Txid, u32)> with None
stackslib/src/burnchains/mod.rs:153:9: replace BurnchainParameters::is_testnet -> bool with false
stackslib/src/burnchains/mod.rs:230:9: replace BurnchainTransaction::get_recipients -> Vec<Option<BurnchainRecipient>> with vec![]
stackslib/src/burnchains/mod.rs:230:9: replace BurnchainTransaction::get_recipients -> Vec<Option<BurnchainRecipient>> with vec![None]
stackslib/src/burnchains/mod.rs:240:9: replace BurnchainTransaction::num_recipients -> usize with 1
stackslib/src/burnchains/mod.rs:240:9: replace BurnchainTransaction::num_recipients -> usize with 0
stackslib/src/burnchains/mod.rs:246:9: replace BurnchainTransaction::get_burn_amount -> u64 with 0
stackslib/src/burnchains/mod.rs:246:9: replace BurnchainTransaction::get_burn_amount -> u64 with 1
stackslib/src/net/mod.rs:1433:9: replace NetworkResult::has_stackerdb_chunks -> bool with true
stackslib/src/burnchains/mod.rs:369:9: replace PoxConstants::active_pox_contract -> &'static str with ""
stackslib/src/burnchains/mod.rs:358:9: replace PoxConstants::static_active_pox_contract -> &'static str with ""
stackslib/src/burnchains/mod.rs:358:9: replace PoxConstants::static_active_pox_contract -> &'static str with "xyzzy"
stackslib/src/burnchains/mod.rs:369:9: replace PoxConstants::active_pox_contract -> &'static str with "xyzzy"
stackslib/src/burnchains/mod.rs:377:9: replace PoxConstants::reward_slots -> u32 with 1
stackslib/src/burnchains/mod.rs:377:9: replace PoxConstants::reward_slots -> u32 with 0
stackslib/src/burnchains/mod.rs:382:9: replace PoxConstants::enough_participation -> bool with true
stackslib/src/burnchains/mod.rs:382:9: replace PoxConstants::enough_participation -> bool with false
stackslib/src/net/mod.rs:1461:9: replace NetworkResult::consume_unsolicited -> () with ()
stackslib/src/burnchains/mod.rs:448:9: replace PoxConstants::is_after_pox_sunset_end -> bool with true
stackslib/src/burnchains/mod.rs:442:9: replace PoxConstants::has_pox_sunset -> bool with true
stackslib/src/burnchains/mod.rs:442:9: replace PoxConstants::has_pox_sunset -> bool with false
stackslib/src/burnchains/mod.rs:448:9: replace PoxConstants::is_after_pox_sunset_end -> bool with false
stackslib/src/burnchains/mod.rs:463:9: replace PoxConstants::is_after_pox_sunset_start -> bool with true
stackslib/src/burnchains/mod.rs:479:9: replace PoxConstants::reward_cycle_to_block_height -> u64 with 0
stackslib/src/burnchains/mod.rs:471:9: replace PoxConstants::is_reward_cycle_start -> bool with true
stackslib/src/burnchains/mod.rs:479:9: replace PoxConstants::reward_cycle_to_block_height -> u64 with 1
stackslib/src/burnchains/mod.rs:487:9: replace PoxConstants::block_height_to_reward_cycle -> Option<u64> with None
stackslib/src/burnchains/mod.rs:471:9: replace PoxConstants::is_reward_cycle_start -> bool with false
stackslib/src/burnchains/mod.rs:487:9: replace PoxConstants::block_height_to_reward_cycle -> Option<u64> with Some(0)
stackslib/src/burnchains/mod.rs:487:9: replace PoxConstants::block_height_to_reward_cycle -> Option<u64> with Some(1)
stackslib/src/burnchains/mod.rs:495:9: replace PoxConstants::is_in_prepare_phase -> bool with false
stackslib/src/burnchains/mod.rs:509:9: replace PoxConstants::static_is_in_prepare_phase -> bool with true
stackslib/src/burnchains/mod.rs:509:9: replace PoxConstants::static_is_in_prepare_phase -> bool with false
stackslib/src/burnchains/mod.rs:530:9: replace PoxConstants::static_block_height_to_reward_cycle -> Option<u64> with Some(0)
stackslib/src/burnchains/mod.rs:530:9: replace PoxConstants::static_block_height_to_reward_cycle -> Option<u64> with None
stackslib/src/burnchains/mod.rs:530:9: replace PoxConstants::static_block_height_to_reward_cycle -> Option<u64> with Some(1)
stackslib/src/burnchains/mod.rs:608:9: replace <impl Display for Error>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/burnchains/mod.rs:495:9: replace PoxConstants::is_in_prepare_phase -> bool with true
stackslib/src/core/mod.rs:161:51: replace * with /
stackslib/src/core/mod.rs:64:66: replace | with ^
stackslib/src/core/mod.rs:161:51: replace * with +
stackslib/src/core/mod.rs:172:52: replace + with -
stackslib/src/core/mod.rs:170:52: replace + with -
stackslib/src/burnchains/mod.rs:634:9: replace <impl Error for Error>::cause -> Option<&dyn error::Error> with None
stackslib/src/core/mod.rs:967:9: replace <impl StacksEpochExtension for StacksEpoch>::all -> Vec<StacksEpoch> with vec![]
stackslib/src/core/mod.rs:177:52: replace + with -
stackslib/src/core/mod.rs:1005:9: replace <impl StacksEpochExtension for StacksEpoch>::validate_epochs -> Vec<StacksEpoch> with vec![]
stackslib/src/monitoring/mod.rs:44:5: replace increment_rpc_calls_counter with ()
stackslib/src/core/mod.rs:232:5: replace check_fault_injection -> bool with false
stackslib/src/core/mod.rs:172:52: replace + with *
stackslib/src/monitoring/mod.rs:100:5: replace increment_btc_blocks_received_counter with ()
stackslib/src/monitoring/mod.rs:85:5: replace increment_stx_micro_blocks_served_counter with ()
stackslib/src/monitoring/mod.rs:110:5: replace set_last_execution_cost_observed with ()
stackslib/src/monitoring/mod.rs:159:5: replace set_last_mined_block_transaction_count with ()
stackslib/src/monitoring/mod.rs:180:5: replace increment_warning_emitted_counter with ()
stackslib/src/monitoring/mod.rs:319:5: replace update_outbound_bandwidth with ()
stackslib/src/monitoring/mod.rs:295:5: replace update_burnchain_height with ()
stackslib/src/monitoring/mod.rs:307:5: replace update_outbound_neighbors with ()
stackslib/src/monitoring/mod.rs:357:5: replace convert_uint256_to_f64_percentage -> f64 with 0.0
stackslib/src/monitoring/mod.rs:357:5: replace convert_uint256_to_f64_percentage -> f64 with 1.0
stackslib/src/monitoring/mod.rs:357:5: replace convert_uint256_to_f64_percentage -> f64 with -1.0
stackslib/src/cost_estimates/mod.rs:64:5: replace saturating_f64_math -> f64 with 1.0
stackslib/src/monitoring/mod.rs:432:5: replace update_miner_current_median_commitment with ()
stackslib/src/cost_estimates/mod.rs:64:5: replace saturating_f64_math -> f64 with 0.0
stackslib/src/cost_estimates/mod.rs:64:5: replace saturating_f64_math -> f64 with -1.0
stackslib/src/monitoring/mod.rs:471:9: replace <impl Display for SetGlobalBurnchainSignerError>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/cost_estimates/mod.rs:114:5: replace estimate_fee_rate -> Result<f64, EstimatorError> with Ok(-1.0)
stackslib/src/cost_estimates/mod.rs:114:5: replace estimate_fee_rate -> Result<f64, EstimatorError> with Ok(1.0)
stackslib/src/cost_estimates/mod.rs:192:9: replace <impl Error for EstimatorError>::source -> Option<&(dyn Error +'static)> with None
stackslib/src/cost_estimates/mod.rs:77:9: replace FeeRateEstimate::to_vec -> Vec<f64> with vec![1.0]
stackslib/src/cost_estimates/mod.rs:77:9: replace FeeRateEstimate::to_vec -> Vec<f64> with vec![0.0]
stackslib/src/cost_estimates/mod.rs:214:9: replace EstimatorError::into_json -> serde_json::Value with Default::default()
stackslib/src/clarity_cli.rs:314:5: replace get_cli_block_height -> Option<u64> with None
stackslib/src/cost_estimates/mod.rs:159:9: replace CostEstimator::notify_block with ()
stackslib/src/clarity_cli.rs:334:5: replace get_cli_db_path -> String with String::new()
stackslib/src/clarity_cli.rs:405:5: replace default_chain_id -> u32 with 0
stackslib/src/clarity_cli.rs:334:5: replace get_cli_db_path -> String with "xyzzy".into()
stackslib/src/clarity_cli.rs:454:5: replace vm_execute -> Result<Option<Value>, Error> with Ok(None)
stackslib/src/clarity_cli.rs:314:5: replace get_cli_block_height -> Option<u64> with Some(0)
stackslib/src/clarity_cli.rs:507:9: replace CLIHeadersDB::instantiate with ()
stackslib/src/clarity_cli.rs:658:9: replace <impl HeadersDB for CLIHeadersDB>::get_consensus_hash_for_block -> Option<ConsensusHash> with None
stackslib/src/clarity_cli.rs:668:9: replace <impl HeadersDB for CLIHeadersDB>::get_vrf_seed_for_block -> Option<VRFSeed> with None
stackslib/src/clarity_cli.rs:591:9: replace CLIHeadersDB::is_mainnet -> bool with true
stackslib/src/clarity_cli.rs:591:9: replace CLIHeadersDB::is_mainnet -> bool with false
stackslib/src/clarity_cli.rs:583:9: replace CLIHeadersDB::get_cli_db_path -> String with "xyzzy".into()
stackslib/src/clarity_cli.rs:705:9: replace <impl HeadersDB for CLIHeadersDB>::get_burn_block_height_for_block -> Option<u32> with None
stackslib/src/clarity_cli.rs:705:9: replace <impl HeadersDB for CLIHeadersDB>::get_burn_block_height_for_block -> Option<u32> with Some(0)
stackslib/src/clarity_cli.rs:719:9: replace <impl HeadersDB for CLIHeadersDB>::get_burnchain_tokens_spent_for_block -> Option<u128> with Some(0)
stackslib/src/clarity_cli.rs:719:9: replace <impl HeadersDB for CLIHeadersDB>::get_burnchain_tokens_spent_for_block -> Option<u128> with None
stackslib/src/clarity_cli.rs:696:9: replace <impl HeadersDB for CLIHeadersDB>::get_burn_block_time_for_block -> Option<u64> with None
stackslib/src/clarity_cli.rs:719:9: replace <impl HeadersDB for CLIHeadersDB>::get_burnchain_tokens_spent_for_block -> Option<u128> with Some(1)
stackslib/src/clarity_cli.rs:683:9: replace <impl HeadersDB for CLIHeadersDB>::get_stacks_block_header_hash_for_block -> Option<BlockHeaderHash> with None
stackslib/src/clarity_cli.rs:788:5: replace consume_arg -> Result<Option<String>, String> with Ok(None)
stackslib/src/clarity_cli.rs:705:9: replace <impl HeadersDB for CLIHeadersDB>::get_burn_block_height_for_block -> Option<u32> with Some(1)
stackslib/src/clarity_cli.rs:788:5: replace consume_arg -> Result<Option<String>, String> with Ok(Some("xyzzy".into()))
stackslib/src/clarity_cli.rs:950:5: replace invoke_command -> (i32, Option<serde_json::Value>) with (0, Some(Default::default()))
stackslib/src/clarity_cli.rs:950:5: replace invoke_command -> (i32, Option<serde_json::Value>) with (0, None)
stackslib/src/clarity_cli.rs:950:5: replace invoke_command -> (i32, Option<serde_json::Value>) with (1, None)
stackslib/src/clarity_cli.rs:950:5: replace invoke_command -> (i32, Option<serde_json::Value>) with (1, Some(Default::default()))
stackslib/src/clarity_cli.rs:788:5: replace consume_arg -> Result<Option<String>, String> with Ok(Some(String::new()))
stackslib/src/clarity_cli.rs:950:5: replace invoke_command -> (i32, Option<serde_json::Value>) with (-1, None)
stackslib/src/clarity_cli.rs:823:5: replace install_boot_code with ()
stackslib/src/clarity_cli.rs:929:5: replace add_costs with ()
stackslib/src/util_lib/db.rs:45:46: replace * with /
stackslib/src/clarity_cli.rs:935:5: replace add_assets with ()
stackslib/src/util_lib/db.rs:161:9: replace <impl FromRow for u64>::from_row -> Result<u64, Error> with Ok(0)
stackslib/src/util_lib/db.rs:161:9: replace <impl FromRow for u64>::from_row -> Result<u64, Error> with Ok(1)
stackslib/src/util_lib/db.rs:171:9: replace <impl FromRow for u32>::from_row -> Result<u32, Error> with Ok(1)
stackslib/src/util_lib/db.rs:178:9: replace <impl FromRow for String>::from_row -> Result<String, Error> with Ok(String::new())
stackslib/src/util_lib/db.rs:185:9: replace <impl FromColumn for u64>::from_column -> Result<u64, Error> with Ok(0)
stackslib/src/util_lib/db.rs:185:9: replace <impl FromColumn for u64>::from_column -> Result<u64, Error> with Ok(1)
stackslib/src/util_lib/db.rs:178:9: replace <impl FromRow for String>::from_row -> Result<String, Error> with Ok("xyzzy".into())
stackslib/src/util_lib/db.rs:203:9: replace <impl FromColumn for u64>::from_column -> Result<Option<u64>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:203:9: replace <impl FromColumn for u64>::from_column -> Result<Option<u64>, Error> with Ok(Some(0))
stackslib/src/util_lib/db.rs:203:9: replace <impl FromColumn for u64>::from_column -> Result<Option<u64>, Error> with Ok(Some(1))
stackslib/src/clarity_cli.rs:950:5: replace invoke_command -> (i32, Option<serde_json::Value>) with (-1, Some(Default::default()))
stackslib/src/util_lib/db.rs:218:9: replace <impl FromRow for i64>::from_row -> Result<i64, Error> with Ok(0)
stackslib/src/util_lib/db.rs:218:9: replace <impl FromRow for i64>::from_row -> Result<i64, Error> with Ok(-1)
stackslib/src/util_lib/db.rs:218:9: replace <impl FromRow for i64>::from_row -> Result<i64, Error> with Ok(1)
stackslib/src/util_lib/db.rs:242:9: replace <impl FromRow for bool>::from_row -> Result<bool, Error> with Ok(false)
stackslib/src/util_lib/db.rs:171:9: replace <impl FromRow for u32>::from_row -> Result<u32, Error> with Ok(0)
stackslib/src/util_lib/db.rs:267:5: replace u64_to_sql -> Result<i64, Error> with Ok(0)
stackslib/src/util_lib/db.rs:267:5: replace u64_to_sql -> Result<i64, Error> with Ok(1)
stackslib/src/util_lib/db.rs:267:5: replace u64_to_sql -> Result<i64, Error> with Ok(-1)
stackslib/src/util_lib/db.rs:225:9: replace <impl FromColumn for i64>::from_column -> Result<i64, Error> with Ok(1)
stackslib/src/util_lib/db.rs:274:5: replace opt_u64_to_sql -> Result<Option<i64>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:274:5: replace opt_u64_to_sql -> Result<Option<i64>, Error> with Ok(Some(0))
stackslib/src/util_lib/db.rs:274:5: replace opt_u64_to_sql -> Result<Option<i64>, Error> with Ok(Some(1))
stackslib/src/util_lib/db.rs:274:5: replace opt_u64_to_sql -> Result<Option<i64>, Error> with Ok(Some(-1))
stackslib/src/util_lib/db.rs:401:5: replace query_row -> Result<Option<T>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:386:5: replace query_rows -> Result<Vec<T>, Error> with Ok(vec![])
stackslib/src/util_lib/db.rs:449:5: replace query_row_panic -> Result<Option<T>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:474:5: replace query_row_columns -> Result<Vec<T>, Error> with Ok(vec![])
stackslib/src/util_lib/db.rs:45:39: replace * with /
stackslib/src/util_lib/db.rs:494:5: replace query_int -> Result<i64, Error> with Ok(0)
stackslib/src/util_lib/db.rs:494:5: replace query_int -> Result<i64, Error> with Ok(1)
stackslib/src/util_lib/db.rs:518:5: replace query_count -> Result<i64, Error> with Ok(1)
stackslib/src/util_lib/db.rs:518:5: replace query_count -> Result<i64, Error> with Ok(0)
stackslib/src/util_lib/db.rs:518:5: replace query_count -> Result<i64, Error> with Ok(-1)
stackslib/src/util_lib/db.rs:250:9: replace <impl FromColumn for Secp256k1PublicKey>::from_column -> Result<Secp256k1PublicKey, Error> with Ok(Default::default())
stackslib/src/util_lib/db.rs:536:5: replace inner_sql_pragma -> Result<(), sqlite_error> with Ok(())
stackslib/src/util_lib/db.rs:422:5: replace query_expect_row -> Result<Option<T>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:558:5: replace db_mkdirs -> Result<String, Error> with Ok(String::new())
stackslib/src/util_lib/db.rs:558:5: replace db_mkdirs -> Result<String, Error> with Ok("xyzzy".into())
stackslib/src/util_lib/db.rs:597:9: replace IndexDBConn<'a, C, T>::get_ancestor_block_hash -> Result<Option<T>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:549:5: replace table_exists -> Result<bool, sqlite_error> with Ok(true)
stackslib/src/util_lib/db.rs:606:9: replace IndexDBConn<'a, C, T>::get_ancestor_block_height -> Result<Option<u64>, Error> with Ok(Some(0))
stackslib/src/util_lib/db.rs:611:9: replace IndexDBConn<'a, C, T>::get_indexed -> Result<Option<String>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:549:5: replace table_exists -> Result<bool, sqlite_error> with Ok(false)
stackslib/src/util_lib/db.rs:611:9: replace IndexDBConn<'a, C, T>::get_indexed -> Result<Option<String>, Error> with Ok(Some(String::new()))
stackslib/src/util_lib/db.rs:611:9: replace IndexDBConn<'a, C, T>::get_indexed -> Result<Option<String>, Error> with Ok(Some("xyzzy".into()))
stackslib/src/util_lib/db.rs:647:5: replace tx_busy_handler -> bool with true
stackslib/src/util_lib/db.rs:606:9: replace IndexDBConn<'a, C, T>::get_ancestor_block_height -> Result<Option<u64>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:494:5: replace query_int -> Result<i64, Error> with Ok(-1)
stackslib/src/util_lib/db.rs:733:5: replace get_ancestor_block_hash -> Result<Option<T>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:647:5: replace tx_busy_handler -> bool with false
stackslib/src/util_lib/db.rs:698:5: replace inner_connection_open -> Result<Connection, sqlite_error> with Ok(Default::default())
stackslib/src/util_lib/db.rs:754:5: replace load_indexed -> Result<Option<String>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:259:9: replace <impl FromColumn for Secp256k1PrivateKey>::from_column -> Result<Secp256k1PrivateKey, Error> with Ok(Default::default())
stackslib/src/util_lib/db.rs:754:5: replace load_indexed -> Result<Option<String>, Error> with Ok(Some(String::new()))
stackslib/src/util_lib/db.rs:754:5: replace load_indexed -> Result<Option<String>, Error> with Ok(Some("xyzzy".into()))
stackslib/src/util_lib/db.rs:783:5: replace get_indexed -> Result<Option<String>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:783:5: replace get_indexed -> Result<Option<String>, Error> with Ok(Some(String::new()))
stackslib/src/util_lib/db.rs:783:5: replace get_indexed -> Result<Option<String>, Error> with Ok(Some("xyzzy".into()))
stackslib/src/util_lib/db.rs:834:9: replace IndexDBTx<'a, C, T>::instantiate_index -> Result<(), Error> with Ok(())
stackslib/src/util_lib/db.rs:858:9: replace IndexDBTx<'a, C, T>::get_ancestor_block_hash -> Result<Option<T>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:745:5: replace get_ancestor_block_height -> Result<Option<u64>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:872:9: replace IndexDBTx<'a, C, T>::get_ancestor_block_height -> Result<Option<u64>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:891:9: replace IndexDBTx<'a, C, T>::get_indexed -> Result<Option<String>, Error> with Ok(None)
stackslib/src/util_lib/db.rs:891:9: replace IndexDBTx<'a, C, T>::get_indexed -> Result<Option<String>, Error> with Ok(Some(String::new()))
stackslib/src/util_lib/db.rs:891:9: replace IndexDBTx<'a, C, T>::get_indexed -> Result<Option<String>, Error> with Ok(Some("xyzzy".into()))
stackslib/src/util_lib/db.rs:904:9: replace IndexDBTx<'a, C, T>::put_indexed_all -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/util_lib/db.rs:926:9: replace IndexDBTx<'a, C, T>::commit -> Result<(), Error> with Ok(())
stackslib/src/util_lib/db.rs:938:9: replace IndexDBTx<'a, C, T>::get_root_hash_at -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/util_lib/db.rs:606:9: replace IndexDBConn<'a, C, T>::get_ancestor_block_height -> Result<Option<u64>, Error> with Ok(Some(1))
stackslib/src/util_lib/bloom.rs:43:9: replace BitField::num_bits -> u32 with 0
stackslib/src/util_lib/db.rs:686:5: replace trace_profile with ()
stackslib/src/util_lib/bloom.rs:43:9: replace BitField::num_bits -> u32 with 1
stackslib/src/util_lib/bloom.rs:47:9: replace BitField::test -> bool with true
stackslib/src/util_lib/bloom.rs:47:9: replace BitField::test -> bool with false
stackslib/src/util_lib/bloom.rs:54:9: replace BitField::set with ()
stackslib/src/util_lib/db.rs:872:9: replace IndexDBTx<'a, C, T>::get_ancestor_block_height -> Result<Option<u64>, Error> with Ok(Some(1))
stackslib/src/util_lib/bloom.rs:185:9: replace <impl StacksMessageCodec for BloomNodeHasher>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/util_lib/bloom.rs:78:5: replace encode_bitfield -> Result<(), codec_error> with Ok(())
stackslib/src/util_lib/bloom.rs:236:5: replace bloom_hash_count -> (u32, u32) with (0, 1)
stackslib/src/util_lib/bloom.rs:236:5: replace bloom_hash_count -> (u32, u32) with (0, 0)
stackslib/src/util_lib/bloom.rs:236:5: replace bloom_hash_count -> (u32, u32) with (1, 0)
stackslib/src/util_lib/bloom.rs:107:5: replace decode_bitfield -> Result<Vec<u8>, codec_error> with Ok(vec![])
stackslib/src/util_lib/bloom.rs:222:9: replace <impl Display for BloomFilter<BloomNodeHasher>>::fmt -> Result<(), std::fmt::Error> with Ok(())
stackslib/src/util_lib/bloom.rs:107:5: replace decode_bitfield -> Result<Vec<u8>, codec_error> with Ok(vec![1])
stackslib/src/util_lib/bloom.rs:381:9: replace BloomCounter<H>::try_load -> Result<Option<BloomCounter<H>>, db_error> with Ok(None)
stackslib/src/util_lib/bloom.rs:236:5: replace bloom_hash_count -> (u32, u32) with (1, 1)
stackslib/src/util_lib/bloom.rs:408:9: replace BloomCounter<H>::get_seed -> &[u8; 32] with &[0; 32]
stackslib/src/util_lib/bloom.rs:282:9: replace BloomFilter<H>::contains_raw -> bool with false
stackslib/src/util_lib/bloom.rs:107:5: replace decode_bitfield -> Result<Vec<u8>, codec_error> with Ok(vec![0])
stackslib/src/util_lib/bloom.rs:430:9: replace BloomCounter<H>::get_counts_bin -> u32 with 1
stackslib/src/util_lib/bloom.rs:143:9: replace <impl StacksMessageCodec for BitField>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/util_lib/bloom.rs:282:9: replace BloomFilter<H>::contains_raw -> bool with true
stackslib/src/util_lib/bloom.rs:430:9: replace BloomCounter<H>::get_counts_bin -> u32 with 0
stackslib/src/util_lib/bloom.rs:459:9: replace BloomCounter<H>::insert_raw -> Result<u32, db_error> with Ok(0)
stackslib/src/util_lib/bloom.rs:262:9: replace BloomFilter<H>::insert_raw -> bool with true
stackslib/src/util_lib/bloom.rs:445:9: replace BloomCounter<H>::set_counts_bin with ()
stackslib/src/util_lib/bloom.rs:459:9: replace BloomCounter<H>::insert_raw -> Result<u32, db_error> with Ok(1)
stackslib/src/util_lib/bloom.rs:480:9: replace BloomCounter<H>::count_raw -> Result<u32, db_error> with Ok(0)
stackslib/src/util_lib/bloom.rs:262:9: replace BloomFilter<H>::insert_raw -> bool with false
stackslib/src/util_lib/bloom.rs:301:9: replace <impl StacksMessageCodec for BloomFilter<BloomNodeHasher>>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/util_lib/bloom.rs:504:9: replace BloomCounter<H>::remove_raw -> Result<u32, db_error> with Ok(0)
stackslib/src/util_lib/bloom.rs:589:9: replace <impl BloomHash for BloomNodeHasher>::get_seed -> &[u8; 32] with &[1; 32]
stackslib/src/util_lib/bloom.rs:504:9: replace BloomCounter<H>::remove_raw -> Result<u32, db_error> with Ok(1)
stackslib/src/util_lib/bloom.rs:568:9: replace <impl BloomHash for BloomNodeHasher>::pick_bin -> u32 with 0
stackslib/src/util_lib/strings.rs:102:9: replace <impl StacksMessageCodec for StacksString>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/util_lib/bloom.rs:568:9: replace <impl BloomHash for BloomNodeHasher>::pick_bin -> u32 with 1
stackslib/src/util_lib/bloom.rs:480:9: replace BloomCounter<H>::count_raw -> Result<u32, db_error> with Ok(1)
stackslib/src/util_lib/strings.rs:199:9: replace StacksString::is_valid_string -> bool with false
stackslib/src/util_lib/strings.rs:135:9: replace <impl StacksMessageCodec for UrlString>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/util_lib/strings.rs:203:9: replace StacksString::is_printable -> bool with false
stackslib/src/util_lib/strings.rs:218:9: replace StacksString::is_clarity_variable -> bool with false
stackslib/src/util_lib/strings.rs:229:9: replace StacksString::from_str -> Option<StacksString> with None
stackslib/src/util_lib/strings.rs:237:9: replace StacksString::to_string -> String with String::new()
stackslib/src/util_lib/strings.rs:237:9: replace StacksString::to_string -> String with "xyzzy".into()
stackslib/src/util_lib/strings.rs:63:9: replace <impl Display for VecDisplay<'a, T>>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/util_lib/strings.rs:222:9: replace StacksString::from_string -> Option<StacksString> with None
stackslib/src/util_lib/strings.rs:83:9: replace <impl Debug for StacksString>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/util_lib/strings.rs:199:9: replace StacksString::is_valid_string -> bool with true
stackslib/src/util_lib/strings.rs:310:9: replace UrlString::get_port -> Option<u16> with Some(0)
stackslib/src/util_lib/strings.rs:96:9: replace <impl DerefMut for StacksString>::deref_mut -> &mut Vec<u8> with Box::leak(Box::new(vec![0]))
stackslib/src/util_lib/strings.rs:203:9: replace StacksString::is_printable -> bool with true
stackslib/src/net/atlas/mod.rs:196:9: replace AttachmentInstance::try_new_from_value -> Option<AttachmentInstance> with None
stackslib/src/util_lib/strings.rs:287:9: replace UrlString::has_routable_host -> bool with false
stackslib/src/net/api/mod.rs:72:9: replace StacksHttp::register_rpc_methods with ()
stackslib/src/net/asn.rs:50:9: replace ASEntry4::read_asn4_sequence -> Result<Vec<ASEntry4>, net_error> with Ok(vec![])
stackslib/src/net/asn.rs:103:9: replace ASEntry4::read_asn4 -> Result<Option<ASEntry4>, net_error> with Ok(None)
stackslib/src/net/chat.rs:163:9: replace NeighborStats::add_healthpoint -> () with ()
stackslib/src/net/chat.rs:78:53: replace * with /
stackslib/src/net/chat.rs:71:43: replace * with /
stackslib/src/net/chat.rs:177:9: replace NeighborStats::add_block_push -> () with ()
stackslib/src/net/chat.rs:99:9: replace RelayStats::merge with ()
stackslib/src/net/chat.rs:259:9: replace NeighborStats::get_bandwidth -> f64 with 0.0
stackslib/src/net/chat.rs:188:9: replace NeighborStats::add_microblocks_push -> () with ()
stackslib/src/net/chat.rs:199:9: replace NeighborStats::add_transaction_push -> () with ()
stackslib/src/net/chat.rs:210:9: replace NeighborStats::add_stackerdb_push -> () with ()
stackslib/src/net/chat.rs:218:9: replace NeighborStats::add_relayer -> () with ()
stackslib/src/net/chat.rs:233:9: replace NeighborStats::take_relayers -> HashMap<NeighborAddress, RelayStats> with HashMap::new()
stackslib/src/net/chat.rs:241:9: replace NeighborStats::get_health_score -> f64 with 0.0
stackslib/src/net/chat.rs:241:9: replace NeighborStats::get_health_score -> f64 with 1.0
stackslib/src/net/chat.rs:283:9: replace NeighborStats::get_block_push_bandwidth -> f64 with 1.0
stackslib/src/net/chat.rs:241:9: replace NeighborStats::get_health_score -> f64 with -1.0
stackslib/src/net/chat.rs:288:9: replace NeighborStats::get_microblocks_push_bandwidth -> f64 with 1.0
stackslib/src/net/chat.rs:259:9: replace NeighborStats::get_bandwidth -> f64 with 1.0
stackslib/src/net/chat.rs:298:9: replace NeighborStats::get_stackerdb_push_bandwidth -> f64 with 0.0
stackslib/src/net/chat.rs:293:9: replace NeighborStats::get_transaction_push_bandwidth -> f64 with -1.0
stackslib/src/net/chat.rs:259:9: replace NeighborStats::get_bandwidth -> f64 with -1.0
stackslib/src/net/chat.rs:283:9: replace NeighborStats::get_block_push_bandwidth -> f64 with 0.0
stackslib/src/net/chat.rs:298:9: replace NeighborStats::get_stackerdb_push_bandwidth -> f64 with -1.0
stackslib/src/net/chat.rs:283:9: replace NeighborStats::get_block_push_bandwidth -> f64 with -1.0
stackslib/src/net/chat.rs:288:9: replace NeighborStats::get_microblocks_push_bandwidth -> f64 with 0.0
stackslib/src/net/chat.rs:288:9: replace NeighborStats::get_microblocks_push_bandwidth -> f64 with -1.0
stackslib/src/net/chat.rs:373:9: replace <impl Display for ConversationP2P>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/net/chat.rs:293:9: replace NeighborStats::get_transaction_push_bandwidth -> f64 with 0.0
stackslib/src/net/chat.rs:293:9: replace NeighborStats::get_transaction_push_bandwidth -> f64 with 1.0
stackslib/src/net/chat.rs:298:9: replace NeighborStats::get_stackerdb_push_bandwidth -> f64 with 1.0
stackslib/src/net/chat.rs:632:9: replace ConversationP2P::is_outbound -> bool with false
stackslib/src/net/chat.rs:636:9: replace ConversationP2P::is_authenticated -> bool with true
stackslib/src/net/chat.rs:385:9: replace <impl Debug for ConversationP2P>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/net/chat.rs:427:9: replace Neighbor::handshake_update -> Result<(), net_error> with Ok(())
stackslib/src/net/chat.rs:649:9: replace ConversationP2P::ref_public_key -> Option<&StacksPublicKey> with None
stackslib/src/net/chat.rs:640:9: replace ConversationP2P::get_public_key -> Option<StacksPublicKey> with None
stackslib/src/net/chat.rs:636:9: replace ConversationP2P::is_authenticated -> bool with false
stackslib/src/net/chat.rs:653:9: replace ConversationP2P::get_burnchain_tip_height -> u64 with 0
stackslib/src/net/chat.rs:677:9: replace ConversationP2P::supports_stackerdb -> bool with true
stackslib/src/net/chat.rs:677:9: replace ConversationP2P::supports_stackerdb -> bool with false
stackslib/src/net/chat.rs:682:9: replace ConversationP2P::replicates_stackerdb -> bool with true
stackslib/src/net/chat.rs:671:9: replace ConversationP2P::supports_mempool_query -> bool with true
stackslib/src/net/chat.rs:682:9: replace ConversationP2P::replicates_stackerdb -> bool with false
stackslib/src/net/chat.rs:698:9: replace ConversationP2P::check_burn_header_hash_disagreement -> bool with true
stackslib/src/net/chat.rs:698:9: replace ConversationP2P::check_burn_header_hash_disagreement -> bool with false
stackslib/src/net/chat.rs:1033:9: replace ConversationP2P::validate_handshake -> Result<(), net_error> with Ok(())
stackslib/src/net/chat.rs:732:9: replace ConversationP2P::has_acceptable_epoch -> bool with true
stackslib/src/net/chat.rs:732:9: replace ConversationP2P::has_acceptable_epoch -> bool with false
stackslib/src/net/chat.rs:1116:9: replace ConversationP2P::update_from_handshake_data -> Result<bool, net_error> with Ok(true)
stackslib/src/net/chat.rs:791:9: replace ConversationP2P::is_preamble_valid -> Result<bool, net_error> with Ok(true)
stackslib/src/net/chat.rs:1116:9: replace ConversationP2P::update_from_handshake_data -> Result<bool, net_error> with Ok(false)
stackslib/src/net/chat.rs:791:9: replace ConversationP2P::is_preamble_valid -> Result<bool, net_error> with Ok(false)
stackslib/src/net/chat.rs:1199:9: replace ConversationP2P::handle_handshake -> Result<(Option<StacksMessage>, bool), net_error> with Ok((None, true))
stackslib/src/net/chat.rs:1155:9: replace ConversationP2P::update_from_stacker_db_handshake_data with ()
stackslib/src/net/chat.rs:1165:9: replace ConversationP2P::get_stackerdb_contract_ids -> &[QualifiedContractIdentifier] with Vec::leak(Vec::new())
stackslib/src/net/chat.rs:1199:9: replace ConversationP2P::handle_handshake -> Result<(Option<StacksMessage>, bool), net_error> with Ok((None, false))
stackslib/src/net/chat.rs:1317:9: replace ConversationP2P::handle_handshake_accept -> Result<(), net_error> with Ok(())
stackslib/src/net/chat.rs:1377:9: replace ConversationP2P::handle_ping -> Result<Option<StacksMessage>, net_error> with Ok(None)
stackslib/src/net/chat.rs:1880:9: replace ConversationP2P::check_relayer_cycles -> bool with true
stackslib/src/net/chat.rs:1880:9: replace ConversationP2P::check_relayer_cycles -> bool with false
stackslib/src/net/chat.rs:1982:9: replace ConversationP2P::validate_microblocks_push -> Result<Option<ReplyHandleP2P>, net_error> with Ok(None)
stackslib/src/net/chat.rs:1892:9: replace ConversationP2P::check_relayers_remote -> bool with true
stackslib/src/net/chat.rs:1892:9: replace ConversationP2P::check_relayers_remote -> bool with false
stackslib/src/net/chat.rs:1911:9: replace ConversationP2P::process_relayers -> bool with true
stackslib/src/net/chat.rs:1911:9: replace ConversationP2P::process_relayers -> bool with false
stackslib/src/net/chat.rs:1943:9: replace ConversationP2P::validate_blocks_push -> Result<Option<ReplyHandleP2P>, net_error> with Ok(None)
stackslib/src/net/chat.rs:2019:9: replace ConversationP2P::validate_transaction_push -> Result<Option<ReplyHandleP2P>, net_error> with Ok(None)
stackslib/src/net/chat.rs:2057:9: replace ConversationP2P::validate_stackerdb_push -> Result<Option<ReplyHandleP2P>, net_error> with Ok(None)
stackslib/src/net/chat.rs:2096:9: replace ConversationP2P::handle_data_message -> Result<Option<StacksMessage>, net_error> with Ok(None)
stackslib/src/net/chat.rs:2188:9: replace ConversationP2P::recv -> Result<usize, net_error> with Ok(0)
stackslib/src/net/chat.rs:2188:9: replace ConversationP2P::recv -> Result<usize, net_error> with Ok(1)
stackslib/src/net/chat.rs:2220:9: replace ConversationP2P::send -> Result<usize, net_error> with Ok(0)
stackslib/src/net/chat.rs:2285:9: replace ConversationP2P::validate_inbound_message -> Result<bool, net_error> with Ok(false)
stackslib/src/net/chat.rs:2220:9: replace ConversationP2P::send -> Result<usize, net_error> with Ok(1)
stackslib/src/net/chat.rs:2249:9: replace ConversationP2P::try_flush -> Result<(), net_error> with Ok(())
stackslib/src/net/chat.rs:2274:9: replace ConversationP2P::num_pending_outbound -> usize with 1
stackslib/src/net/chat.rs:2571:9: replace ConversationP2P::chat -> Result<Vec<StacksMessage>, net_error> with Ok(vec![])
stackslib/src/net/chat.rs:2319:9: replace ConversationP2P::handle_authenticated_control_message -> Result<(Option<StacksMessage>, bool), net_error> with Ok((None, true))
stackslib/src/net/chat.rs:2398:9: replace ConversationP2P::handle_unauthenticated_control_message -> Result<(Option<StacksMessage>, bool), net_error> with Ok((None, true))
stackslib/src/net/chat.rs:2319:9: replace ConversationP2P::handle_authenticated_control_message -> Result<(Option<StacksMessage>, bool), net_error> with Ok((None, false))
stackslib/src/net/codec.rs:114:9: replace Preamble::verify -> Result<(), net_error> with Ok(())
stackslib/src/net/codec.rs:146:9: replace <impl StacksMessageCodec for Preamble>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:217:9: replace <impl StacksMessageCodec for GetBlocksInv>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:275:9: replace BlocksInvData::compress_bools -> Vec<u8> with vec![0]
stackslib/src/net/codec.rs:275:9: replace BlocksInvData::compress_bools -> Vec<u8> with vec![]
stackslib/src/net/codec.rs:275:9: replace BlocksInvData::compress_bools -> Vec<u8> with vec![1]
stackslib/src/net/codec.rs:299:9: replace BlocksInvData::has_ith_block -> bool with true
stackslib/src/net/codec.rs:299:9: replace BlocksInvData::has_ith_block -> bool with false
stackslib/src/net/codec.rs:309:9: replace BlocksInvData::has_ith_microblock_stream -> bool with false
stackslib/src/net/codec.rs:309:9: replace BlocksInvData::has_ith_microblock_stream -> bool with true
stackslib/src/net/chat.rs:2398:9: replace ConversationP2P::handle_unauthenticated_control_message -> Result<(Option<StacksMessage>, bool), net_error> with Ok((None, false))
stackslib/src/net/codec.rs:343:9: replace PoxInvData::has_ith_reward_cycle -> bool with true
stackslib/src/net/codec.rs:415:9: replace <impl StacksMessageCodec for BlocksDatum>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:343:9: replace PoxInvData::has_ith_reward_cycle -> bool with false
stackslib/src/net/chat.rs:2673:9: replace ConversationP2P::clear_timeouts -> () with ()
stackslib/src/net/chat.rs:2514:9: replace ConversationP2P::update_stats with ()
stackslib/src/net/codec.rs:83:9: replace Preamble::sign -> Result<(), net_error> with Ok(())
stackslib/src/net/codec.rs:404:9: replace BlocksAvailableData::try_push -> Result<(), net_error> with Ok(())
stackslib/src/net/codec.rs:240:9: replace <impl StacksMessageCodec for BlocksInvData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:321:9: replace <impl StacksMessageCodec for GetPoxInv>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:355:9: replace <impl StacksMessageCodec for PoxInvData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:378:9: replace <impl StacksMessageCodec for BlocksAvailableData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:572:9: replace <impl StacksMessageCodec for HandshakeData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:505:9: replace <impl StacksMessageCodec for NeighborAddress>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:526:9: replace <impl StacksMessageCodec for NeighborsData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:616:9: replace <impl StacksMessageCodec for HandshakeAcceptData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:785:9: replace <impl StacksMessageCodec for StackerDBChunkInvData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:768:9: replace <impl StacksMessageCodec for StackerDBGetChunkInvData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:639:9: replace <impl StacksMessageCodec for NackData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:659:9: replace <impl StacksMessageCodec for PingData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:828:9: replace <impl StacksMessageCodec for StackerDBPushChunkData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:677:9: replace <impl StacksMessageCodec for PongData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:898:9: replace StacksMessageType::get_message_name -> &'static str with "xyzzy"
stackslib/src/net/codec.rs:738:9: replace <impl StacksMessageCodec for StackerDBHandshakeData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:1088:9: replace <impl StacksMessageCodec for StacksMessageType>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:848:9: replace <impl StacksMessageCodec for RelayData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:689:9: replace <impl StacksMessageCodec for NatPunchData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:1315:9: replace StacksMessage::do_sign -> Result<(), net_error> with Ok(())
stackslib/src/net/codec.rs:1326:9: replace StacksMessage::sign -> Result<(), net_error> with Ok(())
stackslib/src/net/codec.rs:711:5: replace contract_id_consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:1384:9: replace StacksMessage::verify_secp256k1 -> Result<(), net_error> with Ok(())
stackslib/src/net/codec.rs:805:9: replace <impl StacksMessageCodec for StackerDBGetChunkData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:930:9: replace StacksMessageType::get_message_description -> String with String::new()
stackslib/src/net/codec.rs:1232:9: replace <impl StacksMessageCodec for StacksMessage>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/net/codec.rs:1340:9: replace StacksMessage::sign_relay -> Result<(), net_error> with Ok(())
stackslib/src/net/codec.rs:1425:9: replace <impl ProtocolFamily for StacksP2P>::payload_len -> Option<usize> with None
stackslib/src/net/codec.rs:1447:9: replace <impl ProtocolFamily for StacksP2P>::stream_payload -> Result<(Option<(StacksMessage, usize)>, usize), net_error> with Ok((None, 0))
stackslib/src/net/codec.rs:1420:9: replace <impl ProtocolFamily for StacksP2P>::preamble_size_hint -> usize with 0
stackslib/src/net/codec.rs:1420:9: replace <impl ProtocolFamily for StacksP2P>::preamble_size_hint -> usize with 1
stackslib/src/net/codec.rs:1480:9: replace <impl ProtocolFamily for StacksP2P>::verify_payload_bytes -> Result<(), Error> with Ok(())
stackslib/src/net/codec.rs:1400:9: replace <impl MessageSequence for StacksMessage>::request_id -> u32 with 0
stackslib/src/net/connection.rs:124:9: replace NetworkReplyHandle<P>::set_deadline -> () with ()
stackslib/src/net/codec.rs:1425:9: replace <impl ProtocolFamily for StacksP2P>::payload_len -> Option<usize> with Some(0)
stackslib/src/net/codec.rs:1400:9: replace <impl MessageSequence for StacksMessage>::request_id -> u32 with 1
stackslib/src/net/codec.rs:1447:9: replace <impl ProtocolFamily for StacksP2P>::stream_payload -> Result<(Option<(StacksMessage, usize)>, usize), net_error> with Ok((None, 1))
stackslib/src/net/connection.rs:220:9: replace NetworkReplyHandle<P>::pipe_flush -> io::Result<()> with Ok(())
stackslib/src/net/codec.rs:1425:9: replace <impl ProtocolFamily for StacksP2P>::payload_len -> Option<usize> with Some(1)
stackslib/src/net/connection.rs:259:9: replace NetworkReplyHandle<P>::try_flush -> Result<bool, net_error> with Ok(false)
stackslib/src/net/connection.rs:229:9: replace NetworkReplyHandle<P>::try_flush_ex -> Result<bool, net_error> with Ok(true)
stackslib/src/net/connection.rs:75:9: replace ReceiverNotify<P>::send with ()
stackslib/src/net/codec.rs:1491:9: replace <impl ProtocolFamily for StacksP2P>::write_message -> Result<(), net_error> with Ok(())
stackslib/src/net/connection.rs:129:9: replace NetworkReplyHandle<P>::get_event_id -> usize with 0
stackslib/src/net/connection.rs:229:9: replace NetworkReplyHandle<P>::try_flush_ex -> Result<bool, net_error> with Ok(false)
stackslib/src/net/connection.rs:129:9: replace NetworkReplyHandle<P>::get_event_id -> usize with 1
stackslib/src/net/connection.rs:259:9: replace NetworkReplyHandle<P>::try_flush -> Result<bool, net_error> with Ok(true)
stackslib/src/net/connection.rs:264:9: replace NetworkReplyHandle<P>::inner_pipe_out -> Option<&mut PipeWrite> with None
stackslib/src/net/connection.rs:270:9: replace <impl Write for NetworkReplyHandle<P>>::write -> io::Result<usize> with Ok(0)
stackslib/src/net/connection.rs:530:9: replace ConnectionInbox<P>::buffer_preamble_bytes -> usize with 0
stackslib/src/net/connection.rs:270:9: replace <impl Write for NetworkReplyHandle<P>>::write -> io::Result<usize> with Ok(1)
stackslib/src/net/connection.rs:530:9: replace ConnectionInbox<P>::buffer_preamble_bytes -> usize with 1
stackslib/src/net/connection.rs:561:9: replace ConnectionInbox<P>::consume_preamble -> Result<(Option<P::Preamble>, usize), net_error> with Ok((None, 1))
stackslib/src/net/connection.rs:710:9: replace ConnectionInbox<P>::consume_payload_unknown_length -> Result<Option<P::Message>, net_error> with Ok(None)
stackslib/src/net/connection.rs:618:9: replace ConnectionInbox<P>::buffer_message_bytes -> usize with 1
stackslib/src/net/connection.rs:651:9: replace ConnectionInbox<P>::consume_payload_known_length -> Result<Option<P::Message>, net_error> with Ok(None)
stackslib/src/net/connection.rs:769:9: replace ConnectionInbox<P>::consume_payload -> Result<(Option<P::Message>, usize), net_error> with Ok((None, 0))
stackslib/src/net/connection.rs:769:9: replace ConnectionInbox<P>::consume_payload -> Result<(Option<P::Message>, usize), net_error> with Ok((None, 1))
stackslib/src/net/connection.rs:912:9: replace ConnectionInbox<P>::recv_bytes -> Result<usize, net_error> with Ok(1)
stackslib/src/net/connection.rs:791:9: replace ConnectionInbox<P>::consume_messages -> Result<(), net_error> with Ok(())
stackslib/src/net/connection.rs:975:9: replace ConnectionInbox<P>::next_message -> Option<P::Message> with None
stackslib/src/net/connection.rs:1035:9: replace ConnectionOutbox<P>::queue_message -> Result<(), net_error> with Ok(())
stackslib/src/net/connection.rs:912:9: replace ConnectionInbox<P>::recv_bytes -> Result<usize, net_error> with Ok(0)
stackslib/src/net/connection.rs:997:9: replace ConnectionOutbox<P>::begin_next_message -> Option<PipeRead> with None
stackslib/src/net/connection.rs:1193:9: replace ConnectionOutbox<P>::num_messages -> usize with 0
stackslib/src/net/connection.rs:1055:9: replace ConnectionOutbox<P>::send_bytes -> Result<usize, net_error> with Ok(1)
stackslib/src/net/connection.rs:1214:9: replace NetworkConnection<P>::is_solicited -> bool with false
stackslib/src/net/connection.rs:980:9: replace ConnectionInbox<P>::num_messages -> usize with 0
stackslib/src/net/connection.rs:1014:9: replace ConnectionOutbox<P>::finish_message -> () with ()
stackslib/src/net/connection.rs:980:9: replace ConnectionInbox<P>::num_messages -> usize with 1
stackslib/src/net/connection.rs:1348:9: replace NetworkConnection<P>::send_data -> Result<usize, net_error> with Ok(1)
stackslib/src/net/connection.rs:1348:9: replace NetworkConnection<P>::send_data -> Result<usize, net_error> with Ok(0)
stackslib/src/net/connection.rs:1358:9: replace NetworkConnection<P>::inbox_len -> usize with 0
stackslib/src/net/connection.rs:1214:9: replace NetworkConnection<P>::is_solicited -> bool with true
stackslib/src/net/connection.rs:1055:9: replace ConnectionOutbox<P>::send_bytes -> Result<usize, net_error> with Ok(0)
stackslib/src/net/connection.rs:1231:9: replace NetworkConnection<P>::fulfill_request -> Option<P::Message> with None
stackslib/src/net/connection.rs:1353:9: replace NetworkConnection<P>::recv_data -> Result<usize, net_error> with Ok(0)
stackslib/src/net/connection.rs:1255:9: replace NetworkConnection<P>::drain_inbox -> Vec<P::Message> with vec![]
stackslib/src/net/connection.rs:1280:9: replace NetworkConnection<P>::drain_timeouts -> usize with 0
stackslib/src/net/connection.rs:1280:9: replace NetworkConnection<P>::drain_timeouts -> usize with 1
stackslib/src/net/connection.rs:1358:9: replace NetworkConnection<P>::inbox_len -> usize with 1
stackslib/src/net/connection.rs:1368:9: replace NetworkConnection<P>::next_inbox_message -> Option<P::Message> with None
stackslib/src/net/connection.rs:1373:9: replace NetworkConnection<P>::set_public_key -> () with ()
stackslib/src/net/connection.rs:1378:9: replace NetworkConnection<P>::get_public_key -> Option<Secp256k1PublicKey> with None
stackslib/src/net/connection.rs:1378:9: replace NetworkConnection<P>::get_public_key -> Option<Secp256k1PublicKey> with Some(Default::default())
stackslib/src/net/db.rs:409:9: replace PeerDB::instantiate -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:495:9: replace PeerDB::get_schema_version -> Result<String, db_error> with Ok(String::new())
stackslib/src/net/db.rs:495:9: replace PeerDB::get_schema_version -> Result<String, db_error> with Ok("xyzzy".into())
stackslib/src/net/connection.rs:1391:9: replace NetworkConnection<P>::has_public_key -> bool with true
stackslib/src/net/db.rs:515:9: replace PeerDB::apply_schema_migrations -> Result<String, db_error> with Ok(String::new())
stackslib/src/net/db.rs:515:9: replace PeerDB::apply_schema_migrations -> Result<String, db_error> with Ok("xyzzy".into())
stackslib/src/net/connection.rs:1391:9: replace NetworkConnection<P>::has_public_key -> bool with false
stackslib/src/net/connection.rs:1400:9: replace NetworkConnection<P>::send_message -> Result<(), net_error> with Ok(())
stackslib/src/net/db.rs:545:9: replace PeerDB::update_local_peer -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:562:9: replace PeerDB::reset_denies -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:568:9: replace PeerDB::reset_allows -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:574:9: replace PeerDB::refresh_denies -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:584:9: replace PeerDB::refresh_allows -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:805:9: replace PeerDB::set_local_ipaddr -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:867:9: replace PeerDB::peer_slots -> Result<Vec<u32>, db_error> with Ok(vec![1])
stackslib/src/net/db.rs:918:9: replace PeerDB::has_peer -> Result<bool, db_error> with Ok(true)
stackslib/src/net/db.rs:816:9: replace PeerDB::set_local_services -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:867:9: replace PeerDB::peer_slots -> Result<Vec<u32>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:831:9: replace PeerDB::set_local_private_key -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:867:9: replace PeerDB::peer_slots -> Result<Vec<u32>, db_error> with Ok(vec![0])
stackslib/src/net/db.rs:903:9: replace PeerDB::get_peer -> Result<Option<Neighbor>, db_error> with Ok(None)
stackslib/src/net/db.rs:918:9: replace PeerDB::has_peer -> Result<bool, db_error> with Ok(false)
stackslib/src/net/db.rs:943:9: replace PeerDB::get_peer_at -> Result<Option<Neighbor>, db_error> with Ok(None)
stackslib/src/net/db.rs:950:9: replace PeerDB::has_peer_at -> Result<bool, db_error> with Ok(true)
stackslib/src/net/db.rs:950:9: replace PeerDB::has_peer_at -> Result<bool, db_error> with Ok(false)
stackslib/src/net/db.rs:964:9: replace PeerDB::is_peer_denied -> Result<bool, db_error> with Ok(true)
stackslib/src/net/db.rs:1015:9: replace PeerDB::get_bootstrap_peers -> Result<Vec<Neighbor>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1008:9: replace PeerDB::get_always_allowed_peers -> Result<Vec<Neighbor>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1026:9: replace PeerDB::insert_or_replace_stacker_dbs -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1048:9: replace PeerDB::insert_or_replace_peer -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1093:9: replace PeerDB::drop_peer -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:990:9: replace PeerDB::is_peer_always_allowed -> Result<bool, db_error> with Ok(false)
stackslib/src/net/db.rs:1160:9: replace PeerDB::set_allow_peer -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1297:9: replace PeerDB::find_peer_slot -> Result<Option<u32>, db_error> with Ok(Some(1))
stackslib/src/net/db.rs:1136:9: replace PeerDB::set_initial_peer -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1117:9: replace PeerDB::is_initial_peer -> Result<bool, db_error> with Ok(false)
stackslib/src/net/db.rs:1201:9: replace PeerDB::set_deny_peer -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1297:9: replace PeerDB::find_peer_slot -> Result<Option<u32>, db_error> with Ok(None)
stackslib/src/net/db.rs:1297:9: replace PeerDB::find_peer_slot -> Result<Option<u32>, db_error> with Ok(Some(0))
stackslib/src/net/db.rs:1410:9: replace PeerDB::try_insert_peer -> Result<bool, db_error> with Ok(false)
stackslib/src/net/db.rs:1410:9: replace PeerDB::try_insert_peer -> Result<bool, db_error> with Ok(true)
stackslib/src/net/db.rs:1450:9: replace PeerDB::add_cidr_prefix -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1309:9: replace PeerDB::get_stacker_dbs_by_slot -> Result<Vec<QualifiedContractIdentifier>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1324:9: replace PeerDB::get_stacker_db_slots -> Result<Vec<u32>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1324:9: replace PeerDB::get_stacker_db_slots -> Result<Vec<u32>, db_error> with Ok(vec![0])
stackslib/src/net/db.rs:1324:9: replace PeerDB::get_stacker_db_slots -> Result<Vec<u32>, db_error> with Ok(vec![1])
stackslib/src/net/db.rs:1334:9: replace PeerDB::static_get_peer_stacker_dbs -> Result<Vec<QualifiedContractIdentifier>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1352:9: replace PeerDB::get_peer_stacker_dbs -> Result<Vec<QualifiedContractIdentifier>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1501:9: replace PeerDB::get_denied_cidrs -> Result<Vec<(PeerAddress, u32)>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1364:9: replace PeerDB::update_peer_stacker_dbs -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1511:9: replace PeerDB::is_address_denied -> Result<bool, db_error> with Ok(false)
stackslib/src/net/db.rs:1480:9: replace PeerDB::get_cidr_prefixes -> Result<Vec<(PeerAddress, u32)>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1506:9: replace PeerDB::get_allowed_cidrs -> Result<Vec<(PeerAddress, u32)>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1595:9: replace PeerDB::get_random_neighbors -> Result<Vec<Neighbor>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1511:9: replace PeerDB::is_address_denied -> Result<bool, db_error> with Ok(true)
stackslib/src/net/db.rs:1527:9: replace PeerDB::cidr_prefix_to_string -> String with String::new()
stackslib/src/net/db.rs:1726:9: replace PeerDB::asn4_lookup -> Result<Option<u32>, db_error> with Ok(None)
stackslib/src/net/db.rs:1726:9: replace PeerDB::asn4_lookup -> Result<Option<u32>, db_error> with Ok(Some(0))
stackslib/src/net/db.rs:1527:9: replace PeerDB::cidr_prefix_to_string -> String with "xyzzy".into()
stackslib/src/net/db.rs:1544:9: replace PeerDB::apply_cidr_filter -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1744:9: replace PeerDB::asn_lookup -> Result<Option<u32>, db_error> with Ok(Some(1))
stackslib/src/net/db.rs:1564:9: replace PeerDB::add_allow_cidr -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1744:9: replace PeerDB::asn_lookup -> Result<Option<u32>, db_error> with Ok(None)
stackslib/src/net/db.rs:1726:9: replace PeerDB::asn4_lookup -> Result<Option<u32>, db_error> with Ok(Some(1))
stackslib/src/net/db.rs:1578:9: replace PeerDB::add_deny_cidr -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1754:9: replace PeerDB::asn_count -> Result<u64, db_error> with Ok(1)
stackslib/src/net/db.rs:1761:9: replace PeerDB::get_frontier_size -> Result<u64, db_error> with Ok(0)
stackslib/src/net/db.rs:1616:9: replace PeerDB::get_fresh_random_neighbors -> Result<Vec<Neighbor>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1681:9: replace PeerDB::get_initial_neighbors -> Result<Vec<Neighbor>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1708:9: replace PeerDB::asn4_insert -> Result<(), db_error> with Ok(())
stackslib/src/net/db.rs:1767:9: replace PeerDB::get_all_peers -> Result<Vec<Neighbor>, db_error> with Ok(vec![])
stackslib/src/net/db.rs:1780:9: replace PeerDB::find_stacker_db_replicas -> Result<Vec<Neighbor>, db_error> with Ok(vec![])
stackslib/src/net/dns.rs:53:9: replace DNSRequest::is_timed_out -> bool with true
stackslib/src/net/dns.rs:67:9: replace <impl PartialEq for DNSRequest>::eq -> bool with false
stackslib/src/net/dns.rs:166:9: replace DNSResolver::drain_inbox -> Result<usize, net_error> with Ok(0)
stackslib/src/net/dns.rs:166:9: replace DNSResolver::drain_inbox -> Result<usize, net_error> with Ok(1)
stackslib/src/net/dns.rs:53:9: replace DNSRequest::is_timed_out -> bool with false
stackslib/src/net/dns.rs:204:9: replace DNSResolver::handle_query -> Option<DNSResponse> with None
stackslib/src/net/dns.rs:132:9: replace DNSResolver::add_hardcoded -> () with ()
stackslib/src/net/dns.rs:289:9: replace DNSClient::try_recv -> Result<usize, net_error> with Ok(0)
stackslib/src/net/dns.rs:289:9: replace DNSClient::try_recv -> Result<usize, net_error> with Ok(1)
stackslib/src/net/dns.rs:326:9: replace DNSClient::poll_lookup -> Result<Option<DNSResponse>, net_error> with Ok(None)
stackslib/src/net/dns.rs:220:9: replace DNSResolver::thread_main with ()
stackslib/src/net/dns.rs:264:9: replace DNSClient::queue_lookup -> Result<(), net_error> with Ok(())
stackslib/src/net/dns.rs:67:9: replace <impl PartialEq for DNSRequest>::eq -> bool with true
stackslib/src/net/dns.rs:60:9: replace <impl Hash for DNSRequest>::hash -> () with ()
stackslib/src/net/download.rs:423:9: replace BlockDownloader::getblocks_begin -> () with ()
stackslib/src/net/download.rs:296:9: replace BlockDownloader::reset -> () with ()
stackslib/src/net/download.rs:386:9: replace BlockDownloader::dns_lookups_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/download.rs:386:9: replace BlockDownloader::dns_lookups_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/download.rs:694:9: replace BlockDownloader::get_block_availability -> Result<Vec<(ConsensusHash, Option<BlockHeaderHash>, Vec<NeighborKey>)>, net_error> with Ok(vec![])
stackslib/src/net/download.rs:888:9: replace BlockDownloader::clear_broken_peers -> (Vec<usize>, Vec<NeighborKey>) with (vec![0], vec![])
stackslib/src/net/download.rs:969:9: replace BlockDownloader::hint_download_rescan -> () with ()
stackslib/src/net/download.rs:985:9: replace BlockDownloader::is_download_idle -> bool with true
stackslib/src/net/download.rs:980:9: replace BlockDownloader::num_requests_inflight -> usize with 0
stackslib/src/net/download.rs:990:9: replace BlockDownloader::is_inflight -> bool with true
stackslib/src/net/download.rs:1077:9: replace PeerNetwork::need_anchored_block -> Result<bool, net_error> with Ok(true)
stackslib/src/net/download.rs:907:9: replace BlockDownloader::hint_block_sortition_height_available -> () with ()
stackslib/src/net/download.rs:1195:9: replace PeerNetwork::make_requests -> Result<HashMap<u64, VecDeque<BlockRequestKey>>, net_error> with Ok(HashMap::new())
stackslib/src/net/download.rs:1195:9: replace PeerNetwork::make_requests -> Result<HashMap<u64, VecDeque<BlockRequestKey>>, net_error> with Ok(HashMap::from_iter([(1, VecDeque::new())]))
stackslib/src/net/download.rs:1556:9: replace PeerNetwork::make_confirmed_microblock_requests -> Result<HashMap<u64, VecDeque<BlockRequestKey>>, net_error> with Ok(HashMap::new())
stackslib/src/net/download.rs:1102:9: replace PeerNetwork::can_download_microblock_stream -> Result<bool, net_error> with Ok(true)
stackslib/src/net/download.rs:1077:9: replace PeerNetwork::need_anchored_block -> Result<bool, net_error> with Ok(false)
stackslib/src/net/download.rs:1561:9: replace PeerNetwork::prioritize_requests -> Vec<u64> with vec![0]
stackslib/src/net/download.rs:1561:9: replace PeerNetwork::prioritize_requests -> Vec<u64> with vec![]
stackslib/src/net/download.rs:1576:9: replace PeerNetwork::block_dns_lookups_begin -> Result<(), net_error> with Ok(())
stackslib/src/net/download.rs:1539:9: replace PeerNetwork::make_block_requests -> Result<HashMap<u64, VecDeque<BlockRequestKey>>, net_error> with Ok(HashMap::from_iter([(1, VecDeque::new())]))
stackslib/src/net/download.rs:1561:9: replace PeerNetwork::prioritize_requests -> Vec<u64> with vec![1]
stackslib/src/net/download.rs:1918:9: replace PeerNetwork::begin_request -> Option<(T, usize)> with None
stackslib/src/net/download.rs:1977:9: replace PeerNetwork::block_getblocks_begin -> Result<(), net_error> with Ok(())
stackslib/src/net/download.rs:2316:9: replace PeerNetwork::init_block_downloader -> () with ()
stackslib/src/net/download.rs:2325:9: replace PeerNetwork::init_attachments_downloader -> () with ()
stackslib/src/net/download.rs:2068:9: replace PeerNetwork::finish_downloads -> Result<(bool, bool, Option<PoxId>, Vec<(ConsensusHash, StacksBlock, u64)>, Vec<(ConsensusHash, Vec<StacksMicroblock>, u64)>,), net_error, > with Ok((false, true, None, vec![], vec![]))
stackslib/src/net/download.rs:2007:9: replace PeerNetwork::block_getblocks_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/download.rs:2356:9: replace PeerNetwork::download_blocks -> Result<(bool, bool, Option<PoxId>, Vec<(ConsensusHash, StacksBlock, u64)>, Vec<(ConsensusHash, Vec<StacksMicroblock>, u64)>, Vec<usize>, Vec<NeighborKey>,), net_error, > with Ok((true, true, None, vec![], vec![], vec![], vec![]))
stackslib/src/net/download.rs:2015:9: replace PeerNetwork::block_getmicroblocks_begin -> Result<(), net_error> with Ok(())
stackslib/src/net/download.rs:2356:9: replace PeerNetwork::download_blocks -> Result<(bool, bool, Option<PoxId>, Vec<(ConsensusHash, StacksBlock, u64)>, Vec<(ConsensusHash, Vec<StacksMicroblock>, u64)>, Vec<usize>, Vec<NeighborKey>,), net_error, > with Ok((true, false, None, vec![], vec![], vec![0], vec![]))
stackslib/src/net/download.rs:2356:9: replace PeerNetwork::download_blocks -> Result<(bool, bool, Option<PoxId>, Vec<(ConsensusHash, StacksBlock, u64)>, Vec<(ConsensusHash, Vec<StacksMicroblock>, u64)>, Vec<usize>, Vec<NeighborKey>,), net_error, > with Ok((true, false, None, vec![], vec![], vec![], vec![]))
stackslib/src/net/download.rs:2356:9: replace PeerNetwork::download_blocks -> Result<(bool, bool, Option<PoxId>, Vec<(ConsensusHash, StacksBlock, u64)>, Vec<(ConsensusHash, Vec<StacksMicroblock>, u64)>, Vec<usize>, Vec<NeighborKey>,), net_error, > with Ok((true, true, None, vec![], vec![], vec![0], vec![]))
stackslib/src/net/download.rs:2356:9: replace PeerNetwork::download_blocks -> Result<(bool, bool, Option<PoxId>, Vec<(ConsensusHash, StacksBlock, u64)>, Vec<(ConsensusHash, Vec<StacksMicroblock>, u64)>, Vec<usize>, Vec<NeighborKey>,), net_error, > with Ok((false, true, None, vec![], vec![], vec![], vec![]))
stackslib/src/net/download.rs:2356:9: replace PeerNetwork::download_blocks -> Result<(bool, bool, Option<PoxId>, Vec<(ConsensusHash, StacksBlock, u64)>, Vec<(ConsensusHash, Vec<StacksMicroblock>, u64)>, Vec<usize>, Vec<NeighborKey>,), net_error, > with Ok((false, true, None, vec![], vec![], vec![0], vec![]))
stackslib/src/net/download.rs:2356:9: replace PeerNetwork::download_blocks -> Result<(bool, bool, Option<PoxId>, Vec<(ConsensusHash, StacksBlock, u64)>, Vec<(ConsensusHash, Vec<StacksMicroblock>, u64)>, Vec<usize>, Vec<NeighborKey>,), net_error, > with Ok((false, false, None, vec![], vec![], vec![], vec![]))
stackslib/src/net/download.rs:2356:9: replace PeerNetwork::download_blocks -> Result<(bool, bool, Option<PoxId>, Vec<(ConsensusHash, StacksBlock, u64)>, Vec<(ConsensusHash, Vec<StacksMicroblock>, u64)>, Vec<usize>, Vec<NeighborKey>,), net_error, > with Ok((false, false, None, vec![], vec![], vec![0], vec![]))
stackslib/src/net/http/mod.rs:160:9: replace <impl Display for HttpContentType>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/net/http/mod.rs:166:9: replace HttpContentType::as_str -> &'static str with ""
stackslib/src/net/http/mod.rs:89:9: replace <impl Error for Error>::cause -> Option<&dyn std::error::Error> with None
stackslib/src/net/http/mod.rs:198:5: replace write_headers -> Result<(), CodecError> with Ok(())
stackslib/src/net/httpcore.rs:82:9: replace <impl ToString for TipRequest>::to_string -> String with "xyzzy".into()
stackslib/src/net/http/mod.rs:74:9: replace <impl Display for Error>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/net/http/mod.rs:213:5: replace default_accept_header -> String with String::new()
stackslib/src/net/http/mod.rs:166:9: replace HttpContentType::as_str -> &'static str with "xyzzy"
stackslib/src/net/httpcore.rs:129:9: replace <impl HttpPreambleExtensions for HttpRequestPreamble>::set_request_id with ()
stackslib/src/net/httpcore.rs:140:9: replace <impl HttpPreambleExtensions for HttpRequestPreamble>::get_request_id -> Option<u32> with None
stackslib/src/net/httpcore.rs:134:9: replace <impl HttpPreambleExtensions for HttpRequestPreamble>::get_canonical_stacks_tip_height -> Option<u32> with Some(1)
stackslib/src/net/httpcore.rs:140:9: replace <impl HttpPreambleExtensions for HttpRequestPreamble>::get_request_id -> Option<u32> with Some(0)
stackslib/src/net/httpcore.rs:134:9: replace <impl HttpPreambleExtensions for HttpRequestPreamble>::get_canonical_stacks_tip_height -> Option<u32> with None
stackslib/src/net/httpcore.rs:148:9: replace <impl HttpPreambleExtensions for HttpResponsePreamble>::set_canonical_stacks_tip_height with ()
stackslib/src/net/httpcore.rs:82:9: replace <impl ToString for TipRequest>::to_string -> String with String::new()
stackslib/src/net/http/mod.rs:213:5: replace default_accept_header -> String with "xyzzy".into()
stackslib/src/net/httpcore.rs:171:9: replace <impl HttpPreambleExtensions for HttpResponsePreamble>::get_request_id -> Option<u32> with None
stackslib/src/net/httpcore.rs:117:9: replace <impl HttpPreambleExtensions for HttpRequestPreamble>::set_canonical_stacks_tip_height with ()
stackslib/src/net/httpcore.rs:281:9: replace request::get_u32 -> Result<u32, HttpError> with Ok(0)
stackslib/src/net/httpcore.rs:165:9: replace <impl HttpPreambleExtensions for HttpResponsePreamble>::get_canonical_stacks_tip_height -> Option<u32> with None
stackslib/src/net/httpcore.rs:333:9: replace <impl HttpRequestContentsExtensions for HttpRequestContents>::get_with_proof -> bool with true
stackslib/src/net/httpcore.rs:134:9: replace <impl HttpPreambleExtensions for HttpRequestPreamble>::get_canonical_stacks_tip_height -> Option<u32> with Some(0)
stackslib/src/net/httpcore.rs:165:9: replace <impl HttpPreambleExtensions for HttpResponsePreamble>::get_canonical_stacks_tip_height -> Option<u32> with Some(0)
stackslib/src/net/httpcore.rs:281:9: replace request::get_u32 -> Result<u32, HttpError> with Ok(1)
stackslib/src/net/httpcore.rs:140:9: replace <impl HttpPreambleExtensions for HttpRequestPreamble>::get_request_id -> Option<u32> with Some(1)
stackslib/src/net/httpcore.rs:508:9: replace StacksHttpRequest::verb -> &str with "xyzzy"
stackslib/src/net/httpcore.rs:503:9: replace StacksHttpRequest::request_path -> &str with ""
stackslib/src/net/httpcore.rs:333:9: replace <impl HttpRequestContentsExtensions for HttpRequestContents>::get_with_proof -> bool with false
stackslib/src/net/httpcore.rs:503:9: replace StacksHttpRequest::request_path -> &str with "xyzzy"
stackslib/src/net/httpcore.rs:520:9: replace StacksHttpRequest::send -> Result<(), NetError> with Ok(())
stackslib/src/net/httpcore.rs:526:9: replace StacksHttpRequest::add_header with ()
stackslib/src/net/httpcore.rs:536:9: replace StacksHttpRequest::clear_headers with ()
stackslib/src/net/httpcore.rs:756:9: replace <impl MessageSequence for StacksHttpMessage>::get_message_name -> &'static str with ""
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((None, 0))
stackslib/src/net/httpcore.rs:594:9: replace StacksHttpResponse::send -> Result<(), NetError> with Ok(())
stackslib/src/net/httpcore.rs:752:9: replace <impl MessageSequence for StacksHttpMessage>::request_id -> u32 with 1
stackslib/src/net/httpcore.rs:665:9: replace StacksHttpResponse::clear_headers with ()
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![0], 0)), 0))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![], 1)), 0))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((None, 1))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![], 0)), 0))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![], 0)), 1))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![], 1)), 1))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![0], 0)), 1))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![0], 1)), 0))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![0], 1)), 1))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![1], 0)), 0))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![1], 0)), 1))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![1], 1)), 0))
stackslib/src/net/httpcore.rs:785:9: replace StacksHttpRecvStream::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![1], 1)), 1))
stackslib/src/net/httpcore.rs:900:9: replace StacksHttp::register_rpc_endpoint with ()
stackslib/src/net/httpcore.rs:910:9: replace StacksHttp::find_response_handler -> Option<usize> with None
stackslib/src/net/httpcore.rs:910:9: replace StacksHttp::find_response_handler -> Option<usize> with Some(0)
stackslib/src/net/httpcore.rs:910:9: replace StacksHttp::find_response_handler -> Option<usize> with Some(1)
stackslib/src/net/httpcore.rs:1135:9: replace StacksHttp::set_pending with ()
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![], 0)), 0))
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![0], 0)), 1))
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![0], 1)), 0))
stackslib/src/net/httpcore.rs:1149:9: replace StacksHttp::set_preamble -> Result<(), NetError> with Ok(())
stackslib/src/net/httpcore.rs:1174:9: replace StacksHttp::reset -> () with ()
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![0], 1)), 1))
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![], 1)), 0))
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((None, 0))
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((None, 1))
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![1], 1)), 1))
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![1], 0)), 1))
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![], 0)), 1))
stackslib/src/net/httpcore.rs:1302:9: replace <impl ProtocolFamily for StacksHttp>::payload_len -> Option<usize> with None
stackslib/src/net/httpcore.rs:1297:9: replace <impl ProtocolFamily for StacksHttp>::preamble_size_hint -> usize with 1
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![], 1)), 1))
stackslib/src/net/httpcore.rs:1220:9: replace StacksHttp::body_start_search_window -> [u8; 4] with [0; 4]
stackslib/src/net/httpcore.rs:1302:9: replace <impl ProtocolFamily for StacksHttp>::payload_len -> Option<usize> with Some(1)
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![0], 0)), 0))
stackslib/src/net/httpcore.rs:1578:9: replace PeerNetwork::connect_or_send_http_request -> Result<usize, NetError> with Ok(0)
stackslib/src/net/httpcore.rs:1367:9: replace <impl ProtocolFamily for StacksHttp>::stream_payload -> Result<(Option<(StacksHttpMessage, usize)>, usize), NetError> with Ok((None, 0))
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![1], 0)), 0))
stackslib/src/net/httpcore.rs:1612:5: replace decode_request_path -> Result<(String, String), NetError> with Ok((String::new(), String::new()))
stackslib/src/net/httpcore.rs:1188:9: replace StacksHttp::consume_data -> Result<(Option<(Vec<u8>, usize)>, usize), NetError> with Ok((Some((vec![1], 1)), 0))
stackslib/src/net/httpcore.rs:1220:9: replace StacksHttp::body_start_search_window -> [u8; 4] with [1; 4]
stackslib/src/net/httpcore.rs:1297:9: replace <impl ProtocolFamily for StacksHttp>::preamble_size_hint -> usize with 0
stackslib/src/net/httpcore.rs:1302:9: replace <impl ProtocolFamily for StacksHttp>::payload_len -> Option<usize> with Some(0)
stackslib/src/net/httpcore.rs:1367:9: replace <impl ProtocolFamily for StacksHttp>::stream_payload -> Result<(Option<(StacksHttpMessage, usize)>, usize), NetError> with Ok((None, 1))
stackslib/src/net/inv.rs:116:9: replace PeerBlocksInv::has_ith_block -> bool with false
stackslib/src/net/httpcore.rs:1538:9: replace <impl ProtocolFamily for StacksHttp>::write_message -> Result<(), NetError> with Ok(())
stackslib/src/net/httpcore.rs:1612:5: replace decode_request_path -> Result<(String, String), NetError> with Ok(("xyzzy".into(), String::new()))
stackslib/src/net/inv.rs:151:9: replace PeerBlocksInv::has_ith_anchor_block -> bool with false
stackslib/src/net/httpcore.rs:1612:5: replace decode_request_path -> Result<(String, String), NetError> with Ok((String::new(), "xyzzy".into()))
stackslib/src/net/httpcore.rs:1612:5: replace decode_request_path -> Result<(String, String), NetError> with Ok(("xyzzy".into(), "xyzzy".into()))
stackslib/src/net/inv.rs:116:9: replace PeerBlocksInv::has_ith_block -> bool with true
stackslib/src/net/inv.rs:134:9: replace PeerBlocksInv::has_ith_microblock_stream -> bool with true
stackslib/src/net/inv.rs:134:9: replace PeerBlocksInv::has_ith_microblock_stream -> bool with false
stackslib/src/net/inv.rs:178:9: replace PeerBlocksInv::merge_blocks_inv -> (usize, usize) with (0, 0)
stackslib/src/net/inv.rs:178:9: replace PeerBlocksInv::merge_blocks_inv -> (usize, usize) with (0, 1)
stackslib/src/net/inv.rs:178:9: replace PeerBlocksInv::merge_blocks_inv -> (usize, usize) with (1, 0)
stackslib/src/net/inv.rs:247:9: replace PeerBlocksInv::truncate_block_inventories -> u64 with 0
stackslib/src/net/inv.rs:178:9: replace PeerBlocksInv::merge_blocks_inv -> (usize, usize) with (1, 1)
stackslib/src/net/inv.rs:375:9: replace PeerBlocksInv::set_block_bit -> bool with true
stackslib/src/net/inv.rs:375:9: replace PeerBlocksInv::set_block_bit -> bool with false
stackslib/src/net/inv.rs:247:9: replace PeerBlocksInv::truncate_block_inventories -> u64 with 1
stackslib/src/net/inv.rs:322:9: replace PeerBlocksInv::merge_pox_inv -> Option<u64> with Some(1)
stackslib/src/net/inv.rs:394:9: replace PeerBlocksInv::clear_microblock_bit with ()
stackslib/src/net/inv.rs:322:9: replace PeerBlocksInv::merge_pox_inv -> Option<u64> with None
stackslib/src/net/inv.rs:382:9: replace PeerBlocksInv::set_microblocks_bit -> bool with true
stackslib/src/net/inv.rs:406:9: replace PeerBlocksInv::num_blocks -> u64 with 0
stackslib/src/net/inv.rs:322:9: replace PeerBlocksInv::merge_pox_inv -> Option<u64> with Some(0)
stackslib/src/net/inv.rs:382:9: replace PeerBlocksInv::set_microblocks_bit -> bool with false
stackslib/src/net/inv.rs:428:9: replace PeerBlocksInv::num_pox_anchor_blocks -> u64 with 0
stackslib/src/net/inv.rs:417:9: replace PeerBlocksInv::num_microblock_streams -> u64 with 0
stackslib/src/net/inv.rs:441:9: replace PeerBlocksInv::pox_inv_cmp -> Option<(u64, bool, bool)> with None
stackslib/src/net/inv.rs:400:9: replace PeerBlocksInv::set_pox_bit -> bool with true
stackslib/src/net/inv.rs:471:9: replace PeerBlocksInv::get_block_height -> u64 with 0
stackslib/src/net/inv.rs:441:9: replace PeerBlocksInv::pox_inv_cmp -> Option<(u64, bool, bool)> with Some((0, false, false))
stackslib/src/net/inv.rs:441:9: replace PeerBlocksInv::pox_inv_cmp -> Option<(u64, bool, bool)> with Some((1, true, false))
stackslib/src/net/inv.rs:567:9: replace NeighborBlockStats::is_peer_online -> bool with false
stackslib/src/net/inv.rs:476:9: replace PeerBlocksInv::get_pox_height -> u64 with 0
stackslib/src/net/inv.rs:571:9: replace NeighborBlockStats::reset_pox_scan with ()
stackslib/src/net/inv.rs:704:9: replace NeighborBlockStats::getpoxinv_begin with ()
stackslib/src/net/inv.rs:746:9: replace NeighborBlockStats::check_local_pox_inv_uncertainty -> u64 with 0
stackslib/src/net/inv.rs:686:9: replace NeighborBlockStats::handle_nack with ()
stackslib/src/net/inv.rs:722:9: replace NeighborBlockStats::check_remote_pox_inv_uncertainty -> u64 with 0
stackslib/src/net/inv.rs:864:9: replace NeighborBlockStats::getblocksinv_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/inv.rs:722:9: replace NeighborBlockStats::check_remote_pox_inv_uncertainty -> u64 with 1
stackslib/src/net/inv.rs:767:9: replace NeighborBlockStats::getpoxinv_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/inv.rs:767:9: replace NeighborBlockStats::getpoxinv_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/inv.rs:847:9: replace NeighborBlockStats::getblocksinv_begin with ()
stackslib/src/net/inv.rs:1056:9: replace InvState::get_inv_sortitions -> u64 with 0
stackslib/src/net/inv.rs:1081:9: replace InvState::cull_bad_peers -> HashSet<NeighborKey> with HashSet::new()
stackslib/src/net/inv.rs:864:9: replace NeighborBlockStats::getblocksinv_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/inv.rs:1004:9: replace InvState::reset_sync_peers -> () with ()
stackslib/src/net/inv.rs:1069:9: replace InvState::get_inv_num_blocks -> u64 with 0
stackslib/src/net/inv.rs:1116:9: replace InvState::get_diverged_peers -> Vec<NeighborKey> with vec![]
stackslib/src/net/inv.rs:1153:9: replace InvState::del_peer -> () with ()
stackslib/src/net/inv.rs:1189:9: replace InvState::set_data_available -> Result<Option<u64>, net_error> with Ok(None)
stackslib/src/net/inv.rs:1289:9: replace InvState::set_microblocks_available -> Result<Option<u64>, net_error> with Ok(None)
stackslib/src/net/inv.rs:1189:9: replace InvState::set_data_available -> Result<Option<u64>, net_error> with Ok(Some(0))
stackslib/src/net/inv.rs:1189:9: replace InvState::set_data_available -> Result<Option<u64>, net_error> with Ok(Some(1))
stackslib/src/net/inv.rs:1279:9: replace InvState::set_block_available -> Result<Option<u64>, net_error> with Ok(None)
stackslib/src/net/inv.rs:1383:9: replace PeerNetwork::make_getpoxinv -> Result<Option<GetPoxInv>, net_error> with Ok(None)
stackslib/src/net/inv.rs:1279:9: replace InvState::set_block_available -> Result<Option<u64>, net_error> with Ok(Some(0))
stackslib/src/net/inv.rs:1279:9: replace InvState::set_block_available -> Result<Option<u64>, net_error> with Ok(Some(1))
stackslib/src/net/inv.rs:1501:9: replace PeerNetwork::get_getblocksinv_num_blocks -> Result<u64, net_error> with Ok(0)
stackslib/src/net/inv.rs:1289:9: replace InvState::set_microblocks_available -> Result<Option<u64>, net_error> with Ok(Some(0))
stackslib/src/net/inv.rs:1294:9: replace InvState::invalidate_block_inventories with ()
stackslib/src/net/inv.rs:1289:9: replace InvState::set_microblocks_available -> Result<Option<u64>, net_error> with Ok(Some(1))
stackslib/src/net/inv.rs:1501:9: replace PeerNetwork::get_getblocksinv_num_blocks -> Result<u64, net_error> with Ok(1)
stackslib/src/net/inv.rs:1359:9: replace PeerNetwork::get_peer_sortition_snapshot -> Result<Option<BlockSnapshot>, net_error> with Ok(None)
stackslib/src/net/inv.rs:1606:9: replace PeerNetwork::make_getblocksinv -> Result<Option<GetBlocksInv>, net_error> with Ok(None)
stackslib/src/net/inv.rs:1744:9: replace PeerNetwork::make_next_getblocksinv -> Result<Option<(u64, GetBlocksInv)>, net_error> with Ok(None)
stackslib/src/net/inv.rs:1759:9: replace PeerNetwork::get_block_scan_start -> u64 with 1
stackslib/src/net/inv.rs:2043:9: replace PeerNetwork::inv_getblocksinv_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/inv.rs:1806:9: replace PeerNetwork::inv_getpoxinv_begin -> Result<(), net_error> with Ok(())
stackslib/src/net/inv.rs:1847:9: replace PeerNetwork::inv_getpoxinv_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/inv.rs:1847:9: replace PeerNetwork::inv_getpoxinv_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/inv.rs:2008:9: replace PeerNetwork::inv_getblocksinv_begin -> Result<(), net_error> with Ok(())
stackslib/src/net/inv.rs:2135:9: replace PeerNetwork::inv_sync_run -> Result<bool, net_error> with Ok(true)
stackslib/src/net/inv.rs:2135:9: replace PeerNetwork::inv_sync_run -> Result<bool, net_error> with Ok(false)
stackslib/src/net/inv.rs:2043:9: replace PeerNetwork::inv_getblocksinv_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/neighbors/mod.rs:57:48: replace * with +
stackslib/src/net/inv.rs:2518:9: replace PeerNetwork::hint_sync_invs with ()
stackslib/src/net/inv.rs:2535:9: replace PeerNetwork::init_inv_sync -> () with ()
stackslib/src/net/neighbors/mod.rs:57:43: replace * with +
stackslib/src/net/inv.rs:2171:9: replace PeerNetwork::refresh_sortition_view -> Result<(), net_error> with Ok(())
stackslib/src/net/inv.rs:2243:9: replace PeerNetwork::sync_inventories -> (bool, bool, Vec<NeighborKey>, Vec<NeighborKey>) with (true, true, vec![], vec![])
stackslib/src/net/inv.rs:2243:9: replace PeerNetwork::sync_inventories -> (bool, bool, Vec<NeighborKey>, Vec<NeighborKey>) with (true, false, vec![], vec![])
stackslib/src/net/inv.rs:2243:9: replace PeerNetwork::sync_inventories -> (bool, bool, Vec<NeighborKey>, Vec<NeighborKey>) with (false, true, vec![], vec![])
stackslib/src/net/inv.rs:2243:9: replace PeerNetwork::sync_inventories -> (bool, bool, Vec<NeighborKey>, Vec<NeighborKey>) with (false, false, vec![], vec![])
stackslib/src/net/inv.rs:2495:9: replace PeerNetwork::get_outbound_sync_peers -> HashSet<NeighborKey> with HashSet::new()
stackslib/src/net/neighbors/mod.rs:211:9: replace PeerNetwork::new_neighbor_walk -> Option<NeighborWalk<PeerDBNeighborWalk, PeerNetworkComms>> with None
stackslib/src/net/neighbors/mod.rs:57:43: replace * with /
stackslib/src/net/neighbors/mod.rs:303:9: replace PeerNetwork::setup_walk -> bool with true
stackslib/src/net/neighbors/mod.rs:292:9: replace PeerNetwork::reset_walk with ()
stackslib/src/net/neighbors/mod.rs:303:9: replace PeerNetwork::setup_walk -> bool with false
stackslib/src/net/neighbors/mod.rs:386:9: replace PeerNetwork::walk_peer_graph -> (bool, Option<NeighborWalkResult>) with (true, None)
stackslib/src/net/p2p.rs:138:9: replace NetworkHandle::advertize_microblocks -> Result<(), net_error> with Ok(())
stackslib/src/net/p2p.rs:582:9: replace PeerNetwork::get_p2p_convo -> Option<&ConversationP2P> with None
stackslib/src/net/p2p.rs:592:9: replace PeerNetwork::get_num_p2p_convos -> usize with 0
stackslib/src/net/neighbors/mod.rs:386:9: replace PeerNetwork::walk_peer_graph -> (bool, Option<NeighborWalkResult>) with (false, None)
stackslib/src/net/p2p.rs:646:9: replace PeerNetwork::iter_peer_event_ids -> impl Iterator<Item =&usize> with ::std::iter::once(&0)
stackslib/src/net/p2p.rs:149:9: replace NetworkHandle::relay_signed_message -> Result<(), net_error> with Ok(())
stackslib/src/net/p2p.rs:646:9: replace PeerNetwork::iter_peer_event_ids -> impl Iterator<Item =&usize> with ::std::iter::once(&1)
stackslib/src/net/p2p.rs:592:9: replace PeerNetwork::get_num_p2p_convos -> usize with 1
stackslib/src/net/p2p.rs:754:9: replace PeerNetwork::do_saturate_p2p_socket -> Result<(usize, bool), net_error> with Ok((0, true))
stackslib/src/net/p2p.rs:754:9: replace PeerNetwork::do_saturate_p2p_socket -> Result<(usize, bool), net_error> with Ok((0, false))
stackslib/src/net/p2p.rs:754:9: replace PeerNetwork::do_saturate_p2p_socket -> Result<(usize, bool), net_error> with Ok((1, true))
stackslib/src/net/p2p.rs:783:9: replace PeerNetwork::saturate_p2p_socket -> Result<(usize, bool), net_error> with Ok((1, true))
stackslib/src/net/p2p.rs:783:9: replace PeerNetwork::saturate_p2p_socket -> Result<(usize, bool), net_error> with Ok((0, false))
stackslib/src/net/p2p.rs:783:9: replace PeerNetwork::saturate_p2p_socket -> Result<(usize, bool), net_error> with Ok((0, true))
stackslib/src/net/p2p.rs:987:9: replace PeerNetwork::count_connected_always_allowed_peers -> Result<(u64, u64), net_error> with Ok((0, 0))
stackslib/src/net/p2p.rs:956:9: replace PeerNetwork::count_outbound_conversations -> u64 with 1
stackslib/src/net/p2p.rs:754:9: replace PeerNetwork::do_saturate_p2p_socket -> Result<(usize, bool), net_error> with Ok((1, false))
stackslib/src/net/p2p.rs:783:9: replace PeerNetwork::saturate_p2p_socket -> Result<(usize, bool), net_error> with Ok((1, false))
stackslib/src/net/p2p.rs:840:9: replace PeerNetwork::relay_signed_message -> Result<(), net_error> with Ok(())
stackslib/src/net/p2p.rs:970:9: replace PeerNetwork::count_ip_connections -> u64 with 1
stackslib/src/net/p2p.rs:1003:9: replace PeerNetwork::connect_peer -> Result<usize, net_error> with Ok(0)
stackslib/src/net/p2p.rs:970:9: replace PeerNetwork::count_ip_connections -> u64 with 0
stackslib/src/net/p2p.rs:987:9: replace PeerNetwork::count_connected_always_allowed_peers -> Result<(u64, u64), net_error> with Ok((1, 0))
stackslib/src/net/p2p.rs:1079:9: replace PeerNetwork::coalesce_neighbors -> Vec<NeighborKey> with vec![]
stackslib/src/net/p2p.rs:987:9: replace PeerNetwork::count_connected_always_allowed_peers -> Result<(u64, u64), net_error> with Ok((0, 1))
stackslib/src/net/p2p.rs:1327:9: replace PeerNetwork::process_bans -> Result<Vec<usize>, net_error> with Ok(vec![0])
stackslib/src/net/p2p.rs:1003:9: replace PeerNetwork::connect_peer -> Result<usize, net_error> with Ok(1)
stackslib/src/net/p2p.rs:987:9: replace PeerNetwork::count_connected_always_allowed_peers -> Result<(u64, u64), net_error> with Ok((1, 1))
stackslib/src/net/p2p.rs:1015:9: replace PeerNetwork::connect_peer_deny_checks -> Result<usize, net_error> with Ok(0)
stackslib/src/net/p2p.rs:1429:9: replace PeerNetwork::num_peers -> usize with 1
stackslib/src/net/p2p.rs:1435:9: replace PeerNetwork::get_pubkey_events -> Vec<usize> with vec![]
stackslib/src/net/p2p.rs:1405:9: replace PeerNetwork::lookup_peer -> Result<Option<Neighbor>, net_error> with Ok(None)
stackslib/src/net/p2p.rs:1435:9: replace PeerNetwork::get_pubkey_events -> Vec<usize> with vec![1]
stackslib/src/net/p2p.rs:1015:9: replace PeerNetwork::connect_peer_deny_checks -> Result<usize, net_error> with Ok(1)
stackslib/src/net/p2p.rs:1435:9: replace PeerNetwork::get_pubkey_events -> Vec<usize> with vec![0]
stackslib/src/net/p2p.rs:1327:9: replace PeerNetwork::process_bans -> Result<Vec<usize>, net_error> with Ok(vec![1])
stackslib/src/net/p2p.rs:1327:9: replace PeerNetwork::process_bans -> Result<Vec<usize>, net_error> with Ok(vec![])
stackslib/src/net/p2p.rs:1460:9: replace PeerNetwork::is_connecting -> bool with true
stackslib/src/net/p2p.rs:1460:9: replace PeerNetwork::is_connecting -> bool with false
stackslib/src/net/p2p.rs:1479:9: replace PeerNetwork::can_register_peer -> Result<(), net_error> with Ok(())
stackslib/src/net/p2p.rs:1465:9: replace PeerNetwork::is_bound -> bool with false
stackslib/src/net/p2p.rs:1532:9: replace PeerNetwork::can_register_peer_with_pubkey -> Result<(), net_error> with Ok(())
stackslib/src/net/p2p.rs:1569:9: replace PeerNetwork::register_peer -> Result<(), net_error> with Ok(())
stackslib/src/net/p2p.rs:1653:9: replace PeerNetwork::get_event_id -> Option<usize> with None
stackslib/src/net/p2p.rs:1429:9: replace PeerNetwork::num_peers -> usize with 0
stackslib/src/net/p2p.rs:1465:9: replace PeerNetwork::is_bound -> bool with true
stackslib/src/net/p2p.rs:1648:9: replace PeerNetwork::is_registered -> bool with true
stackslib/src/net/p2p.rs:1653:9: replace PeerNetwork::get_event_id -> Option<usize> with Some(0)
stackslib/src/net/p2p.rs:1816:9: replace PeerNetwork::process_new_sockets -> Vec<usize> with vec![]
stackslib/src/net/p2p.rs:1816:9: replace PeerNetwork::process_new_sockets -> Vec<usize> with vec![0]
stackslib/src/net/p2p.rs:1746:9: replace PeerNetwork::deregister_and_ban_neighbor -> () with ()
stackslib/src/net/p2p.rs:1653:9: replace PeerNetwork::get_event_id -> Option<usize> with Some(1)
stackslib/src/net/p2p.rs:1918:9: replace PeerNetwork::process_p2p_conversation -> Result<(Vec<StacksMessage>, bool), net_error> with Ok((vec![], false))
stackslib/src/net/p2p.rs:1658:9: replace PeerNetwork::get_neighbor_convo -> Option<&ConversationP2P> with None
stackslib/src/net/p2p.rs:1918:9: replace PeerNetwork::process_p2p_conversation -> Result<(Vec<StacksMessage>, bool), net_error> with Ok((vec![], true))
stackslib/src/net/p2p.rs:1816:9: replace PeerNetwork::process_new_sockets -> Vec<usize> with vec![1]
stackslib/src/net/p2p.rs:2006:9: replace PeerNetwork::process_ready_sockets -> (Vec<usize>, HashMap<usize, Vec<StacksMessage>>) with (vec![], HashMap::from_iter([(1, vec![])]))
stackslib/src/net/p2p.rs:1687:9: replace PeerNetwork::deregister_peer -> () with ()
stackslib/src/net/p2p.rs:2006:9: replace PeerNetwork::process_ready_sockets -> (Vec<usize>, HashMap<usize, Vec<StacksMessage>>) with (vec![], HashMap::new())
stackslib/src/net/p2p.rs:1977:9: replace PeerNetwork::process_connecting_sockets with ()
stackslib/src/net/p2p.rs:2080:9: replace PeerNetwork::queue_ping_heartbeats -> () with ()
stackslib/src/net/p2p.rs:2006:9: replace PeerNetwork::process_ready_sockets -> (Vec<usize>, HashMap<usize, Vec<StacksMessage>>) with (vec![], HashMap::from_iter([(0, vec![])]))
stackslib/src/net/p2p.rs:2006:9: replace PeerNetwork::process_ready_sockets -> (Vec<usize>, HashMap<usize, Vec<StacksMessage>>) with (vec![0], HashMap::new())
stackslib/src/net/p2p.rs:2122:9: replace PeerNetwork::disconnect_unresponsive -> usize with 0
stackslib/src/net/p2p.rs:2006:9: replace PeerNetwork::process_ready_sockets -> (Vec<usize>, HashMap<usize, Vec<StacksMessage>>) with (vec![0], HashMap::from_iter([(0, vec![])]))
stackslib/src/net/p2p.rs:2006:9: replace PeerNetwork::process_ready_sockets -> (Vec<usize>, HashMap<usize, Vec<StacksMessage>>) with (vec![0], HashMap::from_iter([(1, vec![])]))
stackslib/src/net/p2p.rs:2006:9: replace PeerNetwork::process_ready_sockets -> (Vec<usize>, HashMap<usize, Vec<StacksMessage>>) with (vec![1], HashMap::new())
stackslib/src/net/p2p.rs:2006:9: replace PeerNetwork::process_ready_sockets -> (Vec<usize>, HashMap<usize, Vec<StacksMessage>>) with (vec![1], HashMap::from_iter([(0, vec![])]))
stackslib/src/net/p2p.rs:2176:9: replace PeerNetwork::prune_connections -> () with ()
stackslib/src/net/p2p.rs:2006:9: replace PeerNetwork::process_ready_sockets -> (Vec<usize>, HashMap<usize, Vec<StacksMessage>>) with (vec![1], HashMap::from_iter([(1, vec![])]))
stackslib/src/net/p2p.rs:2122:9: replace PeerNetwork::disconnect_unresponsive -> usize with 1
stackslib/src/net/p2p.rs:2047:9: replace PeerNetwork::get_neighbor_stats -> Option<NeighborStats> with None
stackslib/src/net/p2p.rs:2288:9: replace PeerNetwork::flush_relay_handles -> Vec<usize> with vec![]
stackslib/src/net/p2p.rs:2373:9: replace PeerNetwork::do_network_neighbor_walk -> bool with true
stackslib/src/net/p2p.rs:2399:9: replace PeerNetwork::do_network_mempool_sync -> Option<Vec<StacksTransaction>> with Some(vec![])
stackslib/src/net/p2p.rs:2373:9: replace PeerNetwork::do_network_neighbor_walk -> bool with false
stackslib/src/net/p2p.rs:2533:9: replace PeerNetwork::do_learn_public_ip -> Result<bool, net_error> with Ok(false)
stackslib/src/net/p2p.rs:2444:9: replace PeerNetwork::begin_learn_public_ip -> Result<bool, net_error> with Ok(false)
stackslib/src/net/p2p.rs:2657:9: replace PeerNetwork::public_ip_reset with ()
stackslib/src/net/p2p.rs:2671:9: replace PeerNetwork::do_get_public_ip -> bool with false
stackslib/src/net/p2p.rs:2709:9: replace PeerNetwork::do_network_inv_sync -> (bool, bool) with (true, true)
stackslib/src/net/p2p.rs:2617:9: replace PeerNetwork::need_public_ip -> bool with true
stackslib/src/net/p2p.rs:2533:9: replace PeerNetwork::do_learn_public_ip -> Result<bool, net_error> with Ok(true)
stackslib/src/net/p2p.rs:2617:9: replace PeerNetwork::need_public_ip -> bool with false
stackslib/src/net/p2p.rs:2519:9: replace PeerNetwork::disconnect_all -> () with ()
stackslib/src/net/p2p.rs:2709:9: replace PeerNetwork::do_network_inv_sync -> (bool, bool) with (true, false)
stackslib/src/net/p2p.rs:3360:9: replace PeerNetwork::try_get_url_ip -> Result<Option<SocketAddr>, net_error> with Ok(None)
stackslib/src/net/p2p.rs:2709:9: replace PeerNetwork::do_network_inv_sync -> (bool, bool) with (false, true)
stackslib/src/net/p2p.rs:2709:9: replace PeerNetwork::do_network_inv_sync -> (bool, bool) with (false, false)
stackslib/src/net/p2p.rs:2924:9: replace PeerNetwork::find_next_push_microblocks -> Option<(ConsensusHash, BlockHeaderHash, Vec<StacksMicroblock>)> with None
stackslib/src/net/p2p.rs:3521:9: replace PeerNetwork::mempool_sync_resolve_data_url -> Result<(bool, Option<SocketAddr>), net_error> with Ok((true, None))
stackslib/src/net/p2p.rs:3569:9: replace PeerNetwork::mempool_sync_send_query -> Result<(bool, Option<usize>), net_error> with Ok((true, Some(1)))
stackslib/src/net/p2p.rs:2746:9: replace PeerNetwork::do_network_block_download -> bool with false
stackslib/src/net/p2p.rs:3824:9: replace PeerNetwork::do_network_work -> bool with true
stackslib/src/net/p2p.rs:4154:9: replace PeerNetwork::find_reciprocal_event -> Option<usize> with None
stackslib/src/net/p2p.rs:3824:9: replace PeerNetwork::do_network_work -> bool with false
stackslib/src/net/p2p.rs:4086:9: replace PeerNetwork::do_attachment_downloads with ()
stackslib/src/net/p2p.rs:4339:9: replace PeerNetwork::buffer_data_message -> () with ()
stackslib/src/net/p2p.rs:4264:9: replace PeerNetwork::handle_unsolicited_inv_update -> Result<Option<u64>, net_error> with Ok(Some(0))
stackslib/src/net/p2p.rs:4559:9: replace PeerNetwork::handle_unsolicited_MicroblocksAvailable -> bool with true
stackslib/src/net/p2p.rs:4154:9: replace PeerNetwork::find_reciprocal_event -> Option<usize> with Some(0)
stackslib/src/net/p2p.rs:4656:9: replace PeerNetwork::handle_unsolicited_BlocksData -> bool with true
stackslib/src/net/p2p.rs:4458:9: replace PeerNetwork::handle_unsolicited_BlocksAvailable -> bool with true
stackslib/src/net/p2p.rs:4778:9: replace PeerNetwork::handle_unsolicited_MicroblocksData -> bool with false
stackslib/src/net/p2p.rs:4656:9: replace PeerNetwork::handle_unsolicited_BlocksData -> bool with false
stackslib/src/net/p2p.rs:4458:9: replace PeerNetwork::handle_unsolicited_BlocksAvailable -> bool with false
stackslib/src/net/p2p.rs:4992:9: replace PeerNetwork::find_unauthenticated_inbound_convos -> Vec<usize> with vec![]
stackslib/src/net/p2p.rs:5004:9: replace PeerNetwork::schedule_network_pingbacks with ()
stackslib/src/net/p2p.rs:4856:9: replace PeerNetwork::handle_unsolicited_message -> (bool, bool) with (true, false)
stackslib/src/net/p2p.rs:5115:9: replace PeerNetwork::has_more_downloads -> bool with true
stackslib/src/net/p2p.rs:4992:9: replace PeerNetwork::find_unauthenticated_inbound_convos -> Vec<usize> with vec![1]
stackslib/src/net/p2p.rs:5168:9: replace PeerNetwork::create_or_reconfigure_stackerdb -> Result<(), db_error> with Ok(())
stackslib/src/net/p2p.rs:5216:9: replace PeerNetwork::refresh_burnchain_view -> Result<HashMap<NeighborKey, Vec<StacksMessage>>, net_error> with Ok(HashMap::new())
stackslib/src/net/p2p.rs:5098:9: replace PeerNetwork::count_public_inbound -> usize with 1
stackslib/src/net/p2p.rs:5379:9: replace PeerNetwork::dispatch_network with ()
stackslib/src/net/poll.rs:265:9: replace NetworkState::make_next_event_id -> Option<usize> with None
stackslib/src/net/poll.rs:265:9: replace NetworkState::make_next_event_id -> Option<usize> with Some(0)
stackslib/src/net/poll.rs:265:9: replace NetworkState::make_next_event_id -> Option<usize> with Some(1)
stackslib/src/net/poll.rs:293:9: replace NetworkState::next_event_id -> Result<usize, net_error> with Ok(0)
stackslib/src/net/poll.rs:293:9: replace NetworkState::next_event_id -> Result<usize, net_error> with Ok(1)
stackslib/src/net/poll.rs:178:9: replace NetworkState::register -> Result<usize, net_error> with Ok(0)
stackslib/src/net/poll.rs:178:9: replace NetworkState::register -> Result<usize, net_error> with Ok(1)
stackslib/src/net/poll.rs:372:9: replace NetworkState::poll -> Result<HashMap<usize, NetworkPollState>, net_error> with Ok(HashMap::new())
stackslib/src/net/poll.rs:238:9: replace NetworkState::deregister -> Result<(), net_error> with Ok(())
stackslib/src/net/relay.rs:157:9: replace <impl RelayPayload for StacksBlock>::get_id -> String with "xyzzy".into()
stackslib/src/net/relay.rs:157:9: replace <impl RelayPayload for StacksBlock>::get_id -> String with String::new()
stackslib/src/net/relay.rs:167:9: replace <impl RelayPayload for StacksMicroblock>::get_id -> String with "xyzzy".into()
stackslib/src/net/prune.rs:403:9: replace PeerNetwork::prune_frontier -> () with ()
stackslib/src/net/relay.rs:147:9: replace <impl RelayPayload for BlocksAvailableData>::get_id -> String with "xyzzy".into()
stackslib/src/net/relay.rs:177:9: replace <impl RelayPayload for StacksTransaction>::get_id -> String with "xyzzy".into()
stackslib/src/net/relay.rs:294:9: replace RelayerStats::count_relay_dups -> HashMap<NeighborKey, usize> with HashMap::new()
stackslib/src/net/relay.rs:194:9: replace RelayerStats::merge_relay_stats -> () with ()
stackslib/src/net/relay.rs:283:9: replace RelayerStats::process_neighbor_ban -> () with ()
stackslib/src/net/relay.rs:227:9: replace RelayerStats::add_relayed_message -> () with ()
stackslib/src/net/relay.rs:576:9: replace Relayer::process_new_anchored_block -> Result<bool, chainstate_error> with Ok(false)
stackslib/src/net/relay.rs:323:9: replace RelayerStats::count_ASNs -> Result<HashMap<NeighborKey, usize>, net_error> with Ok(HashMap::new())
stackslib/src/net/relay.rs:576:9: replace Relayer::process_new_anchored_block -> Result<bool, chainstate_error> with Ok(true)
stackslib/src/net/relay.rs:658:9: replace Relayer::make_microblocksdata_messages -> Vec<(Vec<RelayData>, MicroblocksData)> with vec![]
stackslib/src/net/relay.rs:368:9: replace RelayerStats::get_inbound_relay_rankings -> HashMap<NeighborKey, usize> with HashMap::new()
stackslib/src/net/relay.rs:402:9: replace RelayerStats::get_outbound_relay_rankings -> Result<HashMap<NeighborKey, usize>, net_error> with Ok(HashMap::new())
stackslib/src/net/relay.rs:946:9: replace Relayer::preprocess_downloaded_microblocks -> HashMap<ConsensusHash, (StacksBlockId, Vec<StacksMicroblock>)> with HashMap::new()
stackslib/src/net/relay.rs:1288:9: replace Relayer::static_check_problematic_relayed_block -> bool with false
stackslib/src/net/relay.rs:1222:9: replace Relayer::static_check_problematic_relayed_tx -> Result<(), Error> with Ok(())
stackslib/src/net/relay.rs:1288:9: replace Relayer::static_check_problematic_relayed_block -> bool with true
stackslib/src/net/relay.rs:829:9: replace Relayer::fault_injection_is_block_hidden -> bool with true
stackslib/src/net/relay.rs:1348:9: replace Relayer::process_mined_problematic_blocks -> bool with true
stackslib/src/net/relay.rs:1315:9: replace Relayer::static_check_problematic_relayed_microblock -> bool with false
stackslib/src/net/relay.rs:1503:9: replace Relayer::filter_problematic_transactions with ()
stackslib/src/net/relay.rs:1566:9: replace Relayer::process_transactions -> Result<Vec<(Vec<RelayData>, StacksTransaction)>, net_error> with Ok(vec![])
stackslib/src/net/relay.rs:1333:9: replace Relayer::do_static_problematic_checks -> bool with false
stackslib/src/net/relay.rs:1360:9: replace Relayer::process_mined_problematic_blocks -> bool with true
stackslib/src/net/relay.rs:1668:9: replace Relayer::setup_unconfirmed_state -> Result<ProcessedUnconfirmedState, Error> with Ok(Default::default())
stackslib/src/net/relay.rs:1710:9: replace Relayer::refresh_unconfirmed -> ProcessedUnconfirmedState with Default::default()
stackslib/src/net/relay.rs:1651:9: replace Relayer::broadcast_microblock -> Result<(), net_error> with Ok(())
stackslib/src/net/relay.rs:1360:9: replace Relayer::process_mined_problematic_blocks -> bool with false
stackslib/src/net/relay.rs:2034:9: replace PeerNetwork::find_block_recipients -> Result<(Vec<NeighborKey>, Vec<NeighborKey>), net_error> with Ok((vec![], vec![]))
stackslib/src/net/relay.rs:2258:9: replace PeerNetwork::advertize_or_push_microblocks_to_outbound_peer -> Result<(), net_error> with Ok(())
stackslib/src/net/relay.rs:2136:9: replace PeerNetwork::push_block_to_peer -> () with ()
stackslib/src/net/relay.rs:2324:9: replace PeerNetwork::advertize_blocks -> Result<(usize, usize), net_error> with Ok((0, 1))
stackslib/src/net/relay.rs:1821:9: replace Relayer::process_pushed_stacker_db_chunks -> Result<(), Error> with Ok(())
stackslib/src/net/relay.rs:1758:9: replace Relayer::process_stacker_db_chunks -> Result<(), Error> with Ok(())
stackslib/src/net/relay.rs:2324:9: replace PeerNetwork::advertize_blocks -> Result<(usize, usize), net_error> with Ok((0, 0))
stackslib/src/net/relay.rs:2216:9: replace PeerNetwork::advertize_or_push_blocks_to_outbound_peer -> Result<(), net_error> with Ok(())
stackslib/src/net/relay.rs:2303:9: replace PeerNetwork::advertize_to_inbound_peer -> Result<(), net_error> with Ok(())
stackslib/src/net/rpc.rs:127:9: replace <impl Display for ConversationHttp>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/net/rpc.rs:183:9: replace ConversationHttp::num_pending_outbound -> usize with 1
stackslib/src/net/rpc.rs:183:9: replace ConversationHttp::num_pending_outbound -> usize with 0
stackslib/src/net/rpc.rs:198:9: replace ConversationHttp::is_request_inflight -> bool with true
stackslib/src/net/rpc.rs:306:9: replace ConversationHttp::send_outbound_responses -> Result<(), net_error> with Ok(())
stackslib/src/net/rpc.rs:224:9: replace ConversationHttp::send_request -> Result<(), net_error> with Ok(())
stackslib/src/net/rpc.rs:486:9: replace ConversationHttp::is_idle -> bool with false
stackslib/src/net/rpc.rs:286:9: replace ConversationHttp::handle_request -> Result<Option<StacksMessageType>, net_error> with Ok(None)
stackslib/src/net/rpc.rs:251:9: replace ConversationHttp::reply_error -> Result<(), net_error> with Ok(())
stackslib/src/net/rpc.rs:432:9: replace ConversationHttp::recv_inbound_response -> Result<(), net_error> with Ok(())
stackslib/src/net/rpc.rs:507:9: replace ConversationHttp::get_last_request_time -> u64 with 1
stackslib/src/net/rpc.rs:474:9: replace ConversationHttp::try_get_response -> Option<StacksHttpResponse> with None
stackslib/src/net/rpc.rs:486:9: replace ConversationHttp::is_idle -> bool with true
stackslib/src/net/rpc.rs:479:9: replace ConversationHttp::try_flush -> Result<(), net_error> with Ok(())
stackslib/src/net/rpc.rs:495:9: replace ConversationHttp::is_drained -> bool with false
stackslib/src/net/rpc.rs:502:9: replace ConversationHttp::is_keep_alive -> bool with false
stackslib/src/net/rpc.rs:527:9: replace ConversationHttp::chat -> Result<Vec<StacksMessageType>, net_error> with Ok(vec![])
stackslib/src/net/rpc.rs:607:9: replace ConversationHttp::recv -> Result<usize, net_error> with Ok(0)
stackslib/src/net/rpc.rs:512:9: replace ConversationHttp::get_last_response_time -> u64 with 1
stackslib/src/net/rpc.rs:630:9: replace ConversationHttp::send -> Result<usize, net_error> with Ok(0)
stackslib/src/net/rpc.rs:607:9: replace ConversationHttp::recv -> Result<usize, net_error> with Ok(1)
stackslib/src/net/server.rs:85:9: replace HttpPeer::set_server_handle -> () with ()
stackslib/src/net/server.rs:114:9: replace HttpPeer::get_conversation_and_socket -> (Option<&mut ConversationHttp>, Option<&mut mio::net::TcpStream>,) with (None, None)
stackslib/src/net/server.rs:132:9: replace HttpPeer::connect_http -> Result<usize, net_error> with Ok(0)
stackslib/src/net/server.rs:132:9: replace HttpPeer::connect_http -> Result<usize, net_error> with Ok(1)
stackslib/src/net/server.rs:303:9: replace HttpPeer::disconnect_unresponsive -> () with ()
stackslib/src/net/server.rs:346:9: replace HttpPeer::saturate_http_socket -> Result<(), net_error> with Ok(())
stackslib/src/net/server.rs:372:9: replace HttpPeer::process_new_sockets -> Vec<usize> with vec![1]
stackslib/src/net/server.rs:372:9: replace HttpPeer::process_new_sockets -> Vec<usize> with vec![]
stackslib/src/net/server.rs:372:9: replace HttpPeer::process_new_sockets -> Vec<usize> with vec![0]
stackslib/src/net/server.rs:160:9: replace HttpPeer::count_inbound_ip_addrs -> u64 with 1
stackslib/src/net/server.rs:509:9: replace HttpPeer::is_connecting -> bool with false
stackslib/src/net/server.rs:423:9: replace HttpPeer::process_http_conversation -> Result<(bool, Vec<StacksMessageType>), net_error> with Ok((false, vec![]))
stackslib/src/net/server.rs:552:9: replace HttpPeer::process_ready_sockets -> (Vec<StacksMessageType>, Vec<usize>) with (vec![], vec![])
stackslib/src/net/server.rs:519:9: replace HttpPeer::process_connecting_sockets -> () with ()
stackslib/src/net/server.rs:423:9: replace HttpPeer::process_http_conversation -> Result<(bool, Vec<StacksMessageType>), net_error> with Ok((true, vec![]))
stackslib/src/net/server.rs:509:9: replace HttpPeer::is_connecting -> bool with true
stackslib/src/net/stackerdb/mod.rs:296:9: replace PeerNetwork::run_stacker_db_sync -> Result<Vec<StackerDBSyncResult>, net_error> with Ok(vec![])
stackslib/src/net/stackerdb/mod.rs:377:9: replace PeerNetwork::validate_received_chunk -> Result<bool, net_error> with Ok(true)
stackslib/src/chainstate/burn/mod.rs:148:9: replace SortitionHash::choose_two -> Vec<u32> with vec![]
stackslib/src/chainstate/burn/mod.rs:148:9: replace SortitionHash::choose_two -> Vec<u32> with vec![0]
stackslib/src/chainstate/burn/mod.rs:166:9: replace SortitionHash::to_uint256 -> Uint256 with Default::default()
stackslib/src/chainstate/burn/mod.rs:148:9: replace SortitionHash::choose_two -> Vec<u32> with vec![1]
stackslib/src/chainstate/burn/mod.rs:308:9: replace <impl ConsensusHashExtensions for ConsensusHash>::get_prev_consensus_hashes -> Result<Vec<ConsensusHash>, db_error> with Ok(vec![])
stackslib/src/chainstate/coordinator/mod.rs:102:9: replace RewardCycleInfo::selected_anchor_block -> Option<(&BlockHeaderHash, &Txid)> with None
stackslib/src/chainstate/coordinator/mod.rs:111:9: replace RewardCycleInfo::is_reward_info_known -> bool with true
stackslib/src/chainstate/coordinator/mod.rs:111:9: replace RewardCycleInfo::is_reward_info_known -> bool with false
stackslib/src/chainstate/coordinator/mod.rs:126:9: replace RewardCycleInfo::known_selected_anchor_block_owned -> Option<RewardSet> with None
stackslib/src/chainstate/coordinator/mod.rs:356:9: replace ChainsCoordinator<'a, T, ArcCounterCoordinatorNotices, OnChainRewardSetProvider, CE, FE, B>::run with ()
stackslib/src/chainstate/coordinator/mod.rs:534:5: replace get_next_recipients -> Result<Option<RewardSetInfo>, Error> with Ok(None)
stackslib/src/chainstate/coordinator/mod.rs:567:5: replace get_reward_cycle_info -> Result<Option<RewardCycleInfo>, Error> with Ok(None)
stackslib/src/chainstate/coordinator/mod.rs:878:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::handle_new_stacks_block -> Result<Option<BlockHeaderHash>, Error> with Ok(None)
stackslib/src/chainstate/coordinator/mod.rs:693:5: replace dispatcher_announce_burn_ops with ()
stackslib/src/chainstate/coordinator/mod.rs:1098:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::check_chainstate_against_burnchain_affirmations -> Result<Option<u64>, Error> with Ok(None)
stackslib/src/chainstate/coordinator/mod.rs:1098:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::check_chainstate_against_burnchain_affirmations -> Result<Option<u64>, Error> with Ok(Some(0))
stackslib/src/chainstate/coordinator/mod.rs:1098:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::check_chainstate_against_burnchain_affirmations -> Result<Option<u64>, Error> with Ok(Some(1))
stackslib/src/chainstate/coordinator/mod.rs:1283:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::find_invalid_and_revalidated_sortitions -> Result<Option<(u64, u64, Vec<BlockSnapshot>)>, Error> with Ok(Some((0, 0, vec![])))
stackslib/src/chainstate/coordinator/mod.rs:1220:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::find_valid_sortitions -> Result<(u64, Vec<BlockSnapshot>), Error> with Ok((0, vec![]))
stackslib/src/net/stackerdb/mod.rs:377:9: replace PeerNetwork::validate_received_chunk -> Result<bool, net_error> with Ok(false)
stackslib/src/net/stackerdb/mod.rs:449:9: replace PeerNetwork::handle_unsolicited_StackerDBPushChunk -> Result<bool, net_error> with Ok(true)
stackslib/src/chainstate/coordinator/mod.rs:118:9: replace RewardCycleInfo::known_selected_anchor_block -> Option<&RewardSet> with None
stackslib/src/chainstate/coordinator/mod.rs:720:5: replace forget_orphan_stacks_blocks -> Result<(), Error> with Ok(())
stackslib/src/chainstate/coordinator/mod.rs:2139:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::handle_new_burnchain_block -> Result<Option<BlockHeaderHash>, Error> with Ok(None)
stackslib/src/chainstate/coordinator/mod.rs:2151:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::inner_handle_new_burnchain_block -> Result<Option<BlockHeaderHash>, Error> with Ok(None)
stackslib/src/chainstate/coordinator/mod.rs:2576:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::get_reward_cycle_info -> Result<Option<RewardCycleInfo>, Error> with Ok(None)
stackslib/src/chainstate/coordinator/mod.rs:2601:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::process_atlas_attachment_events with ()
stackslib/src/chainstate/coordinator/mod.rs:2661:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::replay_stacks_blocks -> Result<(), Error> with Ok(())
stackslib/src/chainstate/coordinator/mod.rs:2779:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::check_pox_anchor_affirmation -> Result<Option<BlockHeaderHash>, Error> with Ok(None)
stackslib/src/chainstate/coordinator/mod.rs:2900:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::process_ready_blocks -> Result<Option<BlockHeaderHash>, Error> with Ok(None)
stackslib/src/chainstate/coordinator/mod.rs:3087:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::process_new_pox_anchor -> Result<Option<BlockHeaderHash>, Error> with Ok(None)
stackslib/src/chainstate/coordinator/mod.rs:3133:5: replace check_chainstate_db_versions -> Result<bool, DBError> with Ok(true)
stackslib/src/chainstate/coordinator/mod.rs:3133:5: replace check_chainstate_db_versions -> Result<bool, DBError> with Ok(false)
stackslib/src/chainstate/stacks/mod.rs:80:41: replace * with /
stackslib/src/chainstate/stacks/mod.rs:80:41: replace * with +
stackslib/src/chainstate/stacks/mod.rs:80:34: replace * with /
stackslib/src/chainstate/stacks/mod.rs:151:9: replace <impl Display for Error>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/chainstate/stacks/mod.rs:80:34: replace * with +
stackslib/src/chainstate/stacks/mod.rs:398:9: replace TransactionPublicKeyEncoding::from_u8 -> Option<TransactionPublicKeyEncoding> with None
stackslib/src/chainstate/coordinator/mod.rs:1929:9: replace ChainsCoordinator<'a, T, N, U, CE, FE, B>::reinterpret_affirmed_pox_anchor_block_status -> Result<Option<BlockHeaderHash>, Error> with Ok(None)
stackslib/src/chainstate/stacks/mod.rs:418:9: replace TransactionAuthField::is_public_key -> bool with false
stackslib/src/chainstate/stacks/mod.rs:425:9: replace TransactionAuthField::is_signature -> bool with true
stackslib/src/chainstate/stacks/mod.rs:254:9: replace Error::name -> &'static str with "xyzzy"
stackslib/src/chainstate/stacks/mod.rs:425:9: replace TransactionAuthField::is_signature -> bool with false
stackslib/src/chainstate/stacks/mod.rs:432:9: replace TransactionAuthField::as_public_key -> Option<StacksPublicKey> with None
stackslib/src/chainstate/stacks/mod.rs:498:9: replace SinglesigHashMode::from_u8 -> Option<SinglesigHashMode> with None
stackslib/src/chainstate/stacks/mod.rs:523:9: replace MultisigHashMode::from_u8 -> Option<MultisigHashMode> with None
stackslib/src/chainstate/stacks/mod.rs:439:9: replace TransactionAuthField::as_signature -> Option<(TransactionPublicKeyEncoding, MessageSignature)> with None
stackslib/src/chainstate/stacks/mod.rs:432:9: replace TransactionAuthField::as_public_key -> Option<StacksPublicKey> with Some(Default::default())
stackslib/src/chainstate/stacks/mod.rs:680:9: replace FungibleConditionCode::from_u8 -> Option<FungibleConditionCode> with None
stackslib/src/chainstate/stacks/mod.rs:710:9: replace NonfungibleConditionCode::from_u8 -> Option<NonfungibleConditionCode> with None
stackslib/src/chainstate/stacks/mod.rs:691:9: replace FungibleConditionCode::check -> bool with true
stackslib/src/chainstate/stacks/mod.rs:691:9: replace FungibleConditionCode::check -> bool with false
stackslib/src/chainstate/stacks/mod.rs:718:9: replace NonfungibleConditionCode::was_sent -> bool with true
stackslib/src/chainstate/stacks/mod.rs:718:9: replace NonfungibleConditionCode::was_sent -> bool with false
stackslib/src/chainstate/stacks/mod.rs:892:42: replace * with /
stackslib/src/chainstate/stacks/mod.rs:728:9: replace NonfungibleConditionCode::check -> bool with true
stackslib/src/chainstate/stacks/mod.rs:728:9: replace NonfungibleConditionCode::check -> bool with false
stackslib/src/chainstate/stacks/mod.rs:618:9: replace TransactionPayload::name -> &'static str with ""
stackslib/src/burnchains/affirmation.rs:276:9: replace AffirmationMapEntry::from_chr -> Option<AffirmationMapEntry> with None
stackslib/src/burnchains/affirmation.rs:294:9: replace <impl Display for AffirmationMapEntry>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/chainstate/stacks/mod.rs:892:35: replace * with /
stackslib/src/burnchains/affirmation.rs:319:9: replace <impl Debug for AffirmationMap>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/burnchains/affirmation.rs:310:9: replace <impl Display for AffirmationMap>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/burnchains/affirmation.rs:366:9: replace AffirmationMap::at -> Option<&AffirmationMapEntry> with None
stackslib/src/burnchains/affirmation.rs:370:9: replace AffirmationMap::push with ()
stackslib/src/burnchains/affirmation.rs:378:9: replace AffirmationMap::len -> usize with 0
stackslib/src/burnchains/affirmation.rs:378:9: replace AffirmationMap::len -> usize with 1
stackslib/src/burnchains/affirmation.rs:382:9: replace AffirmationMap::as_slice -> &[AffirmationMapEntry] with Vec::leak(Vec::new())
stackslib/src/burnchains/affirmation.rs:387:9: replace AffirmationMap::encode -> String with String::new()
stackslib/src/chainstate/stacks/mod.rs:892:42: replace * with +
stackslib/src/burnchains/affirmation.rs:387:9: replace AffirmationMap::encode -> String with "xyzzy".into()
stackslib/src/burnchains/affirmation.rs:394:9: replace AffirmationMap::decode -> Option<AffirmationMap> with None
stackslib/src/burnchains/affirmation.rs:415:9: replace AffirmationMap::find_divergence -> Option<u64> with None
stackslib/src/burnchains/affirmation.rs:415:9: replace AffirmationMap::find_divergence -> Option<u64> with Some(0)
stackslib/src/burnchains/affirmation.rs:415:9: replace AffirmationMap::find_divergence -> Option<u64> with Some(1)
stackslib/src/burnchains/affirmation.rs:440:9: replace AffirmationMap::find_inv_search -> u64 with 0
stackslib/src/burnchains/affirmation.rs:440:9: replace AffirmationMap::find_inv_search -> u64 with 1
stackslib/src/burnchains/affirmation.rs:485:9: replace AffirmationMap::weight -> u64 with 0
stackslib/src/burnchains/affirmation.rs:485:9: replace AffirmationMap::weight -> u64 with 1
stackslib/src/burnchains/affirmation.rs:506:5: replace get_parent_child_reward_cycles -> Option<(u64, u64)> with None
stackslib/src/burnchains/affirmation.rs:469:9: replace AffirmationMap::has_prefix -> bool with true
stackslib/src/burnchains/affirmation.rs:506:5: replace get_parent_child_reward_cycles -> Option<(u64, u64)> with Some((0, 1))
stackslib/src/burnchains/affirmation.rs:547:5: replace read_prepare_phase_commits -> Result<Vec<Vec<LeaderBlockCommitOp>>, Error> with Ok(vec![])
stackslib/src/burnchains/affirmation.rs:547:5: replace read_prepare_phase_commits -> Result<Vec<Vec<LeaderBlockCommitOp>>, Error> with Ok(vec![vec![]])
stackslib/src/burnchains/affirmation.rs:622:5: replace read_parent_block_commits -> Result<Vec<LeaderBlockCommitOp>, Error> with Ok(vec![])
stackslib/src/burnchains/affirmation.rs:693:5: replace filter_orphan_block_commits -> Vec<Vec<LeaderBlockCommitOp>> with vec![]
stackslib/src/burnchains/affirmation.rs:693:5: replace filter_orphan_block_commits -> Vec<Vec<LeaderBlockCommitOp>> with vec![vec![]]
stackslib/src/burnchains/affirmation.rs:736:5: replace filter_missed_block_commits -> Vec<Vec<LeaderBlockCommitOp>> with vec![]
stackslib/src/burnchains/affirmation.rs:736:5: replace filter_missed_block_commits -> Vec<Vec<LeaderBlockCommitOp>> with vec![vec![]]
stackslib/src/burnchains/affirmation.rs:776:5: replace inner_find_heaviest_block_commit_ptr -> Option<(PoxAnchorPtr, BTreeMap<(u64, u32), (u64, u32)>)> with None
stackslib/src/burnchains/affirmation.rs:928:5: replace find_heaviest_block_commit -> Result<Option<(LeaderBlockCommitOp, Vec<Vec<bool>>, u64, u64)>, DBError> with Ok(None)
stackslib/src/burnchains/affirmation.rs:469:9: replace AffirmationMap::has_prefix -> bool with false
stackslib/src/burnchains/affirmation.rs:1027:5: replace inner_find_valid_prepare_phase_commits -> Result<Vec<Vec<LeaderBlockCommitOp>>, Error> with Ok(vec![])
stackslib/src/burnchains/affirmation.rs:1027:5: replace inner_find_valid_prepare_phase_commits -> Result<Vec<Vec<LeaderBlockCommitOp>>, Error> with Ok(vec![vec![]])
stackslib/src/burnchains/affirmation.rs:1105:5: replace find_pox_anchor_block -> Result<(Vec<Vec<LeaderBlockCommitOp>>, Option<(LeaderBlockCommitOp, Vec<Vec<bool>>)>,), Error, > with Ok((vec![vec![]], None))
stackslib/src/burnchains/affirmation.rs:1105:5: replace find_pox_anchor_block -> Result<(Vec<Vec<LeaderBlockCommitOp>>, Option<(LeaderBlockCommitOp, Vec<Vec<bool>>)>,), Error, > with Ok((vec![], None))
stackslib/src/burnchains/affirmation.rs:1157:5: replace update_pox_affirmation_maps -> Result<(), Error> with Ok(())
stackslib/src/burnchains/bitcoin/mod.rs:121:9: replace <impl Error for Error>::cause -> Option<&dyn error::Error> with None
stackslib/src/burnchains/burnchain.rs:322:9: replace BurnchainRecipient::try_from_bitcoin_output -> Option<BurnchainRecipient> with None
stackslib/src/burnchains/burnchain.rs:335:9: replace BurnchainBlock::block_height -> u64 with 0
stackslib/src/burnchains/burnchain.rs:335:9: replace BurnchainBlock::block_height -> u64 with 1
stackslib/src/burnchains/burnchain.rs:353:9: replace BurnchainBlock::txs -> Vec<BurnchainTransaction> with vec![]
stackslib/src/chainstate/stacks/mod.rs:892:35: replace * with +
stackslib/src/burnchains/burnchain.rs:363:9: replace BurnchainBlock::timestamp -> u64 with 0
stackslib/src/burnchains/affirmation.rs:506:5: replace get_parent_child_reward_cycles -> Option<(u64, u64)> with Some((1, 1))
stackslib/src/burnchains/burnchain.rs:438:9: replace Burnchain::expected_sunset_burn -> u64 with 1
stackslib/src/burnchains/burnchain.rs:483:9: replace Burnchain::is_reward_cycle_start -> bool with true
stackslib/src/burnchains/burnchain.rs:483:9: replace Burnchain::is_reward_cycle_start -> bool with false
stackslib/src/burnchains/burnchain.rs:488:9: replace Burnchain::reward_cycle_to_block_height -> u64 with 0
stackslib/src/burnchains/burnchain.rs:488:9: replace Burnchain::reward_cycle_to_block_height -> u64 with 1
stackslib/src/burnchains/burnchain.rs:493:9: replace Burnchain::block_height_to_reward_cycle -> Option<u64> with None
stackslib/src/burnchains/burnchain.rs:493:9: replace Burnchain::block_height_to_reward_cycle -> Option<u64> with Some(0)
stackslib/src/burnchains/burnchain.rs:493:9: replace Burnchain::block_height_to_reward_cycle -> Option<u64> with Some(1)
stackslib/src/burnchains/burnchain.rs:502:9: replace Burnchain::static_block_height_to_reward_cycle -> Option<u64> with None
stackslib/src/burnchains/burnchain.rs:502:9: replace Burnchain::static_block_height_to_reward_cycle -> Option<u64> with Some(0)
stackslib/src/burnchains/burnchain.rs:502:9: replace Burnchain::static_block_height_to_reward_cycle -> Option<u64> with Some(1)
stackslib/src/burnchains/affirmation.rs:506:5: replace get_parent_child_reward_cycles -> Option<(u64, u64)> with Some((1, 0))
stackslib/src/burnchains/burnchain.rs:532:9: replace Burnchain::static_is_in_prepare_phase -> bool with true
stackslib/src/burnchains/burnchain.rs:519:9: replace Burnchain::is_before_reward_cycle -> bool with true
stackslib/src/burnchains/burnchain.rs:532:9: replace Burnchain::static_is_in_prepare_phase -> bool with false
stackslib/src/burnchains/burnchain.rs:541:9: replace Burnchain::is_in_prepare_phase -> bool with false
stackslib/src/burnchains/burnchain.rs:541:9: replace Burnchain::is_in_prepare_phase -> bool with true
stackslib/src/burnchains/burnchain.rs:583:9: replace Burnchain::get_chainstate_config_path -> String with "xyzzy".into()
stackslib/src/burnchains/burnchain.rs:583:9: replace Burnchain::get_chainstate_config_path -> String with String::new()
stackslib/src/burnchains/burnchain.rs:577:9: replace Burnchain::get_chainstate_path_str -> String with String::new()
stackslib/src/burnchains/burnchain.rs:577:9: replace Burnchain::get_chainstate_path_str -> String with "xyzzy".into()
stackslib/src/burnchains/burnchain.rs:626:9: replace Burnchain::get_db_path -> String with "xyzzy".into()
stackslib/src/burnchains/burnchain.rs:626:9: replace Burnchain::get_db_path -> String with String::new()
stackslib/src/burnchains/burnchain.rs:592:9: replace Burnchain::setup_chainstate_dirs -> Result<(), burnchain_error> with Ok(())
stackslib/src/burnchains/burnchain.rs:635:9: replace Burnchain::get_burnchaindb_path -> String with String::new()
stackslib/src/burnchains/burnchain.rs:635:9: replace Burnchain::get_burnchaindb_path -> String with "xyzzy".into()
stackslib/src/burnchains/burnchain.rs:723:9: replace Burnchain::classify_transaction -> Option<BlockstackOperationType> with None
stackslib/src/burnchains/burnchain.rs:901:9: replace Burnchain::filter_block_VRF_dups -> Vec<BlockstackOperationType> with vec![]
stackslib/src/burnchains/burnchain.rs:884:9: replace Burnchain::ops_are_sorted -> bool with false
stackslib/src/burnchains/burnchain.rs:966:9: replace Burnchain::process_affirmation_maps -> Result<(), burnchain_error> with Ok(())
stackslib/src/burnchains/burnchain.rs:1036:9: replace Burnchain::sync_reorg -> Result<(u64, bool), burnchain_error> with Ok((0, true))
stackslib/src/burnchains/burnchain.rs:1036:9: replace Burnchain::sync_reorg -> Result<(u64, bool), burnchain_error> with Ok((0, false))
stackslib/src/burnchains/burnchain.rs:519:9: replace Burnchain::is_before_reward_cycle -> bool with false
stackslib/src/burnchains/burnchain.rs:1036:9: replace Burnchain::sync_reorg -> Result<(u64, bool), burnchain_error> with Ok((1, true))
stackslib/src/burnchains/burnchain.rs:1036:9: replace Burnchain::sync_reorg -> Result<(u64, bool), burnchain_error> with Ok((1, false))
stackslib/src/burnchains/db.rs:66:9: replace BurnchainHeaderReader::read_burnchain_header -> Result<Option<BurnchainBlockHeader>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:316:9: replace BurnchainDBTransaction<'a>::store_burnchain_db_entry -> Result<i64, BurnchainError> with Ok(0)
stackslib/src/burnchains/db.rs:316:9: replace BurnchainDBTransaction<'a>::store_burnchain_db_entry -> Result<i64, BurnchainError> with Ok(1)
stackslib/src/burnchains/burnchain.rs:1080:9: replace Burnchain::sync -> Result<u64, burnchain_error> with Ok(0)
stackslib/src/burnchains/db.rs:316:9: replace BurnchainDBTransaction<'a>::store_burnchain_db_entry -> Result<i64, BurnchainError> with Ok(-1)
stackslib/src/burnchains/db.rs:337:9: replace BurnchainDBTransaction<'a>::insert_block_commit_affirmation_map -> Result<u64, DBError> with Ok(0)
stackslib/src/burnchains/db.rs:337:9: replace BurnchainDBTransaction<'a>::insert_block_commit_affirmation_map -> Result<u64, DBError> with Ok(1)
stackslib/src/burnchains/db.rs:359:9: replace BurnchainDBTransaction<'a>::update_block_commit_affirmation -> Result<(), DBError> with Ok(())
stackslib/src/burnchains/db.rs:382:9: replace BurnchainDBTransaction<'a>::set_anchor_block -> Result<(), DBError> with Ok(())
stackslib/src/burnchains/db.rs:429:9: replace BurnchainDBTransaction<'a>::update_block_descendancy -> Result<(), BurnchainError> with Ok(())
stackslib/src/burnchains/db.rs:534:9: replace BurnchainDBTransaction<'a>::make_prepare_phase_affirmation_map -> Result<u64, BurnchainError> with Ok(0)
stackslib/src/burnchains/db.rs:534:9: replace BurnchainDBTransaction<'a>::make_prepare_phase_affirmation_map -> Result<u64, BurnchainError> with Ok(1)
stackslib/src/burnchains/db.rs:739:9: replace BurnchainDBTransaction<'a>::make_reward_phase_affirmation_map -> Result<u64, BurnchainError> with Ok(0)
stackslib/src/burnchains/burnchain.rs:605:9: replace Burnchain::setup_chainstate -> Result<(), burnchain_error> with Ok(())
stackslib/src/burnchains/db.rs:739:9: replace BurnchainDBTransaction<'a>::make_reward_phase_affirmation_map -> Result<u64, BurnchainError> with Ok(1)
stackslib/src/burnchains/db.rs:855:9: replace BurnchainDBTransaction<'a>::insert_block_commit_metadata -> Result<(), BurnchainError> with Ok(())
stackslib/src/burnchains/db.rs:879:9: replace BurnchainDBTransaction<'a>::store_blockstack_ops -> Result<(), BurnchainError> with Ok(())
stackslib/src/burnchains/db.rs:917:9: replace BurnchainDBTransaction<'a>::commit -> Result<(), BurnchainError> with Ok(())
stackslib/src/burnchains/db.rs:945:9: replace BurnchainDBTransaction<'a>::clear_override_affirmation_map -> Result<(), DBError> with Ok(())
stackslib/src/burnchains/db.rs:935:9: replace BurnchainDBTransaction<'a>::set_override_affirmation_map -> Result<(), DBError> with Ok(())
stackslib/src/burnchains/burnchain.rs:884:9: replace Burnchain::ops_are_sorted -> bool with true
stackslib/src/burnchains/db.rs:1144:9: replace BurnchainDB::inner_get_burnchain_op -> Option<BlockstackOperationType> with None
stackslib/src/burnchains/db.rs:1163:9: replace BurnchainDB::find_burnchain_op -> Option<BlockstackOperationType> with None
stackslib/src/burnchains/db.rs:1105:9: replace BurnchainDB::has_burnchain_block_at_height -> Result<bool, BurnchainError> with Ok(true)
stackslib/src/burnchains/db.rs:1190:9: replace BurnchainDB::get_blockstack_transactions -> Vec<BlockstackOperationType> with vec![]
stackslib/src/burnchains/db.rs:1234:9: replace BurnchainDB::get_affirmation_map -> Result<Option<AffirmationMap>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1243:9: replace BurnchainDB::get_affirmation_weight -> Result<Option<u64>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1243:9: replace BurnchainDB::get_affirmation_weight -> Result<Option<u64>, DBError> with Ok(Some(0))
stackslib/src/burnchains/db.rs:1243:9: replace BurnchainDB::get_affirmation_weight -> Result<Option<u64>, DBError> with Ok(Some(1))
stackslib/src/burnchains/db.rs:1252:9: replace BurnchainDB::get_affirmation_map_id -> Result<Option<u64>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1252:9: replace BurnchainDB::get_affirmation_map_id -> Result<Option<u64>, DBError> with Ok(Some(1))
stackslib/src/burnchains/db.rs:1252:9: replace BurnchainDB::get_affirmation_map_id -> Result<Option<u64>, DBError> with Ok(Some(0))
stackslib/src/burnchains/db.rs:1262:9: replace BurnchainDB::get_affirmation_map_id_at -> Result<Option<u64>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1262:9: replace BurnchainDB::get_affirmation_map_id_at -> Result<Option<u64>, DBError> with Ok(Some(1))
stackslib/src/burnchains/db.rs:1262:9: replace BurnchainDB::get_affirmation_map_id_at -> Result<Option<u64>, DBError> with Ok(Some(0))
stackslib/src/burnchains/db.rs:1271:9: replace BurnchainDB::get_block_commit_affirmation_id -> Result<Option<u64>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1271:9: replace BurnchainDB::get_block_commit_affirmation_id -> Result<Option<u64>, DBError> with Ok(Some(1))
stackslib/src/burnchains/db.rs:1271:9: replace BurnchainDB::get_block_commit_affirmation_id -> Result<Option<u64>, DBError> with Ok(Some(0))
stackslib/src/burnchains/db.rs:1283:9: replace BurnchainDB::is_anchor_block -> Result<bool, DBError> with Ok(false)
stackslib/src/burnchains/db.rs:1289:9: replace BurnchainDB::has_anchor_block -> Result<bool, DBError> with Ok(true)
stackslib/src/burnchains/db.rs:1289:9: replace BurnchainDB::has_anchor_block -> Result<bool, DBError> with Ok(false)
stackslib/src/burnchains/db.rs:1298:9: replace BurnchainDB::get_anchor_block_commit_metadatas -> Result<Vec<BlockCommitMetadata>, DBError> with Ok(vec![])
stackslib/src/burnchains/db.rs:1310:9: replace BurnchainDB::get_canonical_anchor_block_commit_metadata -> Result<Option<BlockCommitMetadata>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1329:9: replace BurnchainDB::get_canonical_anchor_block_commit -> Result<Option<(LeaderBlockCommitOp, BlockCommitMetadata)>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1350:9: replace BurnchainDB::get_anchor_block_commit -> Result<Option<(LeaderBlockCommitOp, BlockCommitMetadata)>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1376:9: replace BurnchainDB::store_new_burnchain_block_ops_unchecked -> Result<(), BurnchainError> with Ok(())
stackslib/src/burnchains/db.rs:1398:9: replace BurnchainDB::store_new_burnchain_block -> Result<Vec<BlockstackOperationType>, BurnchainError> with Ok(vec![])
stackslib/src/burnchains/db.rs:1442:9: replace BurnchainDB::get_block_commit -> Result<Option<LeaderBlockCommitOp>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1457:9: replace BurnchainDB::get_commit_in_block_at -> Result<Option<LeaderBlockCommitOp>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1488:9: replace BurnchainDB::get_commit_at -> Result<Option<LeaderBlockCommitOp>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1504:9: replace BurnchainDB::get_commit_metadata -> Result<Option<BlockCommitMetadata>, DBError> with Ok(None)
stackslib/src/burnchains/db.rs:1524:9: replace BurnchainDB::get_heaviest_anchor_block -> Result<Option<(LeaderBlockCommitOp, BlockCommitMetadata)>, DBError> with Ok(None)
stackslib/src/clarity_vm/clarity.rs:197:9: replace ClarityBlockConnection<'a, 'b>::reset_block_cost -> () with ()
stackslib/src/clarity_vm/clarity.rs:221:9: replace ClarityBlockConnection<'a, 'b>::block_limit -> Option<ExecutionCost> with None
stackslib/src/clarity_vm/clarity.rs:245:9: replace ClarityInstance::is_mainnet -> bool with true
stackslib/src/burnchains/db.rs:1115:9: replace BurnchainDB::get_burnchain_header -> Result<Option<BurnchainBlockHeader>, BurnchainError> with Ok(None)
stackslib/src/clarity_vm/clarity.rs:698:9: replace PreCommitClarityBlock<'a>::commit with ()
stackslib/src/burnchains/burnchain.rs:1323:9: replace Burnchain::get_highest_burnchain_block -> Result<Option<BurnchainBlockHeader>, burnchain_error> with Ok(None)
stackslib/src/clarity_vm/clarity.rs:872:9: replace ClarityBlockConnection<'a, 'b>::initialize_epoch_2_1 -> Result<Vec<StacksTransactionReceipt>, Error> with Ok(vec![])
stackslib/src/clarity_vm/clarity.rs:710:9: replace ClarityBlockConnection<'a, 'b>::rollback_block with ()
stackslib/src/clarity_vm/clarity.rs:1123:9: replace ClarityBlockConnection<'a, 'b>::initialize_epoch_2_4 -> Result<Vec<StacksTransactionReceipt>, Error> with Ok(vec![])
stackslib/src/clarity_vm/clarity.rs:720:9: replace ClarityBlockConnection<'a, 'b>::rollback_unconfirmed with ()
stackslib/src/clarity_vm/clarity.rs:600:9: replace ClarityInstance::trie_exists_for_block -> Result<bool, DatabaseError> with Ok(false)
stackslib/src/clarity_vm/clarity.rs:1518:9: replace ClarityTransactionConnection<'a, 'b>::is_mainnet -> bool with true
stackslib/src/clarity_vm/clarity.rs:1524:9: replace ClarityTransactionConnection<'a, 'b>::commit with ()
stackslib/src/clarity_vm/special.rs:31:5: replace handle_contract_call_special_cases -> Result<(), ClarityError> with Ok(())
stackslib/src/clarity_vm/clarity.rs:1316:9: replace ClarityBlockConnection<'a, 'b>::seal -> TrieHash with Default::default()
stackslib/src/clarity_vm/database/mod.rs:52:9: replace <impl HeadersDB for HeadersDBConn<'a>>::get_burn_header_hash_for_block -> Option<BurnchainHeaderHash> with None
stackslib/src/clarity_vm/database/mod.rs:64:9: replace <impl HeadersDB for HeadersDBConn<'a>>::get_burn_block_time_for_block -> Option<u64> with None
stackslib/src/clarity_vm/database/mod.rs:70:9: replace <impl HeadersDB for HeadersDBConn<'a>>::get_burn_block_height_for_block -> Option<u32> with None
stackslib/src/clarity_vm/database/mod.rs:70:9: replace <impl HeadersDB for HeadersDBConn<'a>>::get_burn_block_height_for_block -> Option<u32> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:70:9: replace <impl HeadersDB for HeadersDBConn<'a>>::get_burn_block_height_for_block -> Option<u32> with Some(1)
stackslib/src/clarity_vm/clarity.rs:1518:9: replace ClarityTransactionConnection<'a, 'b>::is_mainnet -> bool with false
stackslib/src/clarity_vm/database/mod.rs:94:9: replace <impl HeadersDB for HeadersDBConn<'a>>::get_burnchain_tokens_spent_for_block -> Option<u128> with None
stackslib/src/clarity_vm/database/mod.rs:58:9: replace <impl HeadersDB for HeadersDBConn<'a>>::get_consensus_hash_for_block -> Option<ConsensusHash> with None
stackslib/src/clarity_vm/database/mod.rs:108:9: replace <impl HeadersDB for HeadersDBConn<'a>>::get_tokens_earned_for_block -> Option<u128> with Some(1)
stackslib/src/clarity_vm/database/mod.rs:108:9: replace <impl HeadersDB for HeadersDBConn<'a>>::get_tokens_earned_for_block -> Option<u128> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:144:9: replace <impl HeadersDB for ChainstateTx<'a>>::get_burn_block_height_for_block -> Option<u32> with None
stackslib/src/clarity_vm/database/mod.rs:144:9: replace <impl HeadersDB for ChainstateTx<'a>>::get_burn_block_height_for_block -> Option<u32> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:144:9: replace <impl HeadersDB for ChainstateTx<'a>>::get_burn_block_height_for_block -> Option<u32> with Some(1)
stackslib/src/clarity_vm/database/mod.rs:101:9: replace <impl HeadersDB for HeadersDBConn<'a>>::get_burnchain_tokens_spent_for_winning_block -> Option<u128> with Some(1)
stackslib/src/clarity_vm/database/mod.rs:132:9: replace <impl HeadersDB for ChainstateTx<'a>>::get_consensus_hash_for_block -> Option<ConsensusHash> with None
stackslib/src/clarity_vm/database/mod.rs:194:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_stacks_block_header_hash_for_block -> Option<BlockHeaderHash> with None
stackslib/src/clarity_vm/database/mod.rs:168:9: replace <impl HeadersDB for ChainstateTx<'a>>::get_burnchain_tokens_spent_for_block -> Option<u128> with None
stackslib/src/clarity_vm/database/mod.rs:209:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_consensus_hash_for_block -> Option<ConsensusHash> with None
stackslib/src/clarity_vm/database/mod.rs:168:9: replace <impl HeadersDB for ChainstateTx<'a>>::get_burnchain_tokens_spent_for_block -> Option<u128> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:221:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_burn_block_height_for_block -> Option<u32> with None
stackslib/src/clarity_vm/database/mod.rs:221:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_burn_block_height_for_block -> Option<u32> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:215:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_burn_block_time_for_block -> Option<u64> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:221:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_burn_block_height_for_block -> Option<u32> with Some(1)
stackslib/src/clarity_vm/database/mod.rs:185:9: replace <impl HeadersDB for ChainstateTx<'a>>::get_tokens_earned_for_block -> Option<u128> with Some(1)
stackslib/src/clarity_vm/database/mod.rs:237:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_miner_address -> Option<StacksAddress> with None
stackslib/src/clarity_vm/database/mod.rs:245:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_burnchain_tokens_spent_for_block -> Option<u128> with None
stackslib/src/clarity_vm/database/mod.rs:245:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_burnchain_tokens_spent_for_block -> Option<u128> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:275:5: replace get_stacks_header_column -> Option<R> with None
stackslib/src/clarity_vm/database/mod.rs:245:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_burnchain_tokens_spent_for_block -> Option<u128> with Some(1)
stackslib/src/clarity_vm/database/mod.rs:255:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_burnchain_tokens_spent_for_winning_block -> Option<u128> with None
stackslib/src/clarity_vm/database/mod.rs:255:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_burnchain_tokens_spent_for_winning_block -> Option<u128> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:255:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_burnchain_tokens_spent_for_winning_block -> Option<u128> with Some(1)
stackslib/src/clarity_vm/database/mod.rs:262:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_tokens_earned_for_block -> Option<u128> with None
stackslib/src/clarity_vm/database/mod.rs:355:5: replace get_pox_start_cycle_info -> Result<Option<PoxStartCycleInfo>, ChainstateError> with Ok(None)
stackslib/src/clarity_vm/database/mod.rs:405:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_burn_block_height -> Option<u32> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:405:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_burn_block_height -> Option<u32> with Some(1)
stackslib/src/clarity_vm/database/mod.rs:379:9: replace <impl SortitionDBRef for SortitionHandleTx<'_>>::get_pox_start_cycle_info -> Result<Option<PoxStartCycleInfo>, ChainstateError> with Ok(None)
stackslib/src/clarity_vm/database/mod.rs:434:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_sortition_id_from_consensus_hash -> Option<SortitionId> with None
stackslib/src/clarity_vm/database/mod.rs:398:9: replace <impl SortitionDBRef for SortitionDBConn<'_>>::get_pox_start_cycle_info -> Result<Option<PoxStartCycleInfo>, ChainstateError> with Ok(None)
stackslib/src/clarity_vm/database/mod.rs:441:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_stacks_epoch -> Option<StacksEpoch> with None
stackslib/src/clarity_vm/database/mod.rs:446:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_burn_start_height -> u32 with 0
stackslib/src/clarity_vm/database/mod.rs:262:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_tokens_earned_for_block -> Option<u128> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:446:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_burn_start_height -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:450:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_v1_unlock_height -> u32 with 0
stackslib/src/clarity_vm/database/mod.rs:450:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_v1_unlock_height -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:458:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_3_activation_height -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:458:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_3_activation_height -> u32 with 0
stackslib/src/clarity_vm/database/mod.rs:466:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_reward_cycle_length -> u32 with 0
stackslib/src/clarity_vm/database/mod.rs:462:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_prepare_length -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:462:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_prepare_length -> u32 with 0
stackslib/src/clarity_vm/database/mod.rs:454:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_v2_unlock_height -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:466:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_reward_cycle_length -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:473:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_stacks_epoch_by_epoch_id -> Option<StacksEpoch> with None
stackslib/src/clarity_vm/database/mod.rs:470:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_rejection_fraction -> u64 with 0
stackslib/src/clarity_vm/database/mod.rs:470:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_rejection_fraction -> u64 with 1
stackslib/src/clarity_vm/database/mod.rs:262:9: replace <impl HeadersDB for MARF<StacksBlockId>>::get_tokens_earned_for_block -> Option<u128> with Some(1)
stackslib/src/clarity_vm/database/mod.rs:481:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_payout_addrs -> Option<(Vec<TupleData>, u128)> with None
stackslib/src/clarity_vm/database/mod.rs:481:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_payout_addrs -> Option<(Vec<TupleData>, u128)> with Some((vec![], 0))
stackslib/src/clarity_vm/database/mod.rs:519:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_burn_block_height -> Option<u32> with Some(1)
stackslib/src/clarity_vm/database/mod.rs:481:9: replace <impl BurnStateDB for SortitionHandleTx<'_>>::get_pox_payout_addrs -> Option<(Vec<TupleData>, u128)> with Some((vec![], 1))
stackslib/src/clarity_vm/database/mod.rs:519:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_burn_block_height -> Option<u32> with Some(0)
stackslib/src/clarity_vm/database/mod.rs:300:5: replace get_miner_column -> Option<R> with None
stackslib/src/clarity_vm/database/mod.rs:317:5: replace get_matured_reward -> Option<MinerReward> with None
stackslib/src/clarity_vm/database/mod.rs:553:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_sortition_id_from_consensus_hash -> Option<SortitionId> with None
stackslib/src/clarity_vm/database/mod.rs:569:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_v1_unlock_height -> u32 with 0
stackslib/src/clarity_vm/database/mod.rs:565:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_burn_start_height -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:560:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_stacks_epoch -> Option<StacksEpoch> with None
stackslib/src/clarity_vm/database/mod.rs:573:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_v2_unlock_height -> u32 with 0
stackslib/src/clarity_vm/database/mod.rs:573:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_v2_unlock_height -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:569:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_v1_unlock_height -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:577:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_3_activation_height -> u32 with 0
stackslib/src/clarity_vm/database/mod.rs:577:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_3_activation_height -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:581:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_prepare_length -> u32 with 0
stackslib/src/clarity_vm/database/mod.rs:581:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_prepare_length -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:585:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_reward_cycle_length -> u32 with 0
stackslib/src/clarity_vm/database/mod.rs:519:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_burn_block_height -> Option<u32> with None
stackslib/src/clarity_vm/database/mod.rs:585:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_reward_cycle_length -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:592:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_stacks_epoch_by_epoch_id -> Option<StacksEpoch> with None
stackslib/src/clarity_vm/database/mod.rs:589:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_rejection_fraction -> u64 with 0
stackslib/src/clarity_vm/database/mod.rs:589:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_rejection_fraction -> u64 with 1
stackslib/src/clarity_vm/database/mod.rs:600:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_payout_addrs -> Option<(Vec<TupleData>, u128)> with None
stackslib/src/clarity_vm/database/mod.rs:669:9: replace <impl ClarityBackingStore for MemoryBackingStore>::get -> Option<String> with Some(String::new())
stackslib/src/clarity_vm/database/mod.rs:669:9: replace <impl ClarityBackingStore for MemoryBackingStore>::get -> Option<String> with None
stackslib/src/clarity_vm/database/mod.rs:600:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_payout_addrs -> Option<(Vec<TupleData>, u128)> with Some((vec![], 0))
stackslib/src/clarity_vm/database/mod.rs:600:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_pox_payout_addrs -> Option<(Vec<TupleData>, u128)> with Some((vec![], 1))
stackslib/src/clarity_vm/database/mod.rs:673:9: replace <impl ClarityBackingStore for MemoryBackingStore>::get_with_proof -> Option<(String, Vec<u8>)> with None
stackslib/src/clarity_vm/database/mod.rs:669:9: replace <impl ClarityBackingStore for MemoryBackingStore>::get -> Option<String> with Some("xyzzy".into())
stackslib/src/clarity_vm/database/mod.rs:530:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_burn_header_hash -> Option<BurnchainHeaderHash> with None
stackslib/src/clarity_vm/database/mod.rs:681:9: replace <impl ClarityBackingStore for MemoryBackingStore>::get_block_at_height -> Option<StacksBlockId> with None
stackslib/src/clarity_vm/database/mod.rs:565:9: replace <impl BurnStateDB for SortitionDBConn<'_>>::get_burn_start_height -> u32 with 0
stackslib/src/core/mempool.rs:89:57: replace * with /
stackslib/src/clarity_vm/database/mod.rs:693:9: replace <impl ClarityBackingStore for MemoryBackingStore>::get_open_chain_tip_height -> u32 with 1
stackslib/src/clarity_vm/database/mod.rs:673:9: replace <impl ClarityBackingStore for MemoryBackingStore>::get_with_proof -> Option<(String, Vec<u8>)> with Some((String::new(), vec![0]))
stackslib/src/core/mempool.rs:89:47: replace * with +
stackslib/src/clarity_vm/database/mod.rs:705:9: replace <impl ClarityBackingStore for MemoryBackingStore>::put_all with ()
stackslib/src/core/mempool.rs:144:9: replace <impl StacksMessageCodec for MemPoolSyncData>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/core/mempool.rs:89:47: replace * with /
stackslib/src/core/mempool.rs:89:52: replace * with +
stackslib/src/core/mempool.rs:120:9: replace <impl StacksMessageCodec for TxTag>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/core/mempool.rs:184:5: replace parse_mempool_query_page_id -> Result<Option<Txid>, net_error> with Ok(None)
stackslib/src/core/mempool.rs:312:9: replace MemPoolAdmitter::set_block with ()
stackslib/src/core/mempool.rs:616:9: replace <impl FromRow for (u64, u64)>::from_row -> Result<(u64, u64), db_error> with Ok((0, 0))
stackslib/src/core/mempool.rs:616:9: replace <impl FromRow for (u64, u64)>::from_row -> Result<(u64, u64), db_error> with Ok((0, 1))
stackslib/src/core/mempool.rs:616:9: replace <impl FromRow for (u64, u64)>::from_row -> Result<(u64, u64), db_error> with Ok((1, 0))
stackslib/src/core/mempool.rs:616:9: replace <impl FromRow for (u64, u64)>::from_row -> Result<(u64, u64), db_error> with Ok((1, 1))
stackslib/src/core/mempool.rs:830:9: replace MemPoolTx<'a>::commit -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:89:57: replace * with +
stackslib/src/core/mempool.rs:222:5: replace decode_tx_stream -> Result<(Vec<StacksTransaction>, Option<Txid>), net_error> with Ok((vec![], None))
stackslib/src/core/mempool.rs:836:9: replace MemPoolTx<'a>::prune_bloom_counter -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/core/mempool.rs:464:9: replace MemPoolWalkTxTypes::all -> HashSet<MemPoolWalkTxTypes> with HashSet::new()
stackslib/src/core/mempool.rs:931:9: replace MemPoolTx<'a>::update_mempool_pager -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/core/mempool.rs:1025:9: replace NonceCache::get -> (u64, bool) with (0, true)
stackslib/src/core/mempool.rs:322:9: replace MemPoolAdmitter::will_admit_tx -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/core/mempool.rs:1075:9: replace NonceCache::update -> bool with true
stackslib/src/core/mempool.rs:1025:9: replace NonceCache::get -> (u64, bool) with (0, false)
stackslib/src/core/mempool.rs:1025:9: replace NonceCache::get -> (u64, bool) with (1, true)
stackslib/src/core/mempool.rs:879:9: replace MemPoolTx<'a>::update_bloom_counter -> Result<Option<Txid>, MemPoolRejection> with Ok(None)
stackslib/src/core/mempool.rs:1025:9: replace NonceCache::get -> (u64, bool) with (1, false)
stackslib/src/core/mempool.rs:1105:5: replace db_get_nonce -> Result<Option<u64>, db_error> with Ok(Some(0))
stackslib/src/core/mempool.rs:1158:9: replace CandidateCache::push with ()
stackslib/src/core/mempool.rs:1174:9: replace CandidateCache::reset with ()
stackslib/src/core/mempool.rs:1075:9: replace NonceCache::update -> bool with false
stackslib/src/core/mempool.rs:1096:5: replace db_set_nonce -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:1221:9: replace MemPoolDB::instantiate_mempool_db -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:1241:9: replace MemPoolDB::get_schema_version -> Result<Option<i64>, db_error> with Ok(None)
stackslib/src/core/mempool.rs:1241:9: replace MemPoolDB::get_schema_version -> Result<Option<i64>, db_error> with Ok(Some(1))
stackslib/src/core/mempool.rs:1105:5: replace db_get_nonce -> Result<Option<u64>, db_error> with Ok(None)
stackslib/src/core/mempool.rs:1241:9: replace MemPoolDB::get_schema_version -> Result<Option<i64>, db_error> with Ok(Some(0))
stackslib/src/core/mempool.rs:1241:9: replace MemPoolDB::get_schema_version -> Result<Option<i64>, db_error> with Ok(Some(-1))
stackslib/src/core/mempool.rs:1259:9: replace MemPoolDB::apply_schema_migrations -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:1324:9: replace MemPoolDB::denormalize_fee_rate -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:1153:9: replace CandidateCache::next -> Option<MemPoolTxInfoPartial> with None
stackslib/src/core/mempool.rs:1105:5: replace db_get_nonce -> Result<Option<u64>, db_error> with Ok(Some(1))
stackslib/src/core/mempool.rs:1495:9: replace MemPoolDB::estimate_tx_rates -> Result<u32, db_error> with Ok(0)
stackslib/src/core/mempool.rs:1912:9: replace MemPoolDB::db_has_tx -> Result<bool, db_error> with Ok(false)
stackslib/src/core/mempool.rs:1472:9: replace MemPoolDB::find_origin_addresses_by_descending_fees -> Result<Vec<StacksAddress>, db_error> with Ok(vec![])
stackslib/src/core/mempool.rs:1965:9: replace MemPoolDB::get_previous_block_height -> Result<Option<u64>, db_error> with Ok(None)
stackslib/src/core/mempool.rs:1595:9: replace MemPoolDB::iterate_candidates -> Result<u64, E> with Ok(0)
stackslib/src/core/mempool.rs:1595:9: replace MemPoolDB::iterate_candidates -> Result<u64, E> with Ok(1)
stackslib/src/core/mempool.rs:1912:9: replace MemPoolDB::db_has_tx -> Result<bool, db_error> with Ok(true)
stackslib/src/core/mempool.rs:1921:9: replace MemPoolDB::get_tx -> Result<Option<MemPoolTxInfo>, db_error> with Ok(None)
stackslib/src/core/mempool.rs:1544:9: replace MemPoolDB::save_nonce_for_retry with ()
stackslib/src/core/mempool.rs:1957:9: replace MemPoolDB::get_txs_at -> Result<Vec<MemPoolTxInfo>, db_error> with Ok(vec![])
stackslib/src/core/mempool.rs:2027:9: replace MemPoolDB::are_blocks_in_same_fork -> Result<bool, db_error> with Ok(false)
stackslib/src/core/mempool.rs:1978:9: replace MemPoolDB::get_txs_after -> Result<Vec<MemPoolTxInfo>, db_error> with Ok(vec![])
stackslib/src/core/mempool.rs:2071:9: replace MemPoolDB::try_add_tx -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/core/mempool.rs:2343:9: replace MemPoolDB::submit -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/core/mempool.rs:2396:9: replace MemPoolDB::miner_submit -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/core/mempool.rs:1998:9: replace MemPoolDB::get_tx_metadata_by_address -> Result<Option<MemPoolTxMetadata>, db_error> with Ok(None)
stackslib/src/core/mempool.rs:2482:9: replace MemPoolDB::inner_blacklist_txs -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:2498:9: replace MemPoolDB::garbage_collect_tx_blacklist -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:2186:9: replace MemPoolDB::garbage_collect -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:2539:9: replace MemPoolDB::inner_is_tx_blacklisted -> Result<bool, db_error> with Ok(true)
stackslib/src/core/mempool.rs:2249:9: replace MemPoolDB::tx_submit -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/core/mempool.rs:2428:9: replace MemPoolDB::submit_raw -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/core/mempool.rs:2547:9: replace MemPoolDB::is_tx_blacklisted -> Result<bool, db_error> with Ok(true)
stackslib/src/core/mempool.rs:2527:9: replace MemPoolDB::get_blacklisted_tx_arrival_time -> Result<Option<u64>, db_error> with Ok(None)
stackslib/src/core/mempool.rs:2527:9: replace MemPoolDB::get_blacklisted_tx_arrival_time -> Result<Option<u64>, db_error> with Ok(Some(0))
stackslib/src/core/mempool.rs:2527:9: replace MemPoolDB::get_blacklisted_tx_arrival_time -> Result<Option<u64>, db_error> with Ok(Some(1))
stackslib/src/core/mempool.rs:2539:9: replace MemPoolDB::inner_is_tx_blacklisted -> Result<bool, db_error> with Ok(false)
stackslib/src/core/mempool.rs:2547:9: replace MemPoolDB::is_tx_blacklisted -> Result<bool, db_error> with Ok(false)
stackslib/src/core/mempool.rs:2629:9: replace MemPoolDB::get_max_height -> Result<Option<u64>, db_error> with Ok(None)
stackslib/src/core/mempool.rs:2629:9: replace MemPoolDB::get_max_height -> Result<Option<u64>, db_error> with Ok(Some(0))
stackslib/src/core/mempool.rs:2558:9: replace MemPoolDB::inner_drop_txs -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:2659:9: replace MemPoolDB::get_txtags -> Result<Vec<TxTag>, db_error> with Ok(vec![])
stackslib/src/core/mempool.rs:2568:9: replace MemPoolDB::drop_txs -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:2580:9: replace MemPoolDB::drop_and_blacklist_txs -> Result<(), db_error> with Ok(())
stackslib/src/core/mempool.rs:2608:9: replace MemPoolDB::has_tx -> bool with true
stackslib/src/core/mempool.rs:2608:9: replace MemPoolDB::has_tx -> bool with false
stackslib/src/core/mempool.rs:2737:9: replace MemPoolDB::static_find_next_missing_transactions -> Result<(Vec<StacksTransaction>, Option<Txid>, u64), db_error> with Ok((vec![], None, 0))
stackslib/src/monitoring/prometheus.rs:257:5: replace new_rpc_call_timer -> HistogramTimer with Default::default()
stackslib/src/core/mempool.rs:2712:9: replace MemPoolDB::find_next_missing_transactions -> Result<(Vec<StacksTransaction>, Option<Txid>, u64), db_error> with Ok((vec![], None, 1))
stackslib/src/core/mempool.rs:2629:9: replace MemPoolDB::get_max_height -> Result<Option<u64>, db_error> with Ok(Some(1))
stackslib/src/core/mempool.rs:2642:9: replace MemPoolDB::get_bloom_txids -> Result<Vec<Txid>, db_error> with Ok(vec![])
stackslib/src/core/mempool.rs:2670:9: replace MemPoolDB::get_num_recent_txs -> Result<u64, db_error> with Ok(0)
stackslib/src/core/mempool.rs:2670:9: replace MemPoolDB::get_num_recent_txs -> Result<u64, db_error> with Ok(1)
stackslib/src/core/mempool.rs:2699:9: replace MemPoolDB::get_randomized_txid -> Result<Option<Txid>, db_error> with Ok(None)
stackslib/src/cost_estimates/fee_medians.rs:133:13: replace WeightedMedianFeeRateEstimator<M>::get_rate_estimates_from_sql::median -> f64 with -1.0
stackslib/src/core/mempool.rs:2712:9: replace MemPoolDB::find_next_missing_transactions -> Result<(Vec<StacksTransaction>, Option<Txid>, u64), db_error> with Ok((vec![], None, 0))
stackslib/src/core/mempool.rs:2737:9: replace MemPoolDB::static_find_next_missing_transactions -> Result<(Vec<StacksTransaction>, Option<Txid>, u64), db_error> with Ok((vec![], None, 1))
stackslib/src/cost_estimates/fee_medians.rs:93:9: replace WeightedMedianFeeRateEstimator<M>::instantiate_db -> Result<(), SqliteError> with Ok(())
stackslib/src/cost_estimates/fee_medians.rs:89:9: replace WeightedMedianFeeRateEstimator<M>::db_already_instantiated -> Result<bool, SqliteError> with Ok(true)
stackslib/src/cost_estimates/fee_rate_fuzzer.rs:81:9: replace <impl FeeEstimator for FeeRateFuzzer<T>>::notify_block -> Result<(), EstimatorError> with Ok(())
stackslib/src/cost_estimates/fee_scalar.rs:72:9: replace ScalarFeeRateEstimator<M>::db_already_instantiated -> Result<bool, SqliteError> with Ok(true)
stackslib/src/cost_estimates/fee_medians.rs:285:5: replace maybe_add_minimum_fee_rate with ()
stackslib/src/cost_estimates/fee_medians.rs:133:13: replace WeightedMedianFeeRateEstimator<M>::get_rate_estimates_from_sql::median -> f64 with 0.0
stackslib/src/cost_estimates/fee_medians.rs:133:13: replace WeightedMedianFeeRateEstimator<M>::get_rate_estimates_from_sql::median -> f64 with 1.0
stackslib/src/cost_estimates/fee_medians.rs:156:9: replace WeightedMedianFeeRateEstimator<M>::update_estimate with ()
stackslib/src/cost_estimates/fee_medians.rs:192:9: replace <impl FeeEstimator for WeightedMedianFeeRateEstimator<M>>::notify_block -> Result<(), EstimatorError> with Ok(())
stackslib/src/cost_estimates/fee_medians.rs:312:5: replace fee_rate_and_weight_from_receipt -> Option<FeeRateAndWeight> with None
stackslib/src/cost_estimates/metrics.rs:27:9: replace <impl CostMetric for Box<dyn CostMetric>>::from_cost_and_len -> u64 with 1
stackslib/src/cost_estimates/fee_scalar.rs:154:9: replace <impl FeeEstimator for ScalarFeeRateEstimator<M>>::notify_block -> Result<(), EstimatorError> with Ok(())
stackslib/src/cost_estimates/metrics.rs:31:9: replace <impl CostMetric for Box<dyn CostMetric>>::from_len -> u64 with 1
stackslib/src/cost_estimates/fee_scalar.rs:76:9: replace ScalarFeeRateEstimator<M>::instantiate_db -> Result<(), SqliteError> with Ok(())
stackslib/src/cost_estimates/fee_scalar.rs:84:9: replace ScalarFeeRateEstimator<M>::update_estimate with ()
stackslib/src/cost_estimates/metrics.rs:35:9: replace <impl CostMetric for Box<dyn CostMetric>>::change_per_byte -> f64 with 1.0
stackslib/src/cost_estimates/metrics.rs:64:9: replace ProportionalDotProduct::calculate_len_proportion -> u64 with 0
stackslib/src/cost_estimates/metrics.rs:64:9: replace ProportionalDotProduct::calculate_len_proportion -> u64 with 1
stackslib/src/cost_estimates/metrics.rs:87:9: replace <impl CostMetric for ProportionalDotProduct>::change_per_byte -> f64 with 0.0
stackslib/src/cost_estimates/metrics.rs:77:9: replace <impl CostMetric for ProportionalDotProduct>::from_cost_and_len -> u64 with 0
stackslib/src/cost_estimates/metrics.rs:98:9: replace <impl CostMetric for UnitMetric>::from_cost_and_len -> u64 with 0
stackslib/src/cost_estimates/metrics.rs:77:9: replace <impl CostMetric for ProportionalDotProduct>::from_cost_and_len -> u64 with 1
stackslib/src/cost_estimates/metrics.rs:106:9: replace <impl CostMetric for UnitMetric>::change_per_byte -> f64 with -1.0
stackslib/src/cost_estimates/metrics.rs:106:9: replace <impl CostMetric for UnitMetric>::change_per_byte -> f64 with 0.0
stackslib/src/cost_estimates/pessimistic.rs:58:9: replace CostField::select_key -> u64 with 0
stackslib/src/cost_estimates/pessimistic.rs:58:9: replace CostField::select_key -> u64 with 1
stackslib/src/cost_estimates/pessimistic.rs:70:9: replace <impl Display for CostField>::fmt -> std::fmt::Result with Ok(Default::default())
stackslib/src/cost_estimates/pessimistic.rs:95:9: replace Samples::to_json -> JsonValue with Default::default()
stackslib/src/cost_estimates/pessimistic.rs:102:9: replace Samples::update_with -> bool with true
stackslib/src/cost_estimates/pessimistic.rs:205:9: replace PessimisticEstimator::db_already_instantiated -> Result<bool, SqliteError> with Ok(true)
stackslib/src/cost_estimates/pessimistic.rs:102:9: replace Samples::update_with -> bool with false
stackslib/src/cost_estimates/pessimistic.rs:209:9: replace PessimisticEstimator::instantiate_db -> Result<(), SqliteError> with Ok(())
stackslib/src/cost_estimates/pessimistic.rs:133:9: replace Samples::mean -> u64 with 0
stackslib/src/cost_estimates/pessimistic.rs:221:9: replace PessimisticEstimator::get_estimate_key -> String with String::new()
stackslib/src/cost_estimates/pessimistic.rs:133:9: replace Samples::mean -> u64 with 1
stackslib/src/cost_estimates/pessimistic.rs:146:9: replace Samples::flush_sqlite with ()
stackslib/src/cost_estimates/pessimistic.rs:165:9: replace Samples::get_estimate_sqlite -> Option<u64> with None
stackslib/src/cost_estimates/pessimistic.rs:165:9: replace Samples::get_estimate_sqlite -> Option<u64> with Some(0)
stackslib/src/cost_estimates/pessimistic.rs:165:9: replace Samples::get_estimate_sqlite -> Option<u64> with Some(1)
stackslib/src/net/api/callreadonly.rs:108:9: replace <impl HttpRequest for RPCCallReadOnlyRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/cost_estimates/pessimistic.rs:221:9: replace PessimisticEstimator::get_estimate_key -> String with "xyzzy".into()
stackslib/src/cost_estimates/pessimistic.rs:265:9: replace <impl CostEstimator for PessimisticEstimator>::notify_event -> Result<(), EstimatorError> with Ok(())
stackslib/src/net/api/callreadonly.rs:108:9: replace <impl HttpRequest for RPCCallReadOnlyRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/callreadonly.rs:180:9: replace <impl RPCRequestHandler for RPCCallReadOnlyRequestHandler>::restart with ()
stackslib/src/net/api/getaccount.rs:76:9: replace <impl HttpRequest for RPCGetAccountRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getaccount.rs:76:9: replace <impl HttpRequest for RPCGetAccountRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getaccount.rs:121:9: replace <impl RPCRequestHandler for RPCGetAccountRequestHandler>::restart with ()
stackslib/src/net/api/getattachment.rs:55:9: replace <impl HttpRequest for RPCGetAttachmentRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getattachment.rs:55:9: replace <impl HttpRequest for RPCGetAttachmentRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getblock.rs:86:9: replace <impl HttpRequest for RPCBlocksRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getattachment.rs:96:9: replace <impl RPCRequestHandler for RPCGetAttachmentRequestHandler>::restart with ()
stackslib/src/net/api/getattachmentsinv.rs:57:9: replace <impl HttpRequest for RPCGetAttachmentsInvRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getblock.rs:206:9: replace <impl HttpChunkGenerator for StacksBlockStream>::hint_chunk_size -> usize with 1
stackslib/src/net/api/getattachmentsinv.rs:57:9: replace <impl HttpRequest for RPCGetAttachmentsInvRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getconstantval.rs:75:9: replace <impl HttpRequest for RPCGetConstantValRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getattachmentsinv.rs:132:9: replace <impl RPCRequestHandler for RPCGetAttachmentsInvRequestHandler>::restart with ()
stackslib/src/net/api/getblock.rs:86:9: replace <impl HttpRequest for RPCBlocksRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getblock.rs:126:9: replace <impl RPCRequestHandler for RPCBlocksRequestHandler>::restart with ()
stackslib/src/net/api/getblock.rs:210:9: replace <impl HttpChunkGenerator for StacksBlockStream>::generate_next_chunk -> Result<Vec<u8>, String> with Ok(vec![])
stackslib/src/net/api/getconstantval.rs:75:9: replace <impl HttpRequest for RPCGetConstantValRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getconstantval.rs:116:9: replace <impl RPCRequestHandler for RPCGetConstantValRequestHandler>::restart with ()
stackslib/src/net/api/getcontractabi.rs:70:9: replace <impl HttpRequest for RPCGetContractAbiRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getdatavar.rs:78:9: replace <impl HttpRequest for RPCGetDataVarRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getcontractabi.rs:70:9: replace <impl HttpRequest for RPCGetContractAbiRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getcontractabi.rs:109:9: replace <impl RPCRequestHandler for RPCGetContractAbiRequestHandler>::restart with ()
stackslib/src/net/api/getdatavar.rs:119:9: replace <impl RPCRequestHandler for RPCGetDataVarRequestHandler>::restart with ()
stackslib/src/net/api/getcontractsrc.rs:78:9: replace <impl HttpRequest for RPCGetContractSrcRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getcontractsrc.rs:116:9: replace <impl RPCRequestHandler for RPCGetContractSrcRequestHandler>::restart with ()
stackslib/src/net/api/getcontractsrc.rs:78:9: replace <impl HttpRequest for RPCGetContractSrcRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getheaders.rs:231:9: replace <impl HttpChunkGenerator for StacksHeaderStream>::hint_chunk_size -> usize with 0
stackslib/src/net/api/getheaders.rs:235:9: replace <impl HttpChunkGenerator for StacksHeaderStream>::generate_next_chunk -> Result<Vec<u8>, String> with Ok(vec![])
stackslib/src/net/api/getdatavar.rs:78:9: replace <impl HttpRequest for RPCGetDataVarRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getheaders.rs:105:9: replace <impl HttpRequest for RPCHeadersRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getheaders.rs:105:9: replace <impl HttpRequest for RPCHeadersRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getheaders.rs:139:9: replace <impl RPCRequestHandler for RPCHeadersRequestHandler>::restart with ()
stackslib/src/net/api/getmapentry.rs:84:9: replace <impl HttpRequest for RPCGetMapEntryRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getheaders.rs:319:9: replace StacksHttpResponse::decode_stacks_headers -> Result<Vec<ExtendedStacksHeader>, NetError> with Ok(vec![])
stackslib/src/net/api/getheaders.rs:235:9: replace <impl HttpChunkGenerator for StacksHeaderStream>::generate_next_chunk -> Result<Vec<u8>, String> with Ok(vec![0])
stackslib/src/net/api/getinfo.rs:178:9: replace <impl HttpRequest for RPCPeerInfoRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getinfo.rs:178:9: replace <impl HttpRequest for RPCPeerInfoRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getistraitimplemented.rs:78:9: replace <impl HttpRequest for RPCGetIsTraitImplementedRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getmicroblocks_indexed.rs:108:9: replace <impl HttpRequest for RPCMicroblocksIndexedRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getistraitimplemented.rs:78:9: replace <impl HttpRequest for RPCGetIsTraitImplementedRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getistraitimplemented.rs:121:9: replace <impl RPCRequestHandler for RPCGetIsTraitImplementedRequestHandler>::restart with ()
stackslib/src/net/api/getmicroblocks_indexed.rs:214:9: replace <impl HttpChunkGenerator for StacksIndexedMicroblockStream>::hint_chunk_size -> usize with 0
stackslib/src/net/api/getmapentry.rs:84:9: replace <impl HttpRequest for RPCGetMapEntryRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getmicroblocks_indexed.rs:227:9: replace <impl HttpChunkGenerator for StacksIndexedMicroblockStream>::generate_next_chunk -> Result<Vec<u8>, String> with Ok(vec![0])
stackslib/src/net/api/getmapentry.rs:141:9: replace <impl RPCRequestHandler for RPCGetMapEntryRequestHandler>::restart with ()
stackslib/src/net/api/getmicroblocks_indexed.rs:141:9: replace <impl RPCRequestHandler for RPCMicroblocksIndexedRequestHandler>::restart with ()
stackslib/src/net/api/getmicroblocks_confirmed.rs:75:9: replace <impl HttpRequest for RPCMicroblocksConfirmedRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getmicroblocks_unconfirmed.rs:102:9: replace <impl HttpRequest for RPCMicroblocksUnconfirmedRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getmicroblocks_confirmed.rs:75:9: replace <impl HttpRequest for RPCMicroblocksConfirmedRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getmicroblocks_unconfirmed.rs:221:9: replace <impl HttpChunkGenerator for StacksUnconfirmedMicroblockStream>::hint_chunk_size -> usize with 0
stackslib/src/net/api/getmicroblocks_confirmed.rs:107:9: replace <impl RPCRequestHandler for RPCMicroblocksConfirmedRequestHandler>::restart with ()
stackslib/src/net/api/getmicroblocks_unconfirmed.rs:228:9: replace <impl HttpChunkGenerator for StacksUnconfirmedMicroblockStream>::generate_next_chunk -> Result<Vec<u8>, String> with Ok(vec![])
stackslib/src/net/api/getmicroblocks_unconfirmed.rs:228:9: replace <impl HttpChunkGenerator for StacksUnconfirmedMicroblockStream>::generate_next_chunk -> Result<Vec<u8>, String> with Ok(vec![0])
stackslib/src/net/api/getmicroblocks_indexed.rs:108:9: replace <impl HttpRequest for RPCMicroblocksIndexedRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getmicroblocks_indexed.rs:227:9: replace <impl HttpChunkGenerator for StacksIndexedMicroblockStream>::generate_next_chunk -> Result<Vec<u8>, String> with Ok(vec![])
stackslib/src/net/api/getmicroblocks_unconfirmed.rs:228:9: replace <impl HttpChunkGenerator for StacksUnconfirmedMicroblockStream>::generate_next_chunk -> Result<Vec<u8>, String> with Ok(vec![1])
stackslib/src/net/api/getmicroblocks_indexed.rs:305:9: replace StacksHttpResponse::decode_microblocks -> Result<Vec<StacksMicroblock>, NetError> with Ok(vec![])
stackslib/src/net/api/getmicroblocks_unconfirmed.rs:102:9: replace <impl HttpRequest for RPCMicroblocksUnconfirmedRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getmicroblocks_unconfirmed.rs:143:9: replace <impl RPCRequestHandler for RPCMicroblocksUnconfirmedRequestHandler>::restart with ()
stackslib/src/net/api/getstackerdbchunk.rs:70:9: replace <impl HttpRequest for RPCGetStackerDBChunkRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getmicroblocks_unconfirmed.rs:290:9: replace StacksHttpResponse::decode_microblocks_unconfirmed -> Result<Vec<StacksMicroblock>, NetError> with Ok(vec![])
stackslib/src/net/api/getneighbors.rs:175:9: replace <impl HttpRequest for RPCNeighborsRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getneighbors.rs:175:9: replace <impl HttpRequest for RPCNeighborsRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getstackerdbmetadata.rs:65:9: replace <impl HttpRequest for RPCGetStackerDBMetadataRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getpoxinfo.rs:376:9: replace <impl HttpRequest for RPCPoxInfoRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getstackerdbchunk.rs:114:9: replace <impl RPCRequestHandler for RPCGetStackerDBChunkRequestHandler>::restart with ()
stackslib/src/net/api/getstackerdbchunk.rs:247:9: replace StacksHttpResponse::decode_stackerdb_chunk -> Result<Vec<u8>, NetError> with Ok(vec![1])
stackslib/src/net/api/getstackerdbmetadata.rs:179:9: replace StacksHttpResponse::decode_stackerdb_metadata -> Result<Vec<SlotMetadata>, NetError> with Ok(vec![])
stackslib/src/net/api/getstackerdbmetadata.rs:101:9: replace <impl RPCRequestHandler for RPCGetStackerDBMetadataRequestHandler>::restart with ()
stackslib/src/net/api/getstxtransfercost.rs:55:9: replace <impl HttpRequest for RPCGetStxTransferCostRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getstxtransfercost.rs:127:9: replace StacksHttpResponse::decode_stx_transfer_fee -> Result<u64, NetError> with Ok(1)
stackslib/src/net/api/getstxtransfercost.rs:127:9: replace StacksHttpResponse::decode_stx_transfer_fee -> Result<u64, NetError> with Ok(0)
stackslib/src/net/api/getpoxinfo.rs:376:9: replace <impl HttpRequest for RPCPoxInfoRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getstackerdbchunk.rs:70:9: replace <impl HttpRequest for RPCGetStackerDBChunkRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/gettransaction_unconfirmed.rs:71:9: replace <impl HttpRequest for RPCGetTransactionUnconfirmedRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getstackerdbchunk.rs:247:9: replace StacksHttpResponse::decode_stackerdb_chunk -> Result<Vec<u8>, NetError> with Ok(vec![])
stackslib/src/net/api/getstackerdbchunk.rs:247:9: replace StacksHttpResponse::decode_stackerdb_chunk -> Result<Vec<u8>, NetError> with Ok(vec![0])
stackslib/src/net/api/postblock.rs:91:9: replace <impl HttpRequest for RPCPostBlockRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/getstackerdbmetadata.rs:65:9: replace <impl HttpRequest for RPCGetStackerDBMetadataRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/postfeerate.rs:107:9: replace <impl HttpRequest for RPCPostFeeRateRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/getstxtransfercost.rs:55:9: replace <impl HttpRequest for RPCGetStxTransferCostRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/postmempoolquery.rs:63:9: replace RPCMempoolQueryRequestHandler::get_page_id_query -> Option<Txid> with None
stackslib/src/net/api/gettransaction_unconfirmed.rs:71:9: replace <impl HttpRequest for RPCGetTransactionUnconfirmedRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/gettransaction_unconfirmed.rs:104:9: replace <impl RPCRequestHandler for RPCGetTransactionUnconfirmedRequestHandler>::restart with ()
stackslib/src/net/api/postblock.rs:91:9: replace <impl HttpRequest for RPCPostBlockRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/postblock.rs:138:9: replace <impl RPCRequestHandler for RPCPostBlockRequestHandler>::restart with ()
stackslib/src/net/api/postmempoolquery.rs:135:9: replace <impl HttpChunkGenerator for StacksMemPoolStream>::generate_next_chunk -> Result<Vec<u8>, String> with Ok(vec![0])
stackslib/src/net/api/postfeerate.rs:107:9: replace <impl HttpRequest for RPCPostFeeRateRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/postfeerate.rs:163:9: replace <impl RPCRequestHandler for RPCPostFeeRateRequestHandler>::restart with ()
stackslib/src/net/api/postmempoolquery.rs:218:9: replace <impl HttpRequest for RPCMempoolQueryRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/postmempoolquery.rs:218:9: replace <impl HttpRequest for RPCMempoolQueryRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/postmempoolquery.rs:135:9: replace <impl HttpChunkGenerator for StacksMemPoolStream>::generate_next_chunk -> Result<Vec<u8>, String> with Ok(vec![])
stackslib/src/net/api/postmicroblock.rs:81:9: replace <impl HttpRequest for RPCPostMicroblockRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/postmempoolquery.rs:254:9: replace <impl RPCRequestHandler for RPCMempoolQueryRequestHandler>::restart with ()
stackslib/src/net/api/postmicroblock.rs:127:9: replace <impl RPCRequestHandler for RPCPostMicroblockRequestHandler>::restart with ()
stackslib/src/net/api/postmempoolquery.rs:355:9: replace StacksHttpResponse::decode_mempool_txs_page -> Result<(Vec<StacksTransaction>, Option<Txid>), NetError> with Ok((vec![], None))
stackslib/src/net/api/postmicroblock.rs:81:9: replace <impl HttpRequest for RPCPostMicroblockRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/poststackerdbchunk.rs:73:9: replace <impl HttpRequest for RPCPostStackerDBChunkRequestHandler>::verb -> &'static str with ""
stackslib/src/net/api/poststackerdbchunk.rs:73:9: replace <impl HttpRequest for RPCPostStackerDBChunkRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/posttransaction.rs:116:9: replace <impl HttpRequest for RPCPostTransactionRequestHandler>::verb -> &'static str with "xyzzy"
stackslib/src/net/api/posttransaction.rs:177:9: replace <impl RPCRequestHandler for RPCPostTransactionRequestHandler>::restart with ()
stackslib/src/net/atlas/db.rs:164:9: replace <impl FromRow for (u32, u32)>::from_row -> Result<(u32, u32), db_error> with Ok((0, 1))
stackslib/src/net/atlas/db.rs:210:9: replace AtlasDB::get_schema_version -> Result<String, db_error> with Ok(String::new())
stackslib/src/net/api/poststackerdbchunk.rs:148:9: replace <impl RPCRequestHandler for RPCPostStackerDBChunkRequestHandler>::restart with ()
stackslib/src/net/atlas/db.rs:210:9: replace AtlasDB::get_schema_version -> Result<String, db_error> with Ok("xyzzy".into())
stackslib/src/net/atlas/db.rs:219:9: replace AtlasDB::instantiate -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:164:9: replace <impl FromRow for (u32, u32)>::from_row -> Result<(u32, u32), db_error> with Ok((0, 0))
stackslib/src/net/api/posttransaction.rs:116:9: replace <impl HttpRequest for RPCPostTransactionRequestHandler>::verb -> &'static str with ""
stackslib/src/net/atlas/db.rs:164:9: replace <impl FromRow for (u32, u32)>::from_row -> Result<(u32, u32), db_error> with Ok((1, 0))
stackslib/src/net/atlas/db.rs:261:9: replace AtlasDB::should_keep_attachment -> bool with true
stackslib/src/net/atlas/db.rs:164:9: replace <impl FromRow for (u32, u32)>::from_row -> Result<(u32, u32), db_error> with Ok((1, 1))
stackslib/src/net/atlas/db.rs:463:9: replace AtlasDB::get_minmax_heights_window_for_page_index -> Result<(u64, u64), db_error> with Ok((0, 1))
stackslib/src/net/atlas/db.rs:463:9: replace AtlasDB::get_minmax_heights_window_for_page_index -> Result<(u64, u64), db_error> with Ok((1, 0))
stackslib/src/net/atlas/db.rs:485:9: replace AtlasDB::get_attachments_available_at_page_index -> Result<Vec<u8>, db_error> with Ok(vec![0])
stackslib/src/net/atlas/db.rs:346:9: replace AtlasDB::apply_schema_2 -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:463:9: replace AtlasDB::get_minmax_heights_window_for_page_index -> Result<(u64, u64), db_error> with Ok((1, 1))
stackslib/src/net/atlas/db.rs:261:9: replace AtlasDB::should_keep_attachment -> bool with false
stackslib/src/net/atlas/db.rs:359:9: replace AtlasDB::check_schema_version_and_update -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:463:9: replace AtlasDB::get_minmax_heights_window_for_page_index -> Result<(u64, u64), db_error> with Ok((0, 0))
stackslib/src/net/atlas/db.rs:485:9: replace AtlasDB::get_attachments_available_at_page_index -> Result<Vec<u8>, db_error> with Ok(vec![])
stackslib/src/net/atlas/db.rs:485:9: replace AtlasDB::get_attachments_available_at_page_index -> Result<Vec<u8>, db_error> with Ok(vec![1])
stackslib/src/net/atlas/db.rs:499:9: replace AtlasDB::get_attachments_missing_at_page_index -> Result<Vec<bool>, db_error> with Ok(vec![])
stackslib/src/net/atlas/db.rs:499:9: replace AtlasDB::get_attachments_missing_at_page_index -> Result<Vec<bool>, db_error> with Ok(vec![true])
stackslib/src/net/atlas/db.rs:586:9: replace AtlasDB::insert_instantiated_attachment -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:569:9: replace AtlasDB::count_uninstantiated_attachments -> Result<u32, db_error> with Ok(0)
stackslib/src/net/atlas/db.rs:569:9: replace AtlasDB::count_uninstantiated_attachments -> Result<u32, db_error> with Ok(1)
stackslib/src/net/atlas/db.rs:545:9: replace AtlasDB::evict_k_oldest_uninstantiated_attachments -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:499:9: replace AtlasDB::get_attachments_missing_at_page_index -> Result<Vec<bool>, db_error> with Ok(vec![false])
stackslib/src/net/atlas/db.rs:604:9: replace AtlasDB::find_uninstantiated_attachment -> Result<Option<Attachment>, db_error> with Ok(None)
stackslib/src/net/atlas/db.rs:665:9: replace AtlasDB::queue_attachment_instance -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:682:9: replace AtlasDB::queued_attachments -> Result<Vec<AttachmentInstance>, db_error> with Ok(vec![])
stackslib/src/net/atlas/db.rs:522:9: replace AtlasDB::insert_uninstantiated_attachment -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:716:9: replace AtlasDB::insert_attachment_instance -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:556:9: replace AtlasDB::evict_expired_uninstantiated_attachments -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:576:9: replace AtlasDB::count_unresolved_attachment_instances -> Result<u32, db_error> with Ok(0)
stackslib/src/net/atlas/db.rs:576:9: replace AtlasDB::count_unresolved_attachment_instances -> Result<u32, db_error> with Ok(1)
stackslib/src/net/atlas/db.rs:613:9: replace AtlasDB::evict_expired_unresolved_attachment_instances -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:640:9: replace AtlasDB::find_all_attachment_instances -> Result<Vec<AttachmentInstance>, db_error> with Ok(vec![])
stackslib/src/net/atlas/db.rs:648:9: replace AtlasDB::find_attachment -> Result<Option<Attachment>, db_error> with Ok(None)
stackslib/src/net/atlas/db.rs:677:9: replace AtlasDB::insert_initial_attachment_instance -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/db.rs:695:9: replace AtlasDB::mark_attachment_instance_checked -> Result<(), db_error> with Ok(())
stackslib/src/net/atlas/download.rs:241:9: replace AttachmentsDownloader::check_attachment_instances -> Result<Vec<(AttachmentInstance, Attachment)>, DBError> with Ok(vec![])
stackslib/src/net/atlas/download.rs:68:9: replace AttachmentsDownloader::has_ready_batches -> bool with false
stackslib/src/net/atlas/download.rs:101:9: replace AttachmentsDownloader::run -> Result<(Vec<(AttachmentInstance, Attachment)>, Vec<usize>), net_error> with Ok((vec![], vec![]))
stackslib/src/net/atlas/download.rs:382:9: replace AttachmentsBatchStateContext::get_prioritized_attachments_inventory_requests -> BinaryHeap<AttachmentsInventoryRequest> with BinaryHeap::new()
stackslib/src/net/atlas/download.rs:302:9: replace AttachmentsDownloader::check_queued_attachment_instances -> Result<Vec<(AttachmentInstance, Attachment)>, DBError> with Ok(vec![])
stackslib/src/net/atlas/download.rs:1141:9: replace <impl Display for AttachmentRequest>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/net/atlas/download.rs:408:9: replace AttachmentsBatchStateContext::get_prioritized_attachments_requests -> BinaryHeap<AttachmentRequest> with BinaryHeap::new()
stackslib/src/net/atlas/download.rs:1042:9: replace <impl PartialOrd for AttachmentsInventoryRequest>::partial_cmp -> Option<Ordering> with None
stackslib/src/net/atlas/download.rs:1201:9: replace AttachmentsBatch::bump_retry_count with ()
stackslib/src/net/atlas/download.rs:1118:9: replace <impl PartialOrd for AttachmentRequest>::partial_cmp -> Option<Ordering> with None
stackslib/src/net/atlas/download.rs:1221:9: replace AttachmentsBatch::get_missing_pages_for_contract_id -> Vec<u32> with vec![]
stackslib/src/net/atlas/download.rs:1235:9: replace AttachmentsBatch::get_paginated_missing_pages_for_contract_id -> Vec<Vec<u32>> with vec![]
stackslib/src/net/atlas/download.rs:1221:9: replace AttachmentsBatch::get_missing_pages_for_contract_id -> Vec<u32> with vec![1]
stackslib/src/net/atlas/download.rs:1169:9: replace AttachmentsBatch::track_attachment with ()
stackslib/src/net/atlas/download.rs:1235:9: replace AttachmentsBatch::get_paginated_missing_pages_for_contract_id -> Vec<Vec<u32>> with vec![vec![0]]
stackslib/src/net/atlas/download.rs:1235:9: replace AttachmentsBatch::get_paginated_missing_pages_for_contract_id -> Vec<Vec<u32>> with vec![vec![1]]
stackslib/src/net/atlas/download.rs:1214:9: replace AttachmentsBatch::has_fully_succeed -> bool with true
stackslib/src/net/atlas/download.rs:1292:9: replace ReliabilityReport::bump_successful_requests with ()
stackslib/src/net/atlas/download.rs:1259:9: replace AttachmentsBatch::attachments_instances_count -> usize with 0
stackslib/src/net/atlas/download.rs:1280:9: replace <impl PartialOrd for AttachmentsBatch>::partial_cmp -> Option<Ordering> with None
stackslib/src/net/atlas/download.rs:1214:9: replace AttachmentsBatch::has_fully_succeed -> bool with false
stackslib/src/net/atlas/download.rs:1317:9: replace ReliabilityReport::score -> u32 with 1
stackslib/src/net/atlas/download.rs:1335:9: replace <impl PartialOrd for ReliabilityReport>::partial_cmp -> Option<Ordering> with None
stackslib/src/net/http/common.rs:49:9: replace HttpReservedHeader::is_reserved -> bool with false
stackslib/src/net/atlas/download.rs:1221:9: replace AttachmentsBatch::get_missing_pages_for_contract_id -> Vec<u32> with vec![0]
stackslib/src/net/atlas/download.rs:1235:9: replace AttachmentsBatch::get_paginated_missing_pages_for_contract_id -> Vec<Vec<u32>> with vec![vec![]]
stackslib/src/net/atlas/download.rs:1245:9: replace AttachmentsBatch::resolve_attachment with ()
stackslib/src/net/atlas/download.rs:1259:9: replace AttachmentsBatch::attachments_instances_count -> usize with 1
stackslib/src/net/http/common.rs:127:5: replace parse_raw_bytes -> Result<Vec<u8>, Error> with Ok(vec![])
stackslib/src/net/http/common.rs:148:5: replace parse_bytes -> Result<Vec<u8>, Error> with Ok(vec![1])
stackslib/src/net/http/common.rs:49:9: replace HttpReservedHeader::is_reserved -> bool with true
stackslib/src/net/atlas/download.rs:1317:9: replace ReliabilityReport::score -> u32 with 0
stackslib/src/net/http/common.rs:127:5: replace parse_raw_bytes -> Result<Vec<u8>, Error> with Ok(vec![0])
stackslib/src/net/http/common.rs:57:9: replace HttpReservedHeader::try_from_str -> Option<HttpReservedHeader> with None
stackslib/src/net/http/common.rs:127:5: replace parse_raw_bytes -> Result<Vec<u8>, Error> with Ok(vec![1])
stackslib/src/net/http/error.rs:200:9: replace <impl HttpErrorResponse for HttpUnauthorized>::code -> u16 with 0
stackslib/src/net/http/error.rs:227:9: replace <impl HttpErrorResponse for HttpPaymentRequired>::code -> u16 with 0
stackslib/src/net/http/common.rs:148:5: replace parse_bytes -> Result<Vec<u8>, Error> with Ok(vec![])
stackslib/src/net/http/common.rs:148:5: replace parse_bytes -> Result<Vec<u8>, Error> with Ok(vec![0])
stackslib/src/net/http/error.rs:164:9: replace <impl HttpErrorResponse for HttpBadRequest>::code -> u16 with 0
stackslib/src/net/http/error.rs:281:9: replace <impl HttpErrorResponse for HttpNotFound>::code -> u16 with 1
stackslib/src/net/http/error.rs:68:5: replace http_reason -> &'static str with "xyzzy"
stackslib/src/net/http/error.rs:164:9: replace <impl HttpErrorResponse for HttpBadRequest>::code -> u16 with 1
stackslib/src/net/http/error.rs:68:5: replace http_reason -> &'static str with ""
stackslib/src/net/http/error.rs:335:9: replace <impl HttpErrorResponse for HttpServiceUnavailable>::code -> u16 with 0
stackslib/src/net/http/error.rs:281:9: replace <impl HttpErrorResponse for HttpNotFound>::code -> u16 with 0
stackslib/src/net/http/error.rs:200:9: replace <impl HttpErrorResponse for HttpUnauthorized>::code -> u16 with 1
stackslib/src/net/http/request.rs:144:9: replace HttpRequestPreamble::add_header with ()
stackslib/src/net/http/request.rs:174:9: replace HttpRequestPreamble::remove_header -> bool with true
stackslib/src/net/http/error.rs:227:9: replace <impl HttpErrorResponse for HttpPaymentRequired>::code -> u16 with 1
stackslib/src/net/http/error.rs:254:9: replace <impl HttpErrorResponse for HttpForbidden>::code -> u16 with 0
stackslib/src/net/http/request.rs:174:9: replace HttpRequestPreamble::remove_header -> bool with false
stackslib/src/net/http/request.rs:185:9: replace HttpRequestPreamble::get_header -> Option<String> with Some("xyzzy".into())
stackslib/src/net/http/error.rs:254:9: replace <impl HttpErrorResponse for HttpForbidden>::code -> u16 with 1
stackslib/src/net/http/request.rs:185:9: replace HttpRequestPreamble::get_header -> Option<String> with None
stackslib/src/net/http/error.rs:308:9: replace <impl HttpErrorResponse for HttpServerError>::code -> u16 with 0
stackslib/src/net/http/error.rs:308:9: replace <impl HttpErrorResponse for HttpServerError>::code -> u16 with 1
stackslib/src/net/http/request.rs:206:9: replace HttpRequestPreamble::get_content_length -> u32 with 1
stackslib/src/net/http/error.rs:335:9: replace <impl HttpErrorResponse for HttpServiceUnavailable>::code -> u16 with 1
stackslib/src/net/http/error.rs:363:9: replace <impl HttpErrorResponse for HttpError>::code -> u16 with 0
stackslib/src/net/http/error.rs:363:9: replace <impl HttpErrorResponse for HttpError>::code -> u16 with 1
stackslib/src/net/http/request.rs:206:9: replace HttpRequestPreamble::get_content_length -> u32 with 0
stackslib/src/net/http/request.rs:211:9: replace HttpRequestPreamble::set_content_length with ()
stackslib/src/net/http/request.rs:216:9: replace HttpRequestPreamble::set_content_type with ()
stackslib/src/net/http/request.rs:185:9: replace HttpRequestPreamble::get_header -> Option<String> with Some(String::new())
stackslib/src/net/http/request.rs:221:9: replace HttpRequestPreamble::send -> Result<(), Error> with Ok(())
stackslib/src/net/http/request.rs:229:5: replace read_to_crlf2 -> Result<Vec<u8>, CodecError> with Ok(vec![])
stackslib/src/net/http/request.rs:539:9: replace HttpRequestContents::parse_qs -> HashMap<String, String> with HashMap::new()
stackslib/src/net/http/request.rs:229:5: replace read_to_crlf2 -> Result<Vec<u8>, CodecError> with Ok(vec![0])
stackslib/src/net/http/request.rs:229:5: replace read_to_crlf2 -> Result<Vec<u8>, CodecError> with Ok(vec![1])
stackslib/src/net/http/request.rs:250:9: replace <impl StacksMessageCodec for HttpRequestPreamble>::consensus_serialize -> Result<(), CodecError> with Ok(())
stackslib/src/net/http/request.rs:477:9: replace HttpRequestPayload::content_type -> Option<HttpContentType> with None
stackslib/src/net/http/request.rs:611:9: replace HttpRequestContents::get_path_arg -> Option<&String> with None
stackslib/src/net/http/request.rs:489:9: replace HttpRequestPayload::content_length -> Result<u32, Error> with Ok(0)
stackslib/src/net/http/request.rs:489:9: replace HttpRequestPayload::content_length -> Result<u32, Error> with Ok(1)
stackslib/src/net/http/request.rs:616:9: replace HttpRequestContents::get_query_arg -> Option<&String> with None
stackslib/src/net/http/request.rs:621:9: replace HttpRequestContents::get_parsed_data -> Option<&serde_json::Value> with None
stackslib/src/net/http/request.rs:539:9: replace HttpRequestContents::parse_qs -> HashMap<String, String> with HashMap::from_iter([("xyzzy".into(), "xyzzy".into())])
stackslib/src/net/http/request.rs:631:9: replace HttpRequestContents::take_query_arg -> Option<String> with Some("xyzzy".into())
stackslib/src/net/http/request.rs:631:9: replace HttpRequestContents::take_query_arg -> Option<String> with Some(String::new())
stackslib/src/net/http/request.rs:502:9: replace HttpRequestPayload::send -> Result<(), Error> with Ok(())
stackslib/src/net/http/request.rs:641:9: replace HttpRequestContents::content_length -> Result<u32, Error> with Ok(0)
stackslib/src/net/http/request.rs:539:9: replace HttpRequestContents::parse_qs -> HashMap<String, String> with HashMap::from_iter([(String::new(), String::new())])
stackslib/src/net/http/request.rs:539:9: replace HttpRequestContents::parse_qs -> HashMap<String, String> with HashMap::from_iter([(String::new(), "xyzzy".into())])
stackslib/src/net/http/request.rs:539:9: replace HttpRequestContents::parse_qs -> HashMap<String, String> with HashMap::from_iter([("xyzzy".into(), String::new())])
stackslib/src/net/http/request.rs:626:9: replace HttpRequestContents::take_parsed_data -> Option<serde_json::Value> with Some(Default::default())
stackslib/src/net/http/request.rs:631:9: replace HttpRequestContents::take_query_arg -> Option<String> with None
stackslib/src/net/http/response.rs:108:9: replace HttpResponseContents::content_length -> Option<u32> with Some(1)
stackslib/src/net/http/request.rs:636:9: replace HttpRequestContents::content_type -> Option<HttpContentType> with None
stackslib/src/net/http/request.rs:641:9: replace HttpRequestContents::content_length -> Result<u32, Error> with Ok(1)
stackslib/src/net/http/response.rs:272:9: replace HttpResponsePreamble::add_header -> () with ()
stackslib/src/net/http/request.rs:656:9: replace HttpRequestContents::get_full_query_string -> String with String::new()
stackslib/src/net/http/request.rs:656:9: replace HttpRequestContents::get_full_query_string -> String with "xyzzy".into()
stackslib/src/net/http/response.rs:108:9: replace HttpResponseContents::content_length -> Option<u32> with Some(0)
stackslib/src/net/http/response.rs:108:9: replace HttpResponseContents::content_length -> Option<u32> with None
stackslib/src/net/http/response.rs:313:9: replace HttpResponsePreamble::get_header -> Option<String> with Some(String::new())
stackslib/src/net/http/response.rs:118:9: replace HttpResponseContents::pipe_out -> Result<u64, Error> with Ok(0)
stackslib/src/net/http/response.rs:313:9: replace HttpResponsePreamble::get_header -> Option<String> with None
stackslib/src/net/http/response.rs:313:9: replace HttpResponsePreamble::get_header -> Option<String> with Some("xyzzy".into())
stackslib/src/net/http/response.rs:348:5: replace read_to_crlf2 -> Result<Vec<u8>, CodecError> with Ok(vec![])
stackslib/src/net/http/response.rs:348:5: replace read_to_crlf2 -> Result<Vec<u8>, CodecError> with Ok(vec![0])
stackslib/src/net/http/response.rs:334:9: replace HttpResponsePreamble::is_chunked -> bool with true
stackslib/src/net/http/response.rs:334:9: replace HttpResponsePreamble::is_chunked -> bool with false
stackslib/src/net/http/response.rs:348:5: replace read_to_crlf2 -> Result<Vec<u8>, CodecError> with Ok(vec![1])
stackslib/src/net/http/response.rs:368:9: replace <impl StacksMessageCodec for HttpResponsePreamble>::consensus_serialize -> Result<(), CodecError> with Ok(())
stackslib/src/net/http/response.rs:699:9: replace <impl TryInto for HttpResponsePayload>::try_into -> Result<Vec<u8>, Error> with Ok(vec![])
stackslib/src/net/http/response.rs:711:9: replace <impl TryInto for HttpResponsePayload>::try_into -> Result<String, Error> with Ok(String::new())
stackslib/src/net/http/response.rs:656:9: replace HttpResponsePayload::send -> Result<(), Error> with Ok(())
stackslib/src/net/http/stream.rs:48:9: replace HttpChunkGenerator::stream_to -> Result<u64, io::Error> with Ok(0)
stackslib/src/net/http/response.rs:699:9: replace <impl TryInto for HttpResponsePayload>::try_into -> Result<Vec<u8>, Error> with Ok(vec![1])
stackslib/src/net/http/response.rs:671:9: replace HttpResponsePayload::send_chunked -> Result<(), Error> with Ok(())
stackslib/src/net/http/response.rs:699:9: replace <impl TryInto for HttpResponsePayload>::try_into -> Result<Vec<u8>, Error> with Ok(vec![0])
stackslib/src/net/neighbors/comms.rs:332:9: replace NeighborComms::neighbor_send -> Result<(), net_error> with Ok(())
stackslib/src/net/neighbors/comms.rs:292:9: replace NeighborComms::neighbor_session_begin -> Result<bool, net_error> with Ok(false)
stackslib/src/net/http/response.rs:723:9: replace <impl TryInto for HttpResponsePayload>::try_into -> Result<serde_json::Value, Error> with Ok(Default::default())
stackslib/src/net/neighbors/comms.rs:140:9: replace NeighborComms::neighbor_connect_and_handshake -> Result<Option<ReplyHandleP2P>, net_error> with Ok(None)
stackslib/src/net/neighbors/comms.rs:407:9: replace NeighborComms::reset with ()
stackslib/src/net/neighbors/comms.rs:232:9: replace NeighborComms::neighbor_session_begin_only -> Result<Option<ReplyHandleP2P>, net_error> with Ok(None)
stackslib/src/net/neighbors/comms.rs:454:9: replace <impl NeighborComms for PeerNetworkComms>::get_connecting -> Option<usize> with Some(0)
stackslib/src/net/neighbors/comms.rs:292:9: replace NeighborComms::neighbor_session_begin -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/comms.rs:454:9: replace <impl NeighborComms for PeerNetworkComms>::get_connecting -> Option<usize> with Some(1)
stackslib/src/net/neighbors/comms.rs:382:9: replace NeighborComms::poll_next_reply -> Result<Option<StacksMessage>, net_error> with Ok(None)
stackslib/src/net/neighbors/comms.rs:400:9: replace NeighborComms::has_neighbor_session -> bool with true
stackslib/src/net/neighbors/comms.rs:400:9: replace NeighborComms::has_neighbor_session -> bool with false
stackslib/src/net/neighbors/comms.rs:487:9: replace <impl NeighborComms for PeerNetworkComms>::clear_pinned_connections -> HashSet<usize> with HashSet::from_iter([0])
stackslib/src/net/neighbors/comms.rs:492:9: replace <impl NeighborComms for PeerNetworkComms>::is_pinned -> bool with false
stackslib/src/net/neighbors/comms.rs:448:9: replace <impl NeighborComms for PeerNetworkComms>::add_connecting with ()
stackslib/src/net/neighbors/comms.rs:506:9: replace <impl NeighborComms for PeerNetworkComms>::count_inflight -> usize with 0
stackslib/src/net/neighbors/comms.rs:487:9: replace <impl NeighborComms for PeerNetworkComms>::clear_pinned_connections -> HashSet<usize> with HashSet::from_iter([1])
stackslib/src/net/neighbors/comms.rs:506:9: replace <impl NeighborComms for PeerNetworkComms>::count_inflight -> usize with 1
stackslib/src/net/neighbors/comms.rs:545:9: replace <impl NeighborComms for PeerNetworkComms>::take_dead_neighbors -> HashSet<NeighborKey> with HashSet::new()
stackslib/src/net/neighbors/comms.rs:513:9: replace <impl NeighborComms for PeerNetworkComms>::has_inflight -> bool with true
stackslib/src/net/neighbors/comms.rs:664:9: replace NeighborCommsRequest::is_message_stale -> bool with true
stackslib/src/net/neighbors/comms.rs:523:9: replace <impl NeighborComms for PeerNetworkComms>::collect_replies -> Vec<(NeighborAddress, StacksMessage)> with vec![]
stackslib/src/net/neighbors/comms.rs:513:9: replace <impl NeighborComms for PeerNetworkComms>::has_inflight -> bool with false
stackslib/src/net/neighbors/comms.rs:541:9: replace <impl NeighborComms for PeerNetworkComms>::cancel_inflight with ()
stackslib/src/net/neighbors/db.rs:53:9: replace NeighborReplacements::add_neighbor with ()
stackslib/src/net/neighbors/db.rs:58:9: replace NeighborReplacements::get_slot -> Option<u32> with None
stackslib/src/net/neighbors/db.rs:58:9: replace NeighborReplacements::get_slot -> Option<u32> with Some(1)
stackslib/src/net/neighbors/db.rs:62:9: replace NeighborReplacements::get_neighbor -> Option<&Neighbor> with None
stackslib/src/net/neighbors/comms.rs:550:9: replace <impl NeighborComms for PeerNetworkComms>::take_broken_neighbors -> HashSet<NeighborKey> with HashSet::new()
stackslib/src/net/neighbors/db.rs:70:9: replace NeighborReplacements::clear with ()
stackslib/src/net/neighbors/comms.rs:602:9: replace <impl Iterator for NeighborCommsMessageIterator<'_, NS>>::next -> Option<Self::Item> with None
stackslib/src/net/neighbors/db.rs:75:9: replace NeighborReplacements::has_neighbor -> bool with false
stackslib/src/net/neighbors/db.rs:79:9: replace NeighborReplacements::remove with ()
stackslib/src/net/neighbors/db.rs:229:9: replace PeerDBNeighborWalk::find_replaced_neighbor_slot -> Result<Option<u32>, net_error> with Ok(Some(0))
stackslib/src/net/neighbors/db.rs:229:9: replace PeerDBNeighborWalk::find_replaced_neighbor_slot -> Result<Option<u32>, net_error> with Ok(None)
stackslib/src/net/neighbors/comms.rs:658:9: replace NeighborCommsRequest::add with ()
stackslib/src/net/neighbors/db.rs:249:9: replace <impl NeighborWalkDB for PeerDBNeighborWalk>::get_fresh_random_neighbors -> Result<Vec<Neighbor>, net_error> with Ok(vec![])
stackslib/src/net/neighbors/comms.rs:682:9: replace NeighborCommsRequest::count_inflight -> usize with 1
stackslib/src/net/neighbors/db.rs:58:9: replace NeighborReplacements::get_slot -> Option<u32> with Some(0)
stackslib/src/net/neighbors/db.rs:66:9: replace NeighborReplacements::iter_slots -> impl Iterator<Item =(&NeighborAddress, &u32)> with ::std::iter::empty()
stackslib/src/net/neighbors/db.rs:523:9: replace <impl NeighborWalkDB for PeerDBNeighborWalk>::get_asn_count -> u64 with 0
stackslib/src/net/neighbors/db.rs:523:9: replace <impl NeighborWalkDB for PeerDBNeighborWalk>::get_asn_count -> u64 with 1
stackslib/src/net/neighbors/neighbor.rs:74:9: replace Neighbor::save -> Result<bool, net_error> with Ok(false)
stackslib/src/net/neighbors/neighbor.rs:74:9: replace Neighbor::save -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/neighbor.rs:88:9: replace Neighbor::load_by_address -> Result<Option<Neighbor>, net_error> with Ok(None)
stackslib/src/net/neighbors/db.rs:75:9: replace NeighborReplacements::has_neighbor -> bool with true
stackslib/src/net/neighbors/neighbor.rs:57:9: replace Neighbor::save_update -> Result<(), net_error> with Ok(())
stackslib/src/net/neighbors/db.rs:229:9: replace PeerDBNeighborWalk::find_replaced_neighbor_slot -> Result<Option<u32>, net_error> with Ok(Some(1))
stackslib/src/net/neighbors/db.rs:434:9: replace <impl NeighborWalkDB for PeerDBNeighborWalk>::replace_neighbors -> Result<(), net_error> with Ok(())
stackslib/src/net/neighbors/walk.rs:535:9: replace NeighborWalk<DB, NC>::set_state -> Result<(), net_error> with Ok(())
stackslib/src/net/neighbors/walk.rs:90:9: replace NeighborWalkResult::add_dead -> () with ()
stackslib/src/net/neighbors/walk.rs:579:9: replace NeighborWalk<DB, NC>::handshake_begin -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:94:9: replace NeighborWalkResult::add_replaced -> () with ()
stackslib/src/net/neighbors/walk.rs:579:9: replace NeighborWalk<DB, NC>::handshake_begin -> Result<bool, net_error> with Ok(false)
stackslib/src/net/neighbors/walk.rs:814:9: replace NeighborWalk<DB, NC>::getneighbors_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:814:9: replace NeighborWalk<DB, NC>::getneighbors_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/neighbors/walk.rs:1220:9: replace NeighborWalk<DB, NC>::getneighbors_neighbors_begin -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:1051:9: replace NeighborWalk<DB, NC>::handle_neighbor_handshake_accept -> Result<(), net_error> with Ok(())
stackslib/src/net/neighbors/walk.rs:1084:9: replace NeighborWalk<DB, NC>::neighbor_handshakes_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:720:9: replace NeighborWalk<DB, NC>::handshake_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:1268:9: replace NeighborWalk<DB, NC>::getneighbors_neighbors_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:783:9: replace NeighborWalk<DB, NC>::getneighbors_begin -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:1361:9: replace NeighborWalk<DB, NC>::pick_random_neighbor -> Option<Neighbor> with None
stackslib/src/net/neighbors/walk.rs:720:9: replace NeighborWalk<DB, NC>::handshake_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/neighbors/walk.rs:930:9: replace NeighborWalk<DB, NC>::neighbor_handshakes_begin -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:783:9: replace NeighborWalk<DB, NC>::getneighbors_begin -> Result<bool, net_error> with Ok(false)
stackslib/src/net/neighbors/walk.rs:1220:9: replace NeighborWalk<DB, NC>::getneighbors_neighbors_begin -> Result<bool, net_error> with Ok(false)
stackslib/src/net/neighbors/walk.rs:930:9: replace NeighborWalk<DB, NC>::neighbor_handshakes_begin -> Result<bool, net_error> with Ok(false)
stackslib/src/net/neighbors/walk.rs:1084:9: replace NeighborWalk<DB, NC>::neighbor_handshakes_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/neighbors/walk.rs:1268:9: replace NeighborWalk<DB, NC>::getneighbors_neighbors_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/neighbors/walk.rs:1419:9: replace NeighborWalk<DB, NC>::step with ()
stackslib/src/net/neighbors/walk.rs:1524:9: replace NeighborWalk<DB, NC>::pingback_handshakes_begin -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:1599:9: replace NeighborWalk<DB, NC>::check_handshake_pubkey_hash -> bool with true
stackslib/src/net/neighbors/walk.rs:1524:9: replace NeighborWalk<DB, NC>::pingback_handshakes_begin -> Result<bool, net_error> with Ok(false)
stackslib/src/net/stackerdb/config.rs:164:9: replace StackerDBConfig::eval_signer_slots -> Result<Vec<(StacksAddress, u32)>, net_error> with Ok(vec![])
stackslib/src/net/neighbors/walk.rs:1617:9: replace NeighborWalk<DB, NC>::pingback_handshakes_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:1755:9: replace NeighborWalk<DB, NC>::ping_existing_neighbors_try_finish -> Result<Option<NeighborWalkResult>, net_error> with Ok(None)
stackslib/src/net/neighbors/walk.rs:1680:9: replace NeighborWalk<DB, NC>::ping_existing_neighbors_begin -> Result<bool, net_error> with Ok(true)
stackslib/src/net/neighbors/walk.rs:1617:9: replace NeighborWalk<DB, NC>::pingback_handshakes_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/stackerdb/db.rs:185:5: replace inner_get_slot_validation -> Result<Option<SlotValidation>, net_error> with Ok(None)
stackslib/src/net/neighbors/walk.rs:1680:9: replace NeighborWalk<DB, NC>::ping_existing_neighbors_begin -> Result<bool, net_error> with Ok(false)
stackslib/src/net/stackerdb/db.rs:171:5: replace inner_get_slot_metadata -> Result<Option<SlotMetadata>, net_error> with Ok(None)
stackslib/src/net/stackerdb/db.rs:158:5: replace inner_get_stackerdb_id -> Result<i64, net_error> with Ok(0)
stackslib/src/net/neighbors/walk.rs:1854:9: replace NeighborWalk<DB, NC>::run -> Result<Option<NeighborWalkResult>, net_error> with Ok(None)
stackslib/src/net/stackerdb/db.rs:158:5: replace inner_get_stackerdb_id -> Result<i64, net_error> with Ok(1)
stackslib/src/net/stackerdb/config.rs:124:9: replace StackerDBConfig::is_contract_valid -> Result<(), String> with Ok(())
stackslib/src/net/stackerdb/db.rs:158:5: replace inner_get_stackerdb_id -> Result<i64, net_error> with Ok(-1)
stackslib/src/net/stackerdb/db.rs:194:9: replace StackerDBTx<'a>::commit -> Result<(), db_error> with Ok(())
stackslib/src/net/stackerdb/db.rs:303:9: replace StackerDBTx<'a>::reconfigure_stackerdb -> Result<(), net_error> with Ok(())
stackslib/src/net/stackerdb/db.rs:227:9: replace StackerDBTx<'a>::get_stackerdb_id -> Result<i64, net_error> with Ok(0)
stackslib/src/net/stackerdb/db.rs:207:9: replace StackerDBTx<'a>::delete_stackerdb -> Result<(), net_error> with Ok(())
stackslib/src/net/stackerdb/db.rs:227:9: replace StackerDBTx<'a>::get_stackerdb_id -> Result<i64, net_error> with Ok(1)
stackslib/src/net/stackerdb/db.rs:227:9: replace StackerDBTx<'a>::get_stackerdb_id -> Result<i64, net_error> with Ok(-1)
stackslib/src/net/stackerdb/db.rs:514:9: replace StackerDBs::get_stackerdb_id -> Result<i64, net_error> with Ok(0)
stackslib/src/net/stackerdb/db.rs:238:9: replace StackerDBTx<'a>::create_stackerdb -> Result<(), net_error> with Ok(())
stackslib/src/net/stackerdb/db.rs:360:9: replace StackerDBTx<'a>::get_slot_validation -> Result<Option<SlotValidation>, net_error> with Ok(None)
stackslib/src/net/stackerdb/db.rs:351:9: replace StackerDBTx<'a>::get_slot_metadata -> Result<Option<SlotMetadata>, net_error> with Ok(None)
stackslib/src/net/stackerdb/db.rs:372:9: replace StackerDBTx<'a>::insert_chunk -> Result<(), net_error> with Ok(())
stackslib/src/net/stackerdb/db.rs:286:9: replace StackerDBTx<'a>::clear_stackerdb_slots -> Result<(), net_error> with Ok(())
stackslib/src/net/stackerdb/db.rs:555:9: replace StackerDBs::get_db_slot_metadata -> Result<Vec<SlotMetadata>, net_error> with Ok(vec![])
stackslib/src/net/stackerdb/db.rs:514:9: replace StackerDBs::get_stackerdb_id -> Result<i64, net_error> with Ok(-1)
stackslib/src/net/stackerdb/db.rs:534:9: replace StackerDBs::get_slot_signer -> Result<Option<StacksAddress>, net_error> with Ok(None)
stackslib/src/net/stackerdb/db.rs:575:9: replace StackerDBs::get_slot_versions -> Result<Vec<u32>, net_error> with Ok(vec![0])
stackslib/src/net/stackerdb/db.rs:575:9: replace StackerDBs::get_slot_versions -> Result<Vec<u32>, net_error> with Ok(vec![])
stackslib/src/net/stackerdb/db.rs:398:9: replace StackerDBTx<'a>::try_replace_chunk -> Result<(), net_error> with Ok(())
stackslib/src/net/stackerdb/db.rs:601:9: replace StackerDBs::get_latest_chunk -> Result<Option<Vec<u8>>, net_error> with Ok(None)
stackslib/src/net/stackerdb/db.rs:514:9: replace StackerDBs::get_stackerdb_id -> Result<i64, net_error> with Ok(1)
stackslib/src/net/stackerdb/db.rs:586:9: replace StackerDBs::get_slot_write_timestamps -> Result<Vec<u64>, net_error> with Ok(vec![])
stackslib/src/net/stackerdb/db.rs:586:9: replace StackerDBs::get_slot_write_timestamps -> Result<Vec<u64>, net_error> with Ok(vec![0])
stackslib/src/net/stackerdb/db.rs:586:9: replace StackerDBs::get_slot_write_timestamps -> Result<Vec<u64>, net_error> with Ok(vec![1])
stackslib/src/net/stackerdb/db.rs:619:9: replace StackerDBs::get_chunk -> Result<Option<StackerDBChunkData>, net_error> with Ok(None)
stackslib/src/net/stackerdb/db.rs:521:9: replace StackerDBs::get_stackerdb_contract_ids -> Result<Vec<QualifiedContractIdentifier>, net_error> with Ok(vec![])
stackslib/src/net/stackerdb/db.rs:546:9: replace StackerDBs::get_slot_metadata -> Result<Option<SlotMetadata>, net_error> with Ok(None)
stackslib/src/net/stackerdb/sync.rs:184:9: replace StackerDBSync<NC>::make_chunk_request_schedule -> Result<Vec<(StackerDBGetChunkData, Vec<NeighborAddress>)>, net_error> with Ok(vec![])
stackslib/src/net/stackerdb/db.rs:567:9: replace StackerDBs::get_slot_validation -> Result<Option<SlotValidation>, net_error> with Ok(None)
stackslib/src/net/stackerdb/db.rs:601:9: replace StackerDBs::get_latest_chunk -> Result<Option<Vec<u8>>, net_error> with Ok(Some(vec![]))
stackslib/src/net/stackerdb/db.rs:575:9: replace StackerDBs::get_slot_versions -> Result<Vec<u32>, net_error> with Ok(vec![1])
stackslib/src/net/stackerdb/db.rs:601:9: replace StackerDBs::get_latest_chunk -> Result<Option<Vec<u8>>, net_error> with Ok(Some(vec![0]))
stackslib/src/net/stackerdb/db.rs:601:9: replace StackerDBs::get_latest_chunk -> Result<Option<Vec<u8>>, net_error> with Ok(Some(vec![1]))
stackslib/src/net/stackerdb/sync.rs:551:9: replace StackerDBSync<NC>::connect_begin -> Result<bool, net_error> with Ok(true)
stackslib/src/net/stackerdb/sync.rs:294:9: replace StackerDBSync<NC>::make_chunk_push_schedule -> Result<Vec<(StackerDBPushChunkData, Vec<NeighborAddress>)>, net_error> with Ok(vec![])
stackslib/src/net/stackerdb/sync.rs:387:9: replace StackerDBSync<NC>::validate_downloaded_chunk -> Result<bool, net_error> with Ok(true)
stackslib/src/net/stackerdb/sync.rs:486:9: replace StackerDBSync<NC>::send_getchunkinv_to_inbound_neighbors with ()
stackslib/src/net/stackerdb/sync.rs:387:9: replace StackerDBSync<NC>::validate_downloaded_chunk -> Result<bool, net_error> with Ok(false)
stackslib/src/net/stackerdb/sync.rs:862:9: replace StackerDBSync<NC>::getchunks_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/net/stackerdb/sync.rs:785:9: replace StackerDBSync<NC>::getchunks_begin -> bool with false
stackslib/src/net/stackerdb/sync.rs:437:9: replace StackerDBSync<NC>::add_pushed_chunk -> bool with false
stackslib/src/net/stackerdb/sync.rs:862:9: replace StackerDBSync<NC>::getchunks_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/stackerdb/sync.rs:785:9: replace StackerDBSync<NC>::getchunks_begin -> bool with true
stackslib/src/net/stackerdb/sync.rs:551:9: replace StackerDBSync<NC>::connect_begin -> Result<bool, net_error> with Ok(false)
stackslib/src/net/stackerdb/sync.rs:998:9: replace StackerDBSync<NC>::pushchunks_try_finish -> bool with true
stackslib/src/net/stackerdb/sync.rs:617:9: replace StackerDBSync<NC>::connect_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/net/stackerdb/sync.rs:699:9: replace StackerDBSync<NC>::getchunksinv_begin with ()
stackslib/src/chainstate/burn/distribution.rs:77:9: replace LinkedCommitIdentifier::spent_output -> u32 with 0
stackslib/src/chainstate/burn/distribution.rs:77:9: replace LinkedCommitIdentifier::spent_output -> u32 with 1
stackslib/src/chainstate/burn/distribution.rs:84:9: replace LinkedCommitIdentifier::burn_fee -> u64 with 0
stackslib/src/chainstate/burn/distribution.rs:84:9: replace LinkedCommitIdentifier::burn_fee -> u64 with 1
stackslib/src/chainstate/burn/distribution.rs:161:9: replace BurnSamplePoint::make_min_median_distribution -> Vec<BurnSamplePoint> with vec![]
stackslib/src/net/stackerdb/sync.rs:735:9: replace StackerDBSync<NC>::getchunksinv_try_finish -> Result<bool, net_error> with Ok(true)
stackslib/src/chainstate/burn/distribution.rs:342:9: replace BurnSamplePoint::make_sortition_ranges -> () with ()
stackslib/src/net/stackerdb/sync.rs:735:9: replace StackerDBSync<NC>::getchunksinv_try_finish -> Result<bool, net_error> with Ok(false)
stackslib/src/chainstate/burn/distribution.rs:391:9: replace BurnSamplePoint::get_total_burns -> Option<u64> with None
stackslib/src/chainstate/burn/distribution.rs:391:9: replace BurnSamplePoint::get_total_burns -> Option<u64> with Some(1)
stackslib/src/chainstate/burn/distribution.rs:391:9: replace BurnSamplePoint::get_total_burns -> Option<u64> with Some(0)
stackslib/src/net/stackerdb/sync.rs:908:9: replace StackerDBSync<NC>::pushchunks_begin -> Result<bool, net_error> with Ok(true)
stackslib/src/chainstate/burn/operations/mod.rs:91:9: replace <impl Display for Error>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/chainstate/burn/operations/mod.rs:311:5: replace memo_serialize -> String with String::new()
stackslib/src/chainstate/burn/operations/mod.rs:311:5: replace memo_serialize -> String with "xyzzy".into()
stackslib/src/chainstate/burn/operations/mod.rs:316:5: replace stacks_addr_serialize -> serde_json::Value with Default::default()
stackslib/src/chainstate/burn/operations/mod.rs:354:9: replace BlockstackOperationType::vtxindex -> u32 with 0
stackslib/src/chainstate/burn/operations/mod.rs:354:9: replace BlockstackOperationType::vtxindex -> u32 with 1
stackslib/src/chainstate/burn/operations/mod.rs:366:9: replace BlockstackOperationType::block_height -> u64 with 0
stackslib/src/chainstate/burn/operations/mod.rs:366:9: replace BlockstackOperationType::block_height -> u64 with 1
stackslib/src/net/stackerdb/sync.rs:998:9: replace StackerDBSync<NC>::pushchunks_try_finish -> bool with false
stackslib/src/chainstate/burn/operations/mod.rs:422:9: replace BlockstackOperationType::pre_stx_to_json -> serde_json::Value with Default::default()
stackslib/src/chainstate/burn/operations/mod.rs:434:9: replace BlockstackOperationType::stack_stx_to_json -> serde_json::Value with Default::default()
stackslib/src/chainstate/burn/operations/mod.rs:449:9: replace BlockstackOperationType::transfer_stx_to_json -> serde_json::Value with Default::default()
stackslib/src/chainstate/burn/operations/mod.rs:464:9: replace BlockstackOperationType::delegate_stx_to_json -> serde_json::Value with Default::default()
stackslib/src/net/stackerdb/sync.rs:908:9: replace StackerDBSync<NC>::pushchunks_begin -> Result<bool, net_error> with Ok(false)
stackslib/src/chainstate/burn/operations/mod.rs:515:5: replace parse_u128_from_be -> Option<u128> with None
stackslib/src/chainstate/burn/operations/mod.rs:515:5: replace parse_u128_from_be -> Option<u128> with Some(0)
stackslib/src/chainstate/burn/operations/mod.rs:515:5: replace parse_u128_from_be -> Option<u128> with Some(1)
stackslib/src/chainstate/burn/operations/mod.rs:519:5: replace parse_u64_from_be -> Option<u64> with None
stackslib/src/chainstate/burn/operations/mod.rs:519:5: replace parse_u64_from_be -> Option<u64> with Some(0)
stackslib/src/chainstate/burn/operations/mod.rs:519:5: replace parse_u64_from_be -> Option<u64> with Some(1)
stackslib/src/chainstate/burn/operations/mod.rs:523:5: replace parse_u32_from_be -> Option<u32> with None
stackslib/src/chainstate/burn/operations/mod.rs:523:5: replace parse_u32_from_be -> Option<u32> with Some(0)
stackslib/src/chainstate/burn/operations/mod.rs:523:5: replace parse_u32_from_be -> Option<u32> with Some(1)
stackslib/src/chainstate/burn/operations/mod.rs:527:5: replace parse_u16_from_be -> Option<u16> with None
stackslib/src/chainstate/burn/operations/mod.rs:527:5: replace parse_u16_from_be -> Option<u16> with Some(0)
stackslib/src/chainstate/burn/operations/mod.rs:527:5: replace parse_u16_from_be -> Option<u16> with Some(1)
stackslib/src/chainstate/burn/sortition.rs:113:9: replace BlockSnapshot::is_initial -> bool with false
stackslib/src/chainstate/burn/sortition.rs:113:9: replace BlockSnapshot::is_initial -> bool with true
stackslib/src/chainstate/burn/sortition.rs:127:9: replace BlockSnapshot::sample_burn_distribution -> Option<usize> with None
stackslib/src/chainstate/burn/sortition.rs:127:9: replace BlockSnapshot::sample_burn_distribution -> Option<usize> with Some(0)
stackslib/src/chainstate/burn/sortition.rs:127:9: replace BlockSnapshot::sample_burn_distribution -> Option<usize> with Some(1)
stackslib/src/chainstate/burn/sortition.rs:168:9: replace BlockSnapshot::select_winning_block -> Result<Option<LeaderBlockCommitOp>, db_error> with Ok(None)
stackslib/src/net/stackerdb/sync.rs:1063:9: replace StackerDBSync<NC>::wakeup with ()
stackslib/src/chainstate/coordinator/comm.rs:41:9: replace <impl CoordinatorNotices for ArcCounterCoordinatorNotices>::notify_stacks_block_processed with ()
stackslib/src/chainstate/coordinator/comm.rs:44:9: replace <impl CoordinatorNotices for ArcCounterCoordinatorNotices>::notify_sortition_processed with ()
stackslib/src/chainstate/burn/operations/mod.rs:486:9: replace BlockstackOperationType::blockstack_op_to_json -> serde_json::Value with Default::default()
stackslib/src/chainstate/coordinator/comm.rs:100:9: replace SignalBools::activated_signal -> bool with false
stackslib/src/chainstate/burn/distribution.rs:307:9: replace BurnSamplePoint::prometheus_update_miner_commitments with ()
stackslib/src/chainstate/coordinator/comm.rs:103:9: replace SignalBools::receive_signal -> u8 with 1
stackslib/src/chainstate/coordinator/comm.rs:103:9: replace SignalBools::receive_signal -> u8 with 0
stackslib/src/net/stackerdb/sync.rs:1076:9: replace StackerDBSync<NC>::run -> Result<Option<StackerDBSyncResult>, net_error> with Ok(None)
stackslib/src/chainstate/coordinator/comm.rs:124:9: replace CoordinatorReceivers::wait_on -> u8 with 1
stackslib/src/chainstate/burn/operations/mod.rs:155:9: replace <impl Error for Error>::cause -> Option<&dyn error::Error> with None
stackslib/src/chainstate/burn/operations/mod.rs:501:9: replace <impl Display for BlockstackOperationType>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/chainstate/coordinator/comm.rs:142:9: replace CoordinatorChannels::announce_new_burn_block -> bool with true
stackslib/src/chainstate/coordinator/comm.rs:158:9: replace CoordinatorChannels::is_stopped -> bool with true
stackslib/src/chainstate/coordinator/comm.rs:163:9: replace CoordinatorChannels::get_stacks_blocks_processed -> u64 with 1
stackslib/src/chainstate/coordinator/comm.rs:163:9: replace CoordinatorChannels::get_stacks_blocks_processed -> u64 with 0
stackslib/src/chainstate/coordinator/comm.rs:192:9: replace CoordinatorChannels::wait_for_stacks_blocks_processed -> bool with true
stackslib/src/chainstate/stacks/address.rs:98:9: replace PoxAddress::hashmode -> Option<AddressHashMode> with None
stackslib/src/chainstate/stacks/address.rs:108:9: replace PoxAddress::version -> u8 with 1
stackslib/src/chainstate/stacks/address.rs:108:9: replace PoxAddress::version -> u8 with 0
stackslib/src/chainstate/stacks/address.rs:126:9: replace PoxAddress::bytes -> Vec<u8> with vec![]
stackslib/src/chainstate/stacks/address.rs:126:9: replace PoxAddress::bytes -> Vec<u8> with vec![0]
stackslib/src/chainstate/stacks/address.rs:140:9: replace PoxAddress::try_standard_from_pox_tuple -> Option<PoxAddress> with None
stackslib/src/chainstate/stacks/address.rs:126:9: replace PoxAddress::bytes -> Vec<u8> with vec![1]
stackslib/src/chainstate/stacks/address.rs:257:9: replace PoxAddress::to_db_string -> String with String::new()
stackslib/src/chainstate/stacks/address.rs:170:9: replace PoxAddress::try_addr20_from_pox_tuple -> Option<PoxAddress> with None
stackslib/src/chainstate/stacks/address.rs:206:9: replace PoxAddress::try_from_pox_tuple -> Option<PoxAddress> with None
stackslib/src/chainstate/stacks/address.rs:257:9: replace PoxAddress::to_db_string -> String with "xyzzy".into()
stackslib/src/chainstate/stacks/address.rs:262:9: replace PoxAddress::from_db_string -> Option<PoxAddress> with None
stackslib/src/chainstate/stacks/address.rs:267:9: replace PoxAddress::is_burn -> bool with true
stackslib/src/chainstate/stacks/address.rs:190:9: replace PoxAddress::try_addr32_from_pox_tuple -> Option<PoxAddress> with None
stackslib/src/chainstate/stacks/address.rs:267:9: replace PoxAddress::is_burn -> bool with false
stackslib/src/chainstate/stacks/address.rs:373:9: replace PoxAddress::try_into_stacks_address -> Option<StacksAddress> with None
stackslib/src/chainstate/stacks/address.rs:381:9: replace PoxAddress::to_b58 -> String with String::new()
stackslib/src/chainstate/stacks/address.rs:306:9: replace PoxAddress::as_clarity_tuple -> Option<TupleData> with None
stackslib/src/chainstate/stacks/address.rs:381:9: replace PoxAddress::to_b58 -> String with "xyzzy".into()
stackslib/src/chainstate/stacks/address.rs:436:9: replace PoxAddress::try_from_bitcoin_output -> Option<PoxAddress> with None
stackslib/src/chainstate/stacks/address.rs:278:9: replace PoxAddress::to_burnchain_repr -> String with String::new()
stackslib/src/chainstate/stacks/address.rs:278:9: replace PoxAddress::to_burnchain_repr -> String with "xyzzy".into()
stackslib/src/chainstate/stacks/address.rs:509:9: replace <impl StacksAddressExtensions for StacksAddress>::to_b58 -> String with String::new()
stackslib/src/chainstate/stacks/address.rs:509:9: replace <impl StacksAddressExtensions for StacksAddress>::to_b58 -> String with "xyzzy".into()
stackslib/src/chainstate/stacks/address.rs:491:9: replace <impl StacksAddressExtensions for StacksAddress>::is_boot_code_addr -> bool with false
stackslib/src/chainstate/stacks/address.rs:404:9: replace PoxAddress::to_bitcoin_tx_out -> TxOut with Default::default()
stackslib/src/chainstate/coordinator/comm.rs:167:9: replace CoordinatorChannels::get_sortitions_processed -> u64 with 1
stackslib/src/chainstate/stacks/auth.rs:114:9: replace <impl StacksMessageCodec for MultisigSpendingCondition>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/auth.rs:44:9: replace <impl StacksMessageCodec for TransactionAuthField>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/auth.rs:319:9: replace <impl StacksMessageCodec for SinglesigSpendingCondition>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/auth.rs:374:9: replace SinglesigSpendingCondition::set_signature -> () with ()
stackslib/src/chainstate/stacks/auth.rs:457:9: replace <impl StacksMessageCodec for TransactionSpendingCondition>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/auth.rs:497:9: replace TransactionSpendingCondition::new_singlesig_p2pkh -> Option<TransactionSpendingCondition> with None
stackslib/src/chainstate/stacks/auth.rs:598:9: replace TransactionSpendingCondition::num_signatures -> u16 with 0
stackslib/src/chainstate/stacks/auth.rs:598:9: replace TransactionSpendingCondition::num_signatures -> u16 with 1
stackslib/src/chainstate/stacks/auth.rs:621:9: replace TransactionSpendingCondition::signatures_required -> u16 with 0
stackslib/src/chainstate/stacks/auth.rs:210:9: replace MultisigSpendingCondition::push_signature -> () with ()
stackslib/src/chainstate/stacks/auth.rs:630:9: replace TransactionSpendingCondition::nonce -> u64 with 1
stackslib/src/chainstate/stacks/auth.rs:630:9: replace TransactionSpendingCondition::nonce -> u64 with 0
stackslib/src/chainstate/stacks/auth.rs:637:9: replace TransactionSpendingCondition::tx_fee -> u64 with 1
stackslib/src/chainstate/stacks/auth.rs:637:9: replace TransactionSpendingCondition::tx_fee -> u64 with 0
stackslib/src/chainstate/stacks/auth.rs:644:9: replace TransactionSpendingCondition::set_nonce -> () with ()
stackslib/src/chainstate/stacks/address.rs:491:9: replace <impl StacksAddressExtensions for StacksAddress>::is_boot_code_addr -> bool with true
stackslib/src/chainstate/stacks/auth.rs:666:9: replace TransactionSpendingCondition::get_tx_fee -> u64 with 1
stackslib/src/chainstate/stacks/auth.rs:699:9: replace TransactionSpendingCondition::clear -> () with ()
stackslib/src/chainstate/stacks/auth.rs:851:9: replace <impl StacksMessageCodec for TransactionAuth>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/auth.rs:891:9: replace TransactionAuth::from_p2pkh -> Option<TransactionAuth> with None
stackslib/src/chainstate/stacks/auth.rs:655:9: replace TransactionSpendingCondition::set_tx_fee -> () with ()
stackslib/src/chainstate/stacks/auth.rs:621:9: replace TransactionSpendingCondition::signatures_required -> u16 with 1
stackslib/src/chainstate/stacks/auth.rs:541:9: replace TransactionSpendingCondition::new_multisig_p2sh -> Option<TransactionSpendingCondition> with None
stackslib/src/chainstate/stacks/auth.rs:220:9: replace MultisigSpendingCondition::pop_auth_field -> Option<TransactionAuthField> with None
stackslib/src/chainstate/stacks/auth.rs:666:9: replace TransactionSpendingCondition::get_tx_fee -> u64 with 0
stackslib/src/chainstate/stacks/auth.rs:900:9: replace TransactionAuth::from_p2sh -> Option<TransactionAuth> with None
stackslib/src/chainstate/stacks/auth.rs:921:9: replace TransactionAuth::from_p2wsh -> Option<TransactionAuth> with None
stackslib/src/chainstate/stacks/auth.rs:215:9: replace MultisigSpendingCondition::push_public_key -> () with ()
stackslib/src/chainstate/stacks/auth.rs:958:9: replace TransactionAuth::is_standard -> bool with false
stackslib/src/chainstate/stacks/auth.rs:965:9: replace TransactionAuth::is_sponsored -> bool with true
stackslib/src/chainstate/stacks/auth.rs:518:9: replace TransactionSpendingCondition::new_singlesig_p2wpkh -> Option<TransactionSpendingCondition> with None
stackslib/src/chainstate/stacks/auth.rs:564:9: replace TransactionSpendingCondition::new_multisig_p2wsh -> Option<TransactionSpendingCondition> with None
stackslib/src/chainstate/stacks/auth.rs:935:9: replace TransactionAuth::into_sponsored -> Option<TransactionAuth> with None
stackslib/src/chainstate/stacks/auth.rs:912:9: replace TransactionAuth::from_p2wpkh -> Option<TransactionAuth> with None
stackslib/src/chainstate/stacks/auth.rs:1002:9: replace TransactionAuth::set_origin_nonce -> () with ()
stackslib/src/chainstate/stacks/auth.rs:1016:9: replace TransactionAuth::get_sponsor_nonce -> Option<u64> with None
stackslib/src/chainstate/stacks/auth.rs:958:9: replace TransactionAuth::is_standard -> bool with true
stackslib/src/chainstate/stacks/auth.rs:998:9: replace TransactionAuth::get_origin_nonce -> u64 with 0
stackslib/src/chainstate/stacks/auth.rs:998:9: replace TransactionAuth::get_origin_nonce -> u64 with 1
stackslib/src/chainstate/stacks/auth.rs:1040:9: replace TransactionAuth::get_tx_fee -> u64 with 1
stackslib/src/chainstate/stacks/auth.rs:1016:9: replace TransactionAuth::get_sponsor_nonce -> Option<u64> with Some(0)
stackslib/src/chainstate/stacks/auth.rs:965:9: replace TransactionAuth::is_sponsored -> bool with false
stackslib/src/chainstate/stacks/block.rs:44:9: replace <impl StacksMessageCodec for StacksBlockHeader>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/auth.rs:1033:9: replace TransactionAuth::set_tx_fee -> () with ()
stackslib/src/chainstate/stacks/auth.rs:1009:9: replace TransactionAuth::sponsor -> Option<&TransactionSpendingCondition> with None
stackslib/src/chainstate/stacks/block.rs:102:9: replace StacksBlockHeader::is_first_mined -> bool with true
stackslib/src/chainstate/stacks/auth.rs:1023:9: replace TransactionAuth::set_sponsor_nonce -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/block.rs:287:9: replace StacksBlockHeader::has_microblock_parent -> bool with true
stackslib/src/chainstate/stacks/auth.rs:1040:9: replace TransactionAuth::get_tx_fee -> u64 with 0
stackslib/src/chainstate/stacks/block.rs:294:9: replace <impl StacksMessageCodec for StacksBlock>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/block.rs:411:9: replace StacksBlock::is_first_mined -> bool with true
stackslib/src/chainstate/stacks/block.rs:193:9: replace StacksBlockHeader::validate_burnchain -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/block.rs:425:9: replace StacksBlock::get_coinbase_tx -> Option<StacksTransaction> with None
stackslib/src/chainstate/stacks/block.rs:437:9: replace StacksBlock::validate_transactions_unique -> bool with false
stackslib/src/chainstate/stacks/auth.rs:948:9: replace TransactionAuth::set_sponsor -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/block.rs:437:9: replace StacksBlock::validate_transactions_unique -> bool with true
stackslib/src/chainstate/stacks/block.rs:457:9: replace StacksBlock::validate_transactions_network -> bool with false
stackslib/src/chainstate/stacks/block.rs:471:9: replace StacksBlock::validate_transactions_chain_id -> bool with false
stackslib/src/chainstate/stacks/block.rs:487:9: replace StacksBlock::validate_anchor_mode -> bool with false
stackslib/src/chainstate/stacks/block.rs:457:9: replace StacksBlock::validate_transactions_network -> bool with true
stackslib/src/chainstate/stacks/block.rs:471:9: replace StacksBlock::validate_transactions_chain_id -> bool with true
stackslib/src/chainstate/stacks/block.rs:487:9: replace StacksBlock::validate_anchor_mode -> bool with true
stackslib/src/chainstate/stacks/block.rs:511:9: replace StacksBlock::validate_coinbase -> bool with false
stackslib/src/chainstate/stacks/block.rs:565:9: replace StacksBlock::validate_transactions_static_epoch -> bool with false
stackslib/src/chainstate/stacks/block.rs:597:9: replace StacksBlock::validate_transactions_static -> bool with false
stackslib/src/chainstate/stacks/block.rs:511:9: replace StacksBlock::validate_coinbase -> bool with true
stackslib/src/chainstate/stacks/block.rs:565:9: replace StacksBlock::validate_transactions_static_epoch -> bool with true
stackslib/src/chainstate/stacks/block.rs:620:9: replace StacksBlock::has_microblock_parent -> bool with true
stackslib/src/chainstate/stacks/block.rs:287:9: replace StacksBlockHeader::has_microblock_parent -> bool with false
stackslib/src/chainstate/stacks/auth.rs:1069:9: replace TransactionAuth::clear -> () with ()
stackslib/src/chainstate/stacks/block.rs:620:9: replace StacksBlock::has_microblock_parent -> bool with false
stackslib/src/chainstate/stacks/block.rs:675:9: replace StacksMicroblockHeader::serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/auth.rs:1058:9: replace TransactionAuth::verify -> Result<(), net_error> with Ok(())
stackslib/src/chainstate/stacks/block.rs:626:9: replace <impl StacksMessageCodec for StacksMicroblockHeader>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/block.rs:655:9: replace StacksMicroblockHeader::sign -> Result<(), net_error> with Ok(())
stackslib/src/chainstate/stacks/block.rs:712:9: replace StacksMicroblockHeader::verify -> Result<(), net_error> with Ok(())
stackslib/src/chainstate/stacks/auth.rs:1016:9: replace TransactionAuth::get_sponsor_nonce -> Option<u64> with Some(1)
stackslib/src/chainstate/stacks/block.rs:102:9: replace StacksBlockHeader::is_first_mined -> bool with false
stackslib/src/chainstate/stacks/block.rs:781:9: replace <impl StacksMessageCodec for StacksMicroblock>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/boot/mod.rs:115:5: replace make_testnet_cost_voting -> String with String::new()
stackslib/src/chainstate/stacks/boot/mod.rs:115:5: replace make_testnet_cost_voting -> String with "xyzzy".into()
stackslib/src/chainstate/stacks/block.rs:860:9: replace StacksMicroblock::from_parent_unsigned -> Option<StacksMicroblock> with None
stackslib/src/chainstate/stacks/boot/mod.rs:163:9: replace PoxStartCycleInfo::serialize -> String with String::new()
stackslib/src/chainstate/stacks/block.rs:885:9: replace StacksMicroblock::verify -> Result<(), net_error> with Ok(())
stackslib/src/chainstate/stacks/block.rs:762:9: replace StacksMicroblockHeader::from_parent_unsigned -> Option<StacksMicroblockHeader> with None
stackslib/src/chainstate/stacks/block.rs:881:9: replace StacksMicroblock::sign -> Result<(), net_error> with Ok(())
stackslib/src/chainstate/stacks/boot/mod.rs:163:9: replace PoxStartCycleInfo::serialize -> String with "xyzzy".into()
stackslib/src/chainstate/stacks/boot/mod.rs:167:9: replace PoxStartCycleInfo::deserialize -> Option<PoxStartCycleInfo> with None
stackslib/src/chainstate/stacks/block.rs:894:9: replace StacksMicroblock::validate_transactions_static -> bool with false
stackslib/src/chainstate/stacks/boot/mod.rs:171:9: replace PoxStartCycleInfo::is_empty -> bool with true
stackslib/src/chainstate/stacks/boot/mod.rs:198:9: replace StacksChainState::handled_pox_cycle_start -> bool with true
stackslib/src/chainstate/stacks/boot/mod.rs:192:9: replace StacksChainState::handled_pox_cycle_start_key -> String with String::new()
stackslib/src/chainstate/stacks/boot/mod.rs:192:9: replace StacksChainState::handled_pox_cycle_start_key -> String with "xyzzy".into()
stackslib/src/chainstate/stacks/boot/mod.rs:324:9: replace StacksChainState::handle_pox_cycle_start_pox_2 -> Result<Vec<StacksTransactionEvent>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/boot/mod.rs:198:9: replace StacksChainState::handled_pox_cycle_start -> bool with false
stackslib/src/chainstate/stacks/boot/mod.rs:452:9: replace StacksChainState::get_liquid_ustx -> u128 with 0
stackslib/src/chainstate/stacks/boot/mod.rs:452:9: replace StacksChainState::get_liquid_ustx -> u128 with 1
stackslib/src/chainstate/stacks/boot/mod.rs:206:9: replace StacksChainState::mark_pox_cycle_handled with ()
stackslib/src/chainstate/stacks/boot/mod.rs:336:9: replace StacksChainState::handle_pox_cycle_start_pox_3 -> Result<Vec<StacksTransactionEvent>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/boot/mod.rs:486:9: replace StacksChainState::get_total_ustx_stacked -> Result<u128, Error> with Ok(1)
stackslib/src/chainstate/stacks/boot/mod.rs:348:9: replace StacksChainState::handle_pox_cycle_start -> Result<Vec<StacksTransactionEvent>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/boot/mod.rs:541:9: replace StacksChainState::is_pox_active -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/boot/mod.rs:658:9: replace StacksChainState::get_threshold_from_participation -> u128 with 1
stackslib/src/chainstate/stacks/boot/mod.rs:674:9: replace StacksChainState::get_reward_threshold_and_participation -> (u128, u128) with (0, 0)
stackslib/src/chainstate/stacks/boot/mod.rs:674:9: replace StacksChainState::get_reward_threshold_and_participation -> (u128, u128) with (0, 1)
stackslib/src/chainstate/stacks/boot/mod.rs:674:9: replace StacksChainState::get_reward_threshold_and_participation -> (u128, u128) with (1, 1)
stackslib/src/chainstate/stacks/boot/mod.rs:674:9: replace StacksChainState::get_reward_threshold_and_participation -> (u128, u128) with (1, 0)
stackslib/src/chainstate/stacks/boot/mod.rs:708:9: replace StacksChainState::get_reward_addresses_pox_1 -> Result<Vec<RawRewardSetEntry>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/boot/mod.rs:875:9: replace StacksChainState::get_reward_addresses_pox_3 -> Result<Vec<RawRewardSetEntry>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/boot/mod.rs:968:9: replace StacksChainState::get_reward_addresses -> Result<Vec<RawRewardSetEntry>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/boot/mod.rs:541:9: replace StacksChainState::is_pox_active -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/mod.rs:222:9: replace <impl StacksMessageCodec for ExtendedStacksHeader>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/db/mod.rs:249:9: replace DBConfig::supports_epoch -> bool with true
stackslib/src/chainstate/stacks/db/mod.rs:249:9: replace DBConfig::supports_epoch -> bool with false
stackslib/src/chainstate/stacks/boot/mod.rs:786:9: replace StacksChainState::get_reward_addresses_pox_2 -> Result<Vec<RawRewardSetEntry>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/mod.rs:443:9: replace ClarityTx<'a, 'b>::commit_to_block -> () with ()
stackslib/src/chainstate/stacks/block.rs:597:9: replace StacksBlock::validate_transactions_static -> bool with true
stackslib/src/chainstate/stacks/db/mod.rs:457:9: replace ClarityTx<'a, 'b>::commit_unconfirmed -> () with ()
stackslib/src/chainstate/stacks/db/mod.rs:406:9: replace ClarityTx<'a, 'b>::block_limit -> Option<ExecutionCost> with None
stackslib/src/chainstate/stacks/db/mod.rs:469:9: replace ClarityTx<'a, 'b>::reset_cost -> () with ()
stackslib/src/chainstate/stacks/db/mod.rs:461:9: replace ClarityTx<'a, 'b>::rollback_block -> () with ()
stackslib/src/chainstate/stacks/db/mod.rs:477:9: replace ClarityTx<'a, 'b>::increment_ustx_liquid_supply with ()
stackslib/src/chainstate/stacks/db/mod.rs:515:9: replace ChainstateTx<'a>::commit -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/stacks/db/mod.rs:308:9: replace StacksHeaderInfo::is_first_mined -> bool with false
stackslib/src/chainstate/stacks/db/mod.rs:942:9: replace StacksChainState::apply_schema_migrations -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/mod.rs:1054:9: replace StacksChainState::mkdirs -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/mod.rs:1106:9: replace StacksChainState::install_boot_code -> Result<Vec<StacksTransactionReceipt>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/mod.rs:426:9: replace ClarityTx<'a, 'b>::seal -> TrieHash with Default::default()
stackslib/src/chainstate/stacks/db/mod.rs:1608:9: replace StacksChainState::blocks_path -> PathBuf with Default::default()
stackslib/src/chainstate/stacks/db/mod.rs:1613:9: replace StacksChainState::vm_state_path -> PathBuf with Default::default()
stackslib/src/chainstate/stacks/db/mod.rs:1618:9: replace StacksChainState::vm_state_index_root_path -> PathBuf with Default::default()
stackslib/src/chainstate/stacks/db/mod.rs:1624:9: replace StacksChainState::vm_state_index_marf_path -> PathBuf with Default::default()
stackslib/src/chainstate/stacks/db/mod.rs:1630:9: replace StacksChainState::header_index_root_path -> PathBuf with Default::default()
stackslib/src/chainstate/stacks/db/mod.rs:1636:9: replace StacksChainState::make_chainstate_dirs -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/mod.rs:1969:9: replace StacksChainState::with_read_only_unconfirmed_clarity_tx -> Result<Option<R>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/mod.rs:1935:9: replace StacksChainState::with_read_only_clarity_tx -> Option<R> with None
stackslib/src/chainstate/stacks/db/mod.rs:2276:9: replace StacksChainState::has_microblock_pubkey_hash -> Result<Option<u32>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/mod.rs:2258:9: replace StacksChainState::insert_microblock_pubkey_hash -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/mod.rs:2276:9: replace StacksChainState::has_microblock_pubkey_hash -> Result<Option<u32>, Error> with Ok(Some(0))
stackslib/src/chainstate/stacks/db/mod.rs:2276:9: replace StacksChainState::has_microblock_pubkey_hash -> Result<Option<u32>, Error> with Ok(Some(1))
stackslib/src/chainstate/stacks/db/mod.rs:2005:9: replace StacksChainState::maybe_read_only_clarity_tx -> Result<Option<R>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/mod.rs:2291:9: replace StacksChainState::get_burnchain_txids_for_block -> Result<Vec<Txid>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/mod.rs:2058:9: replace StacksChainState::begin_unconfirmed -> Option<ClarityTx<'a, 'a>> with None
stackslib/src/chainstate/stacks/db/mod.rs:2314:9: replace StacksChainState::get_burnchain_txids_in_ancestors -> Result<HashSet<Txid>, Error> with Ok(HashSet::new())
stackslib/src/chainstate/stacks/index/mod.rs:175:9: replace <impl TrieHashExtension for TrieHash>::from_data -> TrieHash with Default::default()
stackslib/src/chainstate/stacks/db/mod.rs:2333:9: replace StacksChainState::store_burnchain_txids -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/mod.rs:189:9: replace <impl TrieHashExtension for TrieHash>::from_data_array -> TrieHash with Default::default()
stackslib/src/chainstate/stacks/index/mod.rs:259:9: replace <impl From for u32>::from -> u32 with 0
stackslib/src/chainstate/stacks/index/mod.rs:259:9: replace <impl From for u32>::from -> u32 with 1
stackslib/src/chainstate/stacks/index/mod.rs:301:9: replace MARFValue::to_vec -> Vec<u8> with vec![]
stackslib/src/chainstate/stacks/index/mod.rs:301:9: replace MARFValue::to_vec -> Vec<u8> with vec![0]
stackslib/src/chainstate/stacks/index/mod.rs:166:9: replace <impl TrieHashExtension for TrieHash>::from_empty_data -> TrieHash with Default::default()
stackslib/src/chainstate/stacks/index/mod.rs:301:9: replace MARFValue::to_vec -> Vec<u8> with vec![1]
stackslib/src/chainstate/stacks/index/mod.rs:363:9: replace <impl Display for Error>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/chainstate/stacks/index/mod.rs:206:9: replace <impl TrieHashExtension for TrieHash>::to_string -> String with "xyzzy".into()
stackslib/src/chainstate/stacks/index/mod.rs:206:9: replace <impl TrieHashExtension for TrieHash>::to_string -> String with String::new()
stackslib/src/chainstate/stacks/miner.rs:97:9: replace MinerStatus::is_blocked -> bool with false
stackslib/src/chainstate/stacks/miner.rs:93:9: replace MinerStatus::remove_blocked with ()
stackslib/src/chainstate/stacks/index/mod.rs:404:9: replace <impl Error for Error>::cause -> Option<&dyn error::Error> with None
stackslib/src/chainstate/stacks/events.rs:37:9: replace TransactionOrigin::serialize_to_dbstring -> String with String::new()
stackslib/src/chainstate/stacks/miner.rs:97:9: replace MinerStatus::is_blocked -> bool with true
stackslib/src/chainstate/stacks/miner.rs:106:9: replace MinerStatus::get_spend_amount -> u64 with 1
stackslib/src/chainstate/stacks/miner.rs:116:9: replace <impl Display for MinerStatus>::fmt -> std::fmt::Result with Ok(Default::default())
stackslib/src/chainstate/stacks/miner.rs:134:5: replace signal_mining_ready with ()
stackslib/src/chainstate/stacks/miner.rs:371:9: replace TransactionResult::log_transaction_error with ()
stackslib/src/chainstate/stacks/miner.rs:393:9: replace TransactionResult::log_transaction_problematic with ()
stackslib/src/chainstate/stacks/miner.rs:1346:9: replace <impl Drop for StacksMicroblockBuilder<'a>>::drop with ()
stackslib/src/chainstate/stacks/miner.rs:1336:9: replace StacksMicroblockBuilder<'a>::get_bytes_so_far -> u64 with 0
stackslib/src/chainstate/stacks/miner.rs:1336:9: replace StacksMicroblockBuilder<'a>::get_bytes_so_far -> u64 with 1
stackslib/src/chainstate/stacks/miner.rs:1517:9: replace StacksBlockBuilder::set_microblock_privkey with ()
stackslib/src/chainstate/stacks/miner.rs:1506:9: replace StacksBlockBuilder::set_microblock_pubkey_hash -> bool with true
stackslib/src/chainstate/stacks/miner.rs:361:9: replace TransactionResult::log_transaction_success with ()
stackslib/src/chainstate/stacks/transaction.rs:40:9: replace <impl StacksMessageCodec for TransactionContractCall>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/miner.rs:1500:9: replace StacksBlockBuilder::set_parent_microblock -> () with ()
stackslib/src/chainstate/stacks/transaction.rs:101:9: replace <impl StacksMessageCodec for TransactionSmartContract>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:140:9: replace <impl StacksMessageCodec for TransactionPayload>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:117:5: replace ClarityVersion_consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/miner.rs:1945:9: replace StacksBlockBuilder::load_parent_microblocks -> Result<Vec<StacksMicroblock>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/transaction.rs:264:9: replace TransactionPayload::new_contract_call -> Option<TransactionPayload> with None
stackslib/src/chainstate/stacks/transaction.rs:311:9: replace <impl StacksMessageCodec for AssetInfo>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:331:9: replace <impl StacksMessageCodec for PostConditionPrincipal>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:374:9: replace <impl StacksMessageCodec for TransactionPostCondition>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:466:9: replace StacksTransaction::tx_len -> u64 with 0
stackslib/src/chainstate/stacks/transaction.rs:466:9: replace StacksTransaction::tx_len -> u64 with 1
stackslib/src/chainstate/stacks/transaction.rs:85:9: replace <impl Display for TransactionContractCall>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/chainstate/stacks/transaction.rs:293:9: replace TransactionPayload::new_smart_contract -> Option<TransactionPayload> with None
stackslib/src/chainstate/stacks/transaction.rs:577:9: replace <impl StacksMessageCodec for StacksTransaction>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:630:9: replace StacksTransaction::get_tx_fee -> u64 with 1
stackslib/src/chainstate/stacks/transaction.rs:640:9: replace StacksTransaction::get_origin_nonce -> u64 with 0
stackslib/src/chainstate/stacks/transaction.rs:635:9: replace StacksTransaction::set_tx_fee -> () with ()
stackslib/src/chainstate/stacks/transaction.rs:640:9: replace StacksTransaction::get_origin_nonce -> u64 with 1
stackslib/src/chainstate/stacks/transaction.rs:645:9: replace StacksTransaction::get_sponsor_nonce -> Option<u64> with None
stackslib/src/chainstate/stacks/miner.rs:1506:9: replace StacksBlockBuilder::set_microblock_pubkey_hash -> bool with false
stackslib/src/chainstate/stacks/transaction.rs:650:9: replace StacksTransaction::set_origin_nonce -> () with ()
stackslib/src/chainstate/stacks/transaction.rs:665:9: replace StacksTransaction::set_post_condition_mode -> () with ()
stackslib/src/chainstate/stacks/transaction.rs:660:9: replace StacksTransaction::set_anchor_mode -> () with ()
stackslib/src/chainstate/stacks/transaction.rs:670:9: replace StacksTransaction::add_post_condition -> () with ()
stackslib/src/chainstate/stacks/transaction.rs:748:9: replace StacksTransaction::pop_auth_field -> Option<TransactionAuthField> with None
stackslib/src/chainstate/stacks/transaction.rs:630:9: replace StacksTransaction::get_tx_fee -> u64 with 0
stackslib/src/chainstate/stacks/transaction.rs:793:9: replace StacksTransaction::append_next_origin -> Result<(), net_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:566:9: replace StacksTransaction::try_as_coinbase -> Option<(&CoinbasePayload, Option<&PrincipalData>)> with None
stackslib/src/chainstate/stacks/transaction.rs:904:9: replace StacksTransaction::is_mainnet -> bool with true
stackslib/src/chainstate/stacks/transaction.rs:875:9: replace StacksTransaction::sponsor_address -> Option<StacksAddress> with None
stackslib/src/chainstate/stacks/transaction.rs:904:9: replace StacksTransaction::is_mainnet -> bool with false
stackslib/src/chainstate/stacks/transaction.rs:952:9: replace StacksTransactionSigner::sign_origin -> Result<(), net_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:655:9: replace StacksTransaction::set_sponsor_nonce -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:759:9: replace StacksTransaction::append_pubkey -> Result<(), net_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:831:9: replace StacksTransaction::append_next_sponsor -> Result<(), net_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:844:9: replace StacksTransaction::verify -> Result<(), net_error> with Ok(())
stackslib/src/chainstate/stacks/transaction.rs:645:9: replace StacksTransaction::get_sponsor_nonce -> Option<u64> with Some(0)
stackslib/src/chainstate/stacks/transaction.rs:645:9: replace StacksTransaction::get_sponsor_nonce -> Option<u64> with Some(1)
stackslib/src/chainstate/stacks/transaction.rs:1041:9: replace StacksTransactionSigner::complete -> bool with false
stackslib/src/chainstate/stacks/transaction.rs:1059:9: replace StacksTransactionSigner::get_tx -> Option<StacksTransaction> with None
stackslib/src/chainstate/stacks/transaction.rs:943:9: replace StacksTransactionSigner::resume -> () with ()
stackslib/src/burnchains/bitcoin/address.rs:114:5: replace legacy_version_byte_to_address_type -> Option<(LegacyBitcoinAddressType, BitcoinNetworkType)> with None
stackslib/src/burnchains/bitcoin/address.rs:93:5: replace legacy_address_type_to_version_byte -> u8 with 1
stackslib/src/burnchains/bitcoin/address.rs:93:5: replace legacy_address_type_to_version_byte -> u8 with 0
stackslib/src/burnchains/bitcoin/address.rs:138:5: replace to_c32_version_byte -> Option<u8> with None
stackslib/src/burnchains/bitcoin/address.rs:138:5: replace to_c32_version_byte -> Option<u8> with Some(0)
stackslib/src/burnchains/bitcoin/address.rs:138:5: replace to_c32_version_byte -> Option<u8> with Some(1)
stackslib/src/burnchains/bitcoin/address.rs:149:5: replace to_b58_version_byte -> Option<u8> with None
stackslib/src/burnchains/bitcoin/address.rs:149:5: replace to_b58_version_byte -> Option<u8> with Some(0)
stackslib/src/burnchains/bitcoin/address.rs:160:5: replace segwit_hrp -> &'static str with ""
stackslib/src/burnchains/bitcoin/address.rs:149:5: replace to_b58_version_byte -> Option<u8> with Some(1)
stackslib/src/burnchains/bitcoin/address.rs:160:5: replace segwit_hrp -> &'static str with "xyzzy"
stackslib/src/chainstate/stacks/transaction.rs:997:9: replace StacksTransactionSigner::sign_sponsor -> Result<(), net_error> with Ok(())
stackslib/src/burnchains/bitcoin/address.rs:169:9: replace LegacyBitcoinAddress::to_versioned_bytes -> [u8; 21] with [0; 21]
stackslib/src/burnchains/bitcoin/address.rs:187:9: replace LegacyBitcoinAddress::to_p2pkh_tx_out -> TxOut with Default::default()
stackslib/src/burnchains/bitcoin/address.rs:182:9: replace LegacyBitcoinAddress::to_b58 -> String with String::new()
stackslib/src/burnchains/bitcoin/address.rs:169:9: replace LegacyBitcoinAddress::to_versioned_bytes -> [u8; 21] with [1; 21]
stackslib/src/burnchains/bitcoin/address.rs:246:9: replace SegwitBitcoinAddress::witness_version -> u8 with 1
stackslib/src/burnchains/bitcoin/address.rs:253:9: replace SegwitBitcoinAddress::bytes -> Vec<u8> with vec![]
stackslib/src/chainstate/stacks/transaction.rs:947:9: replace StacksTransactionSigner::disable_checks -> () with ()
stackslib/src/chainstate/stacks/transaction.rs:1021:9: replace StacksTransactionSigner::pop_origin_auth_field -> Option<TransactionAuthField> with None
stackslib/src/chainstate/stacks/transaction.rs:1017:9: replace StacksTransactionSigner::append_sponsor -> Result<(), net_error> with Ok(())
stackslib/src/burnchains/bitcoin/address.rs:253:9: replace SegwitBitcoinAddress::bytes -> Vec<u8> with vec![0]
stackslib/src/burnchains/bitcoin/address.rs:253:9: replace SegwitBitcoinAddress::bytes -> Vec<u8> with vec![1]
stackslib/src/burnchains/bitcoin/address.rs:257:9: replace SegwitBitcoinAddress::bytes_ref -> &[u8] with Vec::leak(Vec::new())
stackslib/src/burnchains/bitcoin/address.rs:257:9: replace SegwitBitcoinAddress::bytes_ref -> &[u8] with Vec::leak(vec![0])
stackslib/src/burnchains/bitcoin/address.rs:257:9: replace SegwitBitcoinAddress::bytes_ref -> &[u8] with Vec::leak(vec![1])
stackslib/src/burnchains/bitcoin/address.rs:274:9: replace SegwitBitcoinAddress::is_mainnet -> bool with true
stackslib/src/burnchains/bitcoin/address.rs:201:9: replace LegacyBitcoinAddress::to_p2sh_tx_out -> TxOut with Default::default()
stackslib/src/burnchains/bitcoin/address.rs:274:9: replace SegwitBitcoinAddress::is_mainnet -> bool with false
stackslib/src/burnchains/bitcoin/address.rs:289:9: replace SegwitBitcoinAddress::to_bech32_hrp -> String with String::new()
stackslib/src/burnchains/bitcoin/address.rs:289:9: replace SegwitBitcoinAddress::to_bech32_hrp -> String with "xyzzy".into()
stackslib/src/burnchains/bitcoin/address.rs:299:9: replace SegwitBitcoinAddress::to_bech32 -> String with String::new()
stackslib/src/burnchains/bitcoin/address.rs:299:9: replace SegwitBitcoinAddress::to_bech32 -> String with "xyzzy".into()
stackslib/src/burnchains/bitcoin/address.rs:304:9: replace SegwitBitcoinAddress::from_bech32 -> Option<SegwitBitcoinAddress> with None
stackslib/src/chainstate/stacks/transaction.rs:986:9: replace StacksTransactionSigner::append_origin -> Result<(), net_error> with Ok(())
stackslib/src/burnchains/bitcoin/address.rs:366:9: replace SegwitBitcoinAddress::to_p2wpkh_tx_out -> TxOut with Default::default()
stackslib/src/burnchains/bitcoin/address.rs:265:9: replace SegwitBitcoinAddress::to_versioned_bytes -> Vec<u8> with vec![0]
stackslib/src/burnchains/bitcoin/address.rs:377:9: replace SegwitBitcoinAddress::to_p2wsh_tx_out -> TxOut with Default::default()
stackslib/src/burnchains/bitcoin/address.rs:388:9: replace SegwitBitcoinAddress::to_p2tr_tx_out -> TxOut with Default::default()
stackslib/src/burnchains/bitcoin/address.rs:265:9: replace SegwitBitcoinAddress::to_versioned_bytes -> Vec<u8> with vec![]
stackslib/src/burnchains/bitcoin/address.rs:407:9: replace SegwitBitcoinAddress::is_p2wsh -> bool with false
stackslib/src/burnchains/bitcoin/address.rs:407:9: replace SegwitBitcoinAddress::is_p2wsh -> bool with true
stackslib/src/burnchains/bitcoin/address.rs:399:9: replace SegwitBitcoinAddress::is_p2wpkh -> bool with true
stackslib/src/chainstate/stacks/transaction.rs:1032:9: replace StacksTransactionSigner::pop_sponsor_auth_field -> Option<TransactionAuthField> with None
stackslib/src/burnchains/bitcoin/address.rs:471:9: replace BitcoinAddress::from_scriptpubkey -> Option<BitcoinAddress> with None
stackslib/src/burnchains/bitcoin/address.rs:399:9: replace SegwitBitcoinAddress::is_p2wpkh -> bool with false
stackslib/src/burnchains/bitcoin/address.rs:541:9: replace BitcoinAddress::is_segwit_p2wpkh -> bool with true
stackslib/src/burnchains/bitcoin/address.rs:415:9: replace SegwitBitcoinAddress::is_p2tr -> bool with false
stackslib/src/burnchains/bitcoin/address.rs:548:9: replace BitcoinAddress::is_segwit_p2wsh -> bool with false
stackslib/src/burnchains/bitcoin/address.rs:589:9: replace BitcoinAddress::try_from_segwit -> Option<BitcoinAddress> with None
stackslib/src/burnchains/bitcoin/address.rs:541:9: replace BitcoinAddress::is_segwit_p2wpkh -> bool with false
stackslib/src/burnchains/bitcoin/address.rs:623:9: replace <impl Address for LegacyBitcoinAddress>::from_string -> Option<LegacyBitcoinAddress> with None
stackslib/src/burnchains/bitcoin/address.rs:555:9: replace BitcoinAddress::is_segwit_p2tr -> bool with false
stackslib/src/burnchains/bitcoin/address.rs:636:9: replace <impl Address for SegwitBitcoinAddress>::to_bytes -> Vec<u8> with vec![]
stackslib/src/burnchains/bitcoin/address.rs:636:9: replace <impl Address for SegwitBitcoinAddress>::to_bytes -> Vec<u8> with vec![0]
stackslib/src/burnchains/bitcoin/address.rs:636:9: replace <impl Address for SegwitBitcoinAddress>::to_bytes -> Vec<u8> with vec![1]
stackslib/src/burnchains/bitcoin/address.rs:640:9: replace <impl Address for SegwitBitcoinAddress>::from_string -> Option<SegwitBitcoinAddress> with None
stackslib/src/burnchains/bitcoin/address.rs:265:9: replace SegwitBitcoinAddress::to_versioned_bytes -> Vec<u8> with vec![1]
stackslib/src/burnchains/bitcoin/address.rs:662:9: replace <impl Display for SegwitBitcoinAddress>::fmt -> std::fmt::Result with Ok(Default::default())
stackslib/src/burnchains/bitcoin/address.rs:668:9: replace <impl Display for BitcoinAddress>::fmt -> std::fmt::Result with Ok(Default::default())
stackslib/src/burnchains/bitcoin/address.rs:684:9: replace <impl Address for BitcoinAddress>::from_string -> Option<BitcoinAddress> with None
stackslib/src/burnchains/bitcoin/bits.rs:45:5: replace parse_script -> Vec<Instruction<'a>> with vec![]
stackslib/src/burnchains/bitcoin/bits.rs:54:9: replace BitcoinTxInputStructured::from_bitcoin_p2pkh_script_sig -> Option<BitcoinTxInputStructured> with None
stackslib/src/burnchains/bitcoin/bits.rs:96:9: replace BitcoinTxInputStructured::from_bitcoin_pubkey_pushbytes -> Option<BitcoinTxInputStructured> with None
stackslib/src/burnchains/bitcoin/bits.rs:156:9: replace BitcoinTxInputStructured::from_bitcoin_witness_pubkey_vecs -> Option<BitcoinTxInputStructured> with None
stackslib/src/burnchains/bitcoin/bits.rs:201:9: replace BitcoinTxInputStructured::from_bitcoin_multisig_redeem_script -> Option<BitcoinTxInputStructured> with None
stackslib/src/burnchains/bitcoin/bits.rs:285:9: replace BitcoinTxInputStructured::from_bitcoin_p2sh_multisig_script_sig -> Option<BitcoinTxInputStructured> with None
stackslib/src/burnchains/bitcoin/bits.rs:337:9: replace BitcoinTxInputStructured::from_bitcoin_p2wpkh_p2sh_script_sig -> Option<BitcoinTxInputStructured> with None
stackslib/src/burnchains/bitcoin/bits.rs:387:9: replace BitcoinTxInputStructured::from_bitcoin_p2wsh_p2sh_multisig_script_sig -> Option<BitcoinTxInputStructured> with None
stackslib/src/burnchains/bitcoin/bits.rs:450:9: replace BitcoinTxInputStructured::from_bitcoin_script_sig -> Option<BitcoinTxInputStructured> with None
stackslib/src/burnchains/bitcoin/address.rs:630:9: replace <impl Address for LegacyBitcoinAddress>::is_burn -> bool with true
stackslib/src/burnchains/bitcoin/bits.rs:467:9: replace BitcoinTxInputStructured::from_bitcoin_witness_script_sig -> Option<BitcoinTxInputStructured> with None
stackslib/src/burnchains/bitcoin/bits.rs:525:9: replace BitcoinTxInput::from_bitcoin_txin_structured -> Option<BitcoinTxInput> with None
stackslib/src/burnchains/bitcoin/bits.rs:570:9: replace BitcoinTxOutput::from_bitcoin_script_pubkey_legacy -> Option<BitcoinTxOutput> with None
stackslib/src/burnchains/bitcoin/bits.rs:604:9: replace BitcoinTxOutput::from_bitcoin_script_pubkey -> Option<BitcoinTxOutput> with None
stackslib/src/burnchains/bitcoin/bits.rs:618:9: replace BitcoinTxOutput::from_bitcoin_txout_legacy -> Option<BitcoinTxOutput> with None
stackslib/src/burnchains/bitcoin/bits.rs:631:9: replace BitcoinTxOutput::from_bitcoin_txout -> Option<BitcoinTxOutput> with None
stackslib/src/burnchains/bitcoin/blocks.rs:66:9: replace <impl BurnHeaderIPC for BitcoinHeaderIPC>::header_hash -> [u8; 32] with [0; 32]
stackslib/src/burnchains/bitcoin/blocks.rs:62:9: replace <impl BurnHeaderIPC for BitcoinHeaderIPC>::height -> u64 with 1
stackslib/src/burnchains/bitcoin/blocks.rs:66:9: replace <impl BurnHeaderIPC for BitcoinHeaderIPC>::header_hash -> [u8; 32] with [1; 32]
stackslib/src/burnchains/bitcoin/address.rs:645:9: replace <impl Address for SegwitBitcoinAddress>::is_burn -> bool with true
stackslib/src/burnchains/bitcoin/blocks.rs:85:9: replace <impl BurnBlockIPC for BitcoinBlockIPC>::height -> u64 with 1
stackslib/src/burnchains/bitcoin/blocks.rs:149:9: replace <impl BitcoinMessageHandler for BitcoinBlockDownloader>::begin_session -> Result<bool, btc_error> with Ok(false)
stackslib/src/burnchains/bitcoin/blocks.rs:168:9: replace <impl BitcoinMessageHandler for BitcoinBlockDownloader>::handle_message -> Result<bool, btc_error> with Ok(true)
stackslib/src/burnchains/bitcoin/blocks.rs:241:9: replace BitcoinBlockParser::allow_raw_inputs -> bool with true
stackslib/src/burnchains/bitcoin/blocks.rs:241:9: replace BitcoinBlockParser::allow_raw_inputs -> bool with false
stackslib/src/burnchains/bitcoin/blocks.rs:246:9: replace BitcoinBlockParser::allow_segwit_outputs -> bool with false
stackslib/src/burnchains/bitcoin/blocks.rs:251:9: replace BitcoinBlockParser::check_block -> bool with true
stackslib/src/burnchains/bitcoin/blocks.rs:251:9: replace BitcoinBlockParser::check_block -> bool with false
stackslib/src/burnchains/bitcoin/blocks.rs:268:9: replace BitcoinBlockParser::parse_data -> Option<(u8, Vec<u8>)> with None
stackslib/src/burnchains/bitcoin/blocks.rs:268:9: replace BitcoinBlockParser::parse_data -> Option<(u8, Vec<u8>)> with Some((0, vec![]))
stackslib/src/burnchains/bitcoin/blocks.rs:268:9: replace BitcoinBlockParser::parse_data -> Option<(u8, Vec<u8>)> with Some((0, vec![0]))
stackslib/src/burnchains/bitcoin/blocks.rs:268:9: replace BitcoinBlockParser::parse_data -> Option<(u8, Vec<u8>)> with Some((0, vec![1]))
stackslib/src/burnchains/bitcoin/blocks.rs:268:9: replace BitcoinBlockParser::parse_data -> Option<(u8, Vec<u8>)> with Some((1, vec![]))
stackslib/src/burnchains/bitcoin/blocks.rs:268:9: replace BitcoinBlockParser::parse_data -> Option<(u8, Vec<u8>)> with Some((1, vec![0]))
stackslib/src/burnchains/bitcoin/blocks.rs:268:9: replace BitcoinBlockParser::parse_data -> Option<(u8, Vec<u8>)> with Some((1, vec![1]))
stackslib/src/burnchains/bitcoin/blocks.rs:310:9: replace BitcoinBlockParser::maybe_burnchain_tx -> bool with true
stackslib/src/burnchains/bitcoin/blocks.rs:310:9: replace BitcoinBlockParser::maybe_burnchain_tx -> bool with false
stackslib/src/burnchains/bitcoin/blocks.rs:352:9: replace BitcoinBlockParser::parse_inputs_structured -> Option<Vec<BitcoinTxInput>> with None
stackslib/src/burnchains/bitcoin/blocks.rs:352:9: replace BitcoinBlockParser::parse_inputs_structured -> Option<Vec<BitcoinTxInput>> with Some(vec![])
stackslib/src/burnchains/bitcoin/blocks.rs:370:9: replace BitcoinBlockParser::parse_inputs_raw -> Vec<BitcoinTxInput> with vec![]
stackslib/src/burnchains/bitcoin/blocks.rs:384:9: replace BitcoinBlockParser::parse_outputs -> Option<Vec<BitcoinTxOutput>> with Some(vec![])
stackslib/src/burnchains/bitcoin/blocks.rs:384:9: replace BitcoinBlockParser::parse_outputs -> Option<Vec<BitcoinTxOutput>> with None
stackslib/src/burnchains/bitcoin/blocks.rs:418:9: replace BitcoinBlockParser::parse_tx -> Option<BitcoinTransaction> with None
stackslib/src/burnchains/bitcoin/blocks.rs:502:9: replace BitcoinBlockParser::process_block -> Option<BitcoinBlock> with None
stackslib/src/burnchains/bitcoin/indexer.rs:71:5: replace network_id_to_bytes -> u32 with 0
stackslib/src/burnchains/bitcoin/blocks.rs:85:9: replace <impl BurnBlockIPC for BitcoinBlockIPC>::height -> u64 with 0
stackslib/src/burnchains/bitcoin/indexer.rs:71:5: replace network_id_to_bytes -> u32 with 1
stackslib/src/burnchains/bitcoin/blocks.rs:149:9: replace <impl BitcoinMessageHandler for BitcoinBlockDownloader>::begin_session -> Result<bool, btc_error> with Ok(true)
stackslib/src/burnchains/bitcoin/indexer.rs:611:9: replace BitcoinIndexer::inner_find_bitcoin_reorg -> Result<u64, btc_error> with Ok(0)
stackslib/src/burnchains/bitcoin/indexer.rs:611:9: replace BitcoinIndexer::inner_find_bitcoin_reorg -> Result<u64, btc_error> with Ok(1)
stackslib/src/burnchains/bitcoin/indexer.rs:436:9: replace BitcoinIndexer::sync_last_headers -> Result<u64, btc_error> with Ok(0)
stackslib/src/burnchains/bitcoin/indexer.rs:898:9: replace BitcoinIndexer::check_chain_tip_timestamp -> Result<(), burnchain_error> with Ok(())
stackslib/src/burnchains/bitcoin/indexer.rs:925:9: replace <impl Drop for BitcoinIndexer>::drop with ()
stackslib/src/burnchains/bitcoin/indexer.rs:324:9: replace BitcoinIndexer::is_connected -> bool with true
stackslib/src/burnchains/bitcoin/indexer.rs:966:9: replace <impl BurnchainIndexer for BitcoinIndexer>::get_highest_header_height -> Result<u64, burnchain_error> with Ok(0)
stackslib/src/burnchains/bitcoin/indexer.rs:966:9: replace <impl BurnchainIndexer for BitcoinIndexer>::get_highest_header_height -> Result<u64, burnchain_error> with Ok(1)
stackslib/src/burnchains/bitcoin/indexer.rs:436:9: replace BitcoinIndexer::sync_last_headers -> Result<u64, btc_error> with Ok(1)
stackslib/src/burnchains/bitcoin/indexer.rs:1048:9: replace <impl BurnchainIndexer for BitcoinIndexer>::read_headers -> Result<Vec<BitcoinHeaderIPC>, burnchain_error> with Ok(vec![])
stackslib/src/burnchains/bitcoin/indexer.rs:1007:9: replace <impl BurnchainIndexer for BitcoinIndexer>::get_first_block_header_timestamp -> Result<u64, burnchain_error> with Ok(0)
stackslib/src/burnchains/bitcoin/indexer.rs:1117:9: replace <impl BurnchainIndexer for BitcoinIndexer>::drop_headers -> Result<(), burnchain_error> with Ok(())
stackslib/src/burnchains/bitcoin/indexer.rs:946:9: replace <impl BurnchainIndexer for BitcoinIndexer>::get_headers_path -> String with "xyzzy".into()
stackslib/src/burnchains/bitcoin/indexer.rs:1150:9: replace <impl BurnchainHeaderReader for BitcoinIndexer>::read_burnchain_headers -> Result<Vec<BurnchainBlockHeader>, DBError> with Ok(vec![])
stackslib/src/burnchains/bitcoin/indexer.rs:982:9: replace <impl BurnchainIndexer for BitcoinIndexer>::get_first_block_height -> u64 with 0
stackslib/src/burnchains/bitcoin/indexer.rs:1073:9: replace <impl BurnchainIndexer for BitcoinIndexer>::find_chain_reorg -> Result<u64, burnchain_error> with Ok(1)
stackslib/src/burnchains/bitcoin/network.rs:113:9: replace BitcoinIndexer::handle_message -> Result<bool, btc_error> with Ok(true)
stackslib/src/burnchains/bitcoin/indexer.rs:1177:9: replace <impl BurnchainHeaderReader for BitcoinIndexer>::find_burnchain_header_height -> Result<Option<u64>, DBError> with Ok(None)
stackslib/src/burnchains/bitcoin/indexer.rs:1177:9: replace <impl BurnchainHeaderReader for BitcoinIndexer>::find_burnchain_header_height -> Result<Option<u64>, DBError> with Ok(Some(1))
stackslib/src/burnchains/bitcoin/network.rs:174:9: replace BitcoinIndexer::connect_handshake_backoff -> Result<u64, btc_error> with Ok(1)
stackslib/src/burnchains/bitcoin/spv.rs:129:9: replace <impl FromColumn for Sha256dHash>::from_column -> Result<Sha256dHash, db_error> with Ok(Default::default())
stackslib/src/burnchains/bitcoin/spv.rs:238:9: replace SpvClient::db_instantiate -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:261:9: replace SpvClient::db_get_version -> Result<String, btc_error> with Ok(String::new())
stackslib/src/burnchains/bitcoin/spv.rs:261:9: replace SpvClient::db_get_version -> Result<String, btc_error> with Ok("xyzzy".into())
stackslib/src/burnchains/bitcoin/network.rs:307:9: replace BitcoinIndexer::handle_ping -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/network.rs:341:9: replace BitcoinIndexer::send_getheaders -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:60:43: replace * with +
stackslib/src/burnchains/bitcoin/spv.rs:285:9: replace SpvClient::db_migrate -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:369:9: replace SpvClient::run -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:384:9: replace SpvClient::find_highest_work_score_interval -> Result<u64, btc_error> with Ok(1)
stackslib/src/burnchains/bitcoin/spv.rs:60:53: replace * with +
stackslib/src/burnchains/bitcoin/spv.rs:399:9: replace SpvClient::find_interval_work -> Result<Option<Uint256>, btc_error> with Ok(None)
stackslib/src/burnchains/bitcoin/spv.rs:441:9: replace SpvClient::update_chain_work -> Result<Uint256, btc_error> with Ok(Default::default())
stackslib/src/burnchains/bitcoin/spv.rs:531:9: replace SpvClient::validate_header_integrity -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:644:9: replace SpvClient::get_headers_height -> Result<u64, btc_error> with Ok(0)
stackslib/src/burnchains/bitcoin/spv.rs:644:9: replace SpvClient::get_headers_height -> Result<u64, btc_error> with Ok(1)
stackslib/src/burnchains/bitcoin/spv.rs:650:9: replace SpvClient::get_highest_header_height -> Result<u64, btc_error> with Ok(0)
stackslib/src/burnchains/bitcoin/spv.rs:399:9: replace SpvClient::find_interval_work -> Result<Option<Uint256>, btc_error> with Ok(Some(Default::default()))
stackslib/src/burnchains/bitcoin/spv.rs:650:9: replace SpvClient::get_highest_header_height -> Result<u64, btc_error> with Ok(1)
stackslib/src/burnchains/bitcoin/spv.rs:662:9: replace SpvClient::is_empty -> Result<bool, btc_error> with Ok(true)
stackslib/src/burnchains/bitcoin/spv.rs:671:9: replace SpvClient::read_block_header -> Result<Option<LoneBlockHeader>, btc_error> with Ok(None)
stackslib/src/burnchains/bitcoin/spv.rs:706:9: replace SpvClient::read_block_headers -> Result<Vec<LoneBlockHeader>, btc_error> with Ok(vec![])
stackslib/src/burnchains/bitcoin/spv.rs:748:9: replace SpvClient::insert_block_header -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:770:9: replace SpvClient::init_block_headers -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:911:9: replace SpvClient::write_block_headers -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:945:9: replace SpvClient::insert_block_headers_after -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:997:9: replace SpvClient::insert_block_headers_before -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:1046:9: replace SpvClient::drop_headers -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:415:9: replace SpvClient::store_interval_work -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:572:9: replace SpvClient::validate_header_work -> Result<(), btc_error> with Ok(())
stackslib/src/burnchains/bitcoin/spv.rs:687:9: replace SpvClient::find_block_header_height -> Result<Option<u64>, btc_error> with Ok(None)
stackslib/src/clarity_vm/database/marf.rs:284:9: replace ReadOnlyMarfStore<'a>::trie_exists_for_block -> Result<bool, DatabaseError> with Ok(true)
stackslib/src/clarity_vm/database/marf.rs:328:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_current_block_height -> u32 with 0
stackslib/src/clarity_vm/database/marf.rs:328:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_current_block_height -> u32 with 1
stackslib/src/clarity_vm/database/marf.rs:363:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_block_at_height -> Option<StacksBlockId> with None
stackslib/src/clarity_vm/database/marf.rs:383:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_open_chain_tip_height -> u32 with 0
stackslib/src/clarity_vm/database/marf.rs:383:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_open_chain_tip_height -> u32 with 1
stackslib/src/clarity_vm/database/marf.rs:389:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with None
stackslib/src/burnchains/bitcoin/spv.rs:1110:9: replace SpvClient::get_target -> Result<Option<(u32, Uint256)>, btc_error> with Ok(Some((0, Default::default())))
stackslib/src/clarity_vm/database/marf.rs:284:9: replace ReadOnlyMarfStore<'a>::trie_exists_for_block -> Result<bool, DatabaseError> with Ok(false)
stackslib/src/burnchains/bitcoin/spv.rs:1216:9: replace <impl BitcoinMessageHandler for SpvClient>::begin_session -> Result<bool, btc_error> with Ok(true)
stackslib/src/clarity_vm/database/marf.rs:408:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get -> Option<String> with None
stackslib/src/clarity_vm/database/marf.rs:408:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get -> Option<String> with Some(String::new())
stackslib/src/clarity_vm/database/marf.rs:408:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get -> Option<String> with Some("xyzzy".into())
stackslib/src/clarity_vm/database/marf.rs:389:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some((String::new(), vec![0]))
stackslib/src/clarity_vm/database/marf.rs:463:9: replace WritableMarfStore<'a>::commit_to with ()
stackslib/src/clarity_vm/database/marf.rs:453:9: replace WritableMarfStore<'a>::rollback_block with ()
stackslib/src/clarity_vm/database/marf.rs:491:9: replace WritableMarfStore<'a>::commit_mined_block with ()
stackslib/src/clarity_vm/database/marf.rs:389:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some((String::new(), vec![]))
stackslib/src/clarity_vm/database/marf.rs:479:9: replace WritableMarfStore<'a>::commit_unconfirmed with ()
stackslib/src/clarity_vm/database/marf.rs:389:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some((String::new(), vec![1]))
stackslib/src/clarity_vm/database/marf.rs:547:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get -> Option<String> with None
stackslib/src/clarity_vm/database/marf.rs:547:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get -> Option<String> with Some(String::new())
stackslib/src/clarity_vm/database/marf.rs:543:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_cc_special_cases_handler -> Option<SpecialCaseHandler> with None
stackslib/src/clarity_vm/database/marf.rs:389:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some(("xyzzy".into(), vec![]))
stackslib/src/clarity_vm/database/marf.rs:547:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get -> Option<String> with Some("xyzzy".into())
stackslib/src/clarity_vm/database/marf.rs:573:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some((String::new(), vec![]))
stackslib/src/clarity_vm/database/marf.rs:389:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some(("xyzzy".into(), vec![0]))
stackslib/src/clarity_vm/database/marf.rs:573:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some(("xyzzy".into(), vec![0]))
stackslib/src/clarity_vm/database/marf.rs:596:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_block_at_height -> Option<StacksBlockId> with None
stackslib/src/clarity_vm/database/marf.rs:573:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some((String::new(), vec![0]))
stackslib/src/clarity_vm/database/marf.rs:573:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with None
stackslib/src/clarity_vm/database/marf.rs:612:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_open_chain_tip_height -> u32 with 0
stackslib/src/clarity_vm/database/marf.rs:612:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_open_chain_tip_height -> u32 with 1
stackslib/src/clarity_vm/database/marf.rs:618:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_current_block_height -> u32 with 1
stackslib/src/clarity_vm/database/marf.rs:653:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::put_all with ()
stackslib/src/clarity_vm/database/marf.rs:618:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_current_block_height -> u32 with 0
stackslib/src/clarity_vm/database/marf.rs:457:9: replace WritableMarfStore<'a>::rollback_unconfirmed with ()
stackslib/src/clarity_vm/database/marf.rs:573:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some((String::new(), vec![1]))
stackslib/src/chainstate/burn/db/processing.rs:46:9: replace SortitionHandleTx<'a>::check_transaction -> Result<(), BurnchainError> with Ok(())
stackslib/src/clarity_vm/database/marf.rs:389:9: replace <impl ClarityBackingStore for ReadOnlyMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some(("xyzzy".into(), vec![1]))
stackslib/src/chainstate/burn/db/sortdb.rs:89:50: replace - with +
stackslib/src/chainstate/burn/db/sortdb.rs:89:50: replace - with /
stackslib/src/chainstate/burn/db/sortdb.rs:91:42: replace * with +
stackslib/src/clarity_vm/database/marf.rs:511:9: replace WritableMarfStore<'a>::seal -> TrieHash with Default::default()
stackslib/src/chainstate/burn/db/sortdb.rs:776:9: replace <impl SortitionContext for SortitionHandleContext>::first_block_height -> u64 with 0
stackslib/src/chainstate/burn/db/sortdb.rs:776:9: replace <impl SortitionContext for SortitionHandleContext>::first_block_height -> u64 with 1
stackslib/src/chainstate/burn/db/sortdb.rs:782:9: replace <impl SortitionContext for SortitionDBTxContext>::first_block_height -> u64 with 0
stackslib/src/chainstate/burn/db/sortdb.rs:782:9: replace <impl SortitionContext for SortitionDBTxContext>::first_block_height -> u64 with 1
stackslib/src/chainstate/burn/db/sortdb.rs:92:45: replace + with *
stackslib/src/chainstate/burn/db/sortdb.rs:791:5: replace get_block_commit_by_txid -> Result<Option<LeaderBlockCommitOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:801:5: replace get_ancestor_sort_id -> Result<Option<SortitionId>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:814:5: replace get_ancestor_sort_id_tx -> Result<Option<SortitionId>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:825:5: replace get_adjusted_block_height -> Option<u64> with None
stackslib/src/chainstate/burn/db/sortdb.rs:825:5: replace get_adjusted_block_height -> Option<u64> with Some(0)
stackslib/src/chainstate/burn/db/sortdb.rs:825:5: replace get_adjusted_block_height -> Option<u64> with Some(1)
stackslib/src/chainstate/burn/db/sortdb.rs:837:9: replace db_keys::pox_anchor_to_prepare_end -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:837:9: replace db_keys::pox_anchor_to_prepare_end -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:841:9: replace db_keys::pox_last_anchor -> &'static str with "xyzzy"
stackslib/src/chainstate/burn/db/sortdb.rs:91:42: replace * with /
stackslib/src/chainstate/burn/db/sortdb.rs:849:9: replace db_keys::pox_last_selected_anchor -> &'static str with ""
stackslib/src/clarity_vm/database/marf.rs:573:9: replace <impl ClarityBackingStore for WritableMarfStore<'a>>::get_with_proof -> Option<(String, Vec<u8>)> with Some(("xyzzy".into(), vec![1]))
stackslib/src/chainstate/burn/db/sortdb.rs:92:40: replace * with +
stackslib/src/chainstate/burn/db/sortdb.rs:845:9: replace db_keys::pox_last_anchor_txid -> &'static str with ""
stackslib/src/chainstate/burn/db/sortdb.rs:861:9: replace db_keys::pox_reward_cycle_unlocks -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:861:9: replace db_keys::pox_reward_cycle_unlocks -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:869:9: replace db_keys::pox_reward_set_entry -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:869:9: replace db_keys::pox_reward_set_entry -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:865:9: replace db_keys::pox_reward_set_size -> &'static str with ""
stackslib/src/chainstate/burn/db/sortdb.rs:873:9: replace db_keys::pox_reward_set_payouts_key -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:845:9: replace db_keys::pox_last_anchor_txid -> &'static str with "xyzzy"
stackslib/src/chainstate/burn/db/sortdb.rs:877:9: replace db_keys::pox_reward_set_payouts_value -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:881:9: replace db_keys::pox_reward_set_payouts_decode -> (Vec<PoxAddress>, u128) with (vec![], 0)
stackslib/src/chainstate/burn/db/sortdb.rs:887:9: replace db_keys::pox_identifier -> &'static str with "xyzzy"
stackslib/src/chainstate/burn/db/sortdb.rs:891:9: replace db_keys::initial_mining_bonus_remaining -> &'static str with ""
stackslib/src/chainstate/burn/db/sortdb.rs:899:9: replace db_keys::sortition_id_for_bhh -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:899:9: replace db_keys::sortition_id_for_bhh -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:902:9: replace db_keys::vrf_key_status -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:902:9: replace db_keys::vrf_key_status -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:905:9: replace db_keys::stacks_block_present -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:905:9: replace db_keys::stacks_block_present -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:908:9: replace db_keys::last_sortition -> &'static str with ""
stackslib/src/chainstate/burn/db/sortdb.rs:913:9: replace db_keys::stacks_block_index -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:913:9: replace db_keys::stacks_block_index -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:918:9: replace db_keys::stacks_block_index_value -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:918:9: replace db_keys::stacks_block_index_value -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:895:9: replace db_keys::initial_mining_bonus_per_block -> &'static str with ""
stackslib/src/chainstate/burn/db/sortdb.rs:928:9: replace db_keys::stacks_block_max_arrival_index_value -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:928:9: replace db_keys::stacks_block_max_arrival_index_value -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:932:9: replace db_keys::reward_set_size_to_string -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:932:9: replace db_keys::reward_set_size_to_string -> String with "xyzzy".into()
stackslib/src/chainstate/burn/db/sortdb.rs:923:9: replace db_keys::stacks_block_max_arrival_index -> String with String::new()
stackslib/src/chainstate/burn/db/sortdb.rs:940:9: replace db_keys::reward_set_size_from_string -> u16 with 1
stackslib/src/chainstate/burn/db/sortdb.rs:969:9: replace SortitionHandle::descended_from -> Result<bool, db_error> with Ok(true)
stackslib/src/chainstate/burn/db/sortdb.rs:1064:9: replace SortitionHandleTx<'a>::get_block_snapshot -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:969:9: replace SortitionHandle::descended_from -> Result<bool, db_error> with Ok(false)
stackslib/src/chainstate/burn/db/sortdb.rs:940:9: replace db_keys::reward_set_size_from_string -> u16 with 0
stackslib/src/chainstate/burn/db/sortdb.rs:1083:9: replace SortitionHandleTx<'a>::get_leader_key_at -> Result<Option<LeaderKeyRegisterOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1142:9: replace SortitionHandleTx<'a>::get_block_commit -> Result<Option<LeaderBlockCommitOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1115:9: replace SortitionHandleTx<'a>::get_consumed_leader_keys -> Result<Vec<LeaderKeyRegisterOp>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:1149:9: replace SortitionHandleTx<'a>::get_consensus_at -> Result<Option<ConsensusHash>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1164:9: replace SortitionHandleTx<'a>::expects_stacks_block_in_fork -> Result<bool, db_error> with Ok(false)
stackslib/src/chainstate/burn/db/sortdb.rs:1164:9: replace SortitionHandleTx<'a>::expects_stacks_block_in_fork -> Result<bool, db_error> with Ok(true)
stackslib/src/chainstate/burn/db/sortdb.rs:1255:9: replace SortitionHandleTx<'a>::get_block_commit_parent -> Result<Option<LeaderBlockCommitOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1267:9: replace SortitionHandleTx<'a>::has_VRF_public_key -> Result<bool, db_error> with Ok(true)
stackslib/src/chainstate/burn/db/sortdb.rs:1222:9: replace SortitionHandleTx<'a>::is_leader_key_consumed -> Result<bool, db_error> with Ok(true)
stackslib/src/chainstate/burn/db/sortdb.rs:1267:9: replace SortitionHandleTx<'a>::has_VRF_public_key -> Result<bool, db_error> with Ok(false)
stackslib/src/chainstate/burn/db/sortdb.rs:1282:9: replace SortitionHandleTx<'a>::check_fresh_consensus_hash -> Result<bool, db_error> with Ok(true)
stackslib/src/chainstate/burn/db/sortdb.rs:1282:9: replace SortitionHandleTx<'a>::check_fresh_consensus_hash -> Result<bool, db_error> with Ok(false)
stackslib/src/chainstate/burn/db/sortdb.rs:1325:9: replace SortitionHandleTx<'a>::is_fresh_consensus_hash -> Result<bool, db_error> with Ok(true)
stackslib/src/chainstate/burn/db/sortdb.rs:1325:9: replace SortitionHandleTx<'a>::is_fresh_consensus_hash -> Result<bool, db_error> with Ok(false)
stackslib/src/chainstate/burn/db/sortdb.rs:1348:9: replace <impl SortitionHandle for SortitionHandleTx<'_>>::get_block_snapshot_by_height -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1337:9: replace SortitionHandleTx<'a>::is_fresh_consensus_hash_check_19b -> Result<bool, db_error> with Ok(true)
stackslib/src/chainstate/burn/db/sortdb.rs:1337:9: replace SortitionHandleTx<'a>::is_fresh_consensus_hash_check_19b -> Result<bool, db_error> with Ok(false)
stackslib/src/chainstate/burn/db/sortdb.rs:1363:9: replace <impl SortitionHandle for SortitionHandleConn<'_>>::get_block_snapshot_by_height -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1381:9: replace SortitionHandleTx<'a>::set_stacks_block_accepted -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:1412:9: replace SortitionHandleTx<'a>::pick_recipients -> Result<Option<RewardSetInfo>, BurnchainError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1508:9: replace SortitionHandleTx<'a>::get_reward_set_payouts_at -> Result<(Vec<PoxAddress>, u128), db_error> with Ok((vec![], 0))
stackslib/src/chainstate/burn/db/sortdb.rs:1518:9: replace SortitionHandleTx<'a>::get_reward_set_size_at -> Result<u16, db_error> with Ok(1)
stackslib/src/chainstate/burn/db/sortdb.rs:1518:9: replace SortitionHandleTx<'a>::get_reward_set_size_at -> Result<u16, db_error> with Ok(0)
stackslib/src/chainstate/burn/db/sortdb.rs:1545:9: replace SortitionHandleTx<'a>::get_reward_set_size -> Result<u16, db_error> with Ok(1)
stackslib/src/chainstate/burn/db/sortdb.rs:1549:9: replace SortitionHandleTx<'a>::get_last_anchor_block_hash -> Result<Option<BlockHeaderHash>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1545:9: replace SortitionHandleTx<'a>::get_reward_set_size -> Result<u16, db_error> with Ok(0)
stackslib/src/chainstate/burn/db/sortdb.rs:1609:9: replace SortitionHandleTx<'a>::set_stacks_block_accepted_at_tip -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:1557:9: replace SortitionHandleTx<'a>::get_last_anchor_block_txid -> Result<Option<Txid>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1675:9: replace SortitionHandleConn<'a>::get_last_anchor_block_hash -> Result<Option<BlockHeaderHash>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1666:9: replace SortitionHandleConn<'a>::get_reward_set_size_at -> Result<u16, db_error> with Ok(0)
stackslib/src/chainstate/burn/db/sortdb.rs:1719:9: replace SortitionHandleConn<'a>::get_reward_cycle_unlocks -> Result<Option<PoxStartCycleInfo>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1752:9: replace SortitionHandleConn<'a>::get_tip_indexed -> Result<Option<String>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1752:9: replace SortitionHandleConn<'a>::get_tip_indexed -> Result<Option<String>, db_error> with Ok(Some(String::new()))
stackslib/src/chainstate/burn/db/sortdb.rs:1752:9: replace SortitionHandleConn<'a>::get_tip_indexed -> Result<Option<String>, db_error> with Ok(Some("xyzzy".into()))
stackslib/src/chainstate/burn/db/sortdb.rs:1759:9: replace SortitionHandleConn<'a>::get_sortition_id_for_bhh -> Result<Option<SortitionId>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1774:9: replace SortitionHandleConn<'a>::get_block_snapshot -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1793:9: replace SortitionHandleConn<'a>::get_consensus_at -> Result<Option<ConsensusHash>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1805:9: replace SortitionHandleConn<'a>::get_block_snapshot_by_height -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1878:9: replace SortitionHandleConn<'a>::get_block_snapshot_of_parent_stacks_block -> Result<Option<(LeaderBlockCommitOp, BlockSnapshot)>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1700:9: replace SortitionHandleConn<'a>::get_last_selected_anchor_block_hash -> Result<Option<BlockHeaderHash>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1977:9: replace SortitionHandleConn<'a>::get_leader_key_at -> Result<Option<LeaderKeyRegisterOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:1990:9: replace SortitionHandleConn<'a>::get_block_commit_parent -> Result<Option<LeaderBlockCommitOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2001:9: replace SortitionHandleConn<'a>::get_block_commit_by_txid -> Result<Option<LeaderBlockCommitOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2011:9: replace SortitionHandleConn<'a>::get_sortition_winners_in_fork -> Result<Vec<(SortitionId, Txid, u64)>, BurnchainError> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:2045:9: replace SortitionHandleConn<'a>::get_heights_for_prepare_phase_end_block -> Result<Option<(u32, u32)>, CoordinatorError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2045:9: replace SortitionHandleConn<'a>::get_heights_for_prepare_phase_end_block -> Result<Option<(u32, u32)>, CoordinatorError> with Ok(Some((0, 0)))
stackslib/src/chainstate/burn/db/sortdb.rs:2045:9: replace SortitionHandleConn<'a>::get_heights_for_prepare_phase_end_block -> Result<Option<(u32, u32)>, CoordinatorError> with Ok(Some((0, 1)))
stackslib/src/chainstate/burn/db/sortdb.rs:2045:9: replace SortitionHandleConn<'a>::get_heights_for_prepare_phase_end_block -> Result<Option<(u32, u32)>, CoordinatorError> with Ok(Some((1, 1)))
stackslib/src/chainstate/burn/db/sortdb.rs:2045:9: replace SortitionHandleConn<'a>::get_heights_for_prepare_phase_end_block -> Result<Option<(u32, u32)>, CoordinatorError> with Ok(Some((1, 0)))
stackslib/src/chainstate/burn/db/sortdb.rs:2101:9: replace SortitionHandleConn<'a>::get_chosen_pox_anchor -> Result<Option<(ConsensusHash, BlockHeaderHash, Txid)>, CoordinatorError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2122:9: replace SortitionHandleConn<'a>::get_chosen_pox_anchor_v210 -> Result<Option<(ConsensusHash, BlockHeaderHash, Txid)>, CoordinatorError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2212:9: replace SortitionHandleConn<'a>::get_chosen_pox_anchor_v205 -> Result<Option<(ConsensusHash, BlockHeaderHash, Txid)>, CoordinatorError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2689:9: replace SortitionDB::validate_and_insert_epochs -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:2767:9: replace SortitionDB::get_block_commit -> Result<Option<LeaderBlockCommitOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2629:9: replace SortitionDB::instantiate -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:1508:9: replace SortitionHandleTx<'a>::get_reward_set_payouts_at -> Result<(Vec<PoxAddress>, u128), db_error> with Ok((vec![], 1))
stackslib/src/chainstate/burn/db/sortdb.rs:2781:9: replace SortitionDB::get_block_commit_parent_sortition_id -> Result<Option<SortitionId>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2788:9: replace SortitionDB::get_all_snapshots -> Result<Vec<BlockSnapshot>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:2803:9: replace SortitionDB::get_consensus_hash_height -> Result<Option<u64>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2822:9: replace SortitionDB::get_db_version_from_path -> Result<Option<String>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2822:9: replace SortitionDB::get_db_version_from_path -> Result<Option<String>, db_error> with Ok(Some(String::new()))
stackslib/src/chainstate/burn/db/sortdb.rs:1586:9: replace SortitionHandleTx<'a>::get_last_selected_anchor_block_txid -> Result<Option<Txid>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2822:9: replace SortitionDB::get_db_version_from_path -> Result<Option<String>, db_error> with Ok(Some("xyzzy".into()))
stackslib/src/chainstate/burn/db/sortdb.rs:2797:9: replace SortitionDB::get_all_snapshots_for_burn_block -> Result<Vec<BlockSnapshot>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:2847:9: replace SortitionDB::is_db_version_supported_in_epoch -> bool with false
stackslib/src/chainstate/burn/db/sortdb.rs:2803:9: replace SortitionDB::get_consensus_hash_height -> Result<Option<u64>, db_error> with Ok(Some(0))
stackslib/src/chainstate/burn/db/sortdb.rs:2899:9: replace SortitionDB::get_schema_version -> Result<Option<String>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:2899:9: replace SortitionDB::get_schema_version -> Result<Option<String>, db_error> with Ok(Some(String::new()))
stackslib/src/chainstate/burn/db/sortdb.rs:2899:9: replace SortitionDB::get_schema_version -> Result<Option<String>, db_error> with Ok(Some("xyzzy".into()))
stackslib/src/chainstate/burn/db/sortdb.rs:2910:9: replace SortitionDB::apply_schema_2 -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:2925:9: replace SortitionDB::apply_schema_3 -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:2936:9: replace SortitionDB::apply_schema_4 -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:3011:9: replace SortitionDB::check_schema_version_or_error -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:2834:9: replace SortitionDB::get_highest_block_height_from_path -> Result<u64, db_error> with Ok(0)
stackslib/src/chainstate/burn/db/sortdb.rs:3031:9: replace SortitionDB::check_schema_version_and_update -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:2834:9: replace SortitionDB::get_highest_block_height_from_path -> Result<u64, db_error> with Ok(1)
stackslib/src/chainstate/burn/db/sortdb.rs:3121:9: replace SortitionDB::override_ast_rule_height -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:3208:9: replace SortitionDBConn<'a>::get_stacks_header_hashes -> Result<Vec<(ConsensusHash, Option<BlockHeaderHash>)>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:2847:9: replace SortitionDB::is_db_version_supported_in_epoch -> bool with true
stackslib/src/chainstate/burn/db/sortdb.rs:3293:9: replace SortitionDBConn<'a>::find_parent_snapshot_for_stacks_block -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:3353:9: replace SortitionDBConn<'a>::get_reward_set_payouts_at -> Result<(Vec<PoxAddress>, u128), db_error> with Ok((vec![], 1))
stackslib/src/chainstate/burn/db/sortdb.rs:3353:9: replace SortitionDBConn<'a>::get_reward_set_payouts_at -> Result<(Vec<PoxAddress>, u128), db_error> with Ok((vec![], 0))
stackslib/src/chainstate/burn/db/sortdb.rs:3371:9: replace SortitionDB::get_sortition_id -> Result<Option<SortitionId>, BurnchainError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:3381:9: replace SortitionDB::is_sortition_processed -> Result<Option<SortitionId>, BurnchainError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:3389:9: replace SortitionDB::get_block_height -> Result<Option<u32>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:3389:9: replace SortitionDB::get_block_height -> Result<Option<u32>, db_error> with Ok(Some(0))
stackslib/src/chainstate/burn/db/sortdb.rs:3389:9: replace SortitionDB::get_block_height -> Result<Option<u32>, db_error> with Ok(Some(1))
stackslib/src/chainstate/burn/db/sortdb.rs:3402:9: replace SortitionDB::is_stacks_block_pox_anchor -> Result<Option<BlockHeaderHash>, BurnchainError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:3411:9: replace SortitionDB::parse_last_anchor_block_hash -> Option<BlockHeaderHash> with None
stackslib/src/chainstate/burn/db/sortdb.rs:3099:9: replace SortitionDB::add_indexes -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:3076:9: replace SortitionDB::migrate_if_exists -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:3583:9: replace SortitionDB::get_sortition_result -> Result<Option<(BlockSnapshot, BurnchainStateTransitionOps)>, BurnchainError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:3485:9: replace SortitionDB::invalidate_descendants_with_closures -> Result<(), BurnchainError> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:3422:9: replace SortitionDB::parse_last_anchor_block_txid -> Option<Txid> with None
stackslib/src/chainstate/burn/db/sortdb.rs:3547:9: replace SortitionDB::find_snapshots_with_dirty_canonical_block_pointers -> Result<Vec<SortitionId>, Error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:3537:9: replace SortitionDB::invalidate_descendants_of -> Result<(), BurnchainError> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:3558:9: replace SortitionDB::get_prepare_end_for -> Result<Option<BlockSnapshot>, BurnchainError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:3764:9: replace SortitionDB::get_next_block_recipients -> Result<Option<RewardSetInfo>, BurnchainError> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:3797:9: replace SortitionDB::is_stacks_block_in_sortition_set -> Result<bool, BurnchainError> with Ok(false)
stackslib/src/chainstate/burn/db/sortdb.rs:3797:9: replace SortitionDB::is_stacks_block_in_sortition_set -> Result<bool, BurnchainError> with Ok(true)
stackslib/src/chainstate/burn/db/sortdb.rs:3982:9: replace SortitionDB::get_stack_stx_ops -> Result<Vec<StackStxOp>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:3996:9: replace SortitionDB::get_delegate_stx_ops -> Result<Vec<DelegateStxOp>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:4010:9: replace SortitionDB::get_transfer_stx_ops -> Result<Vec<TransferStxOp>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:4022:9: replace SortitionDB::get_parent_burnchain_header_hash -> Result<Option<BurnchainHeaderHash>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4063:9: replace SortitionDB::get_ancestor_burnchain_header_hashes -> Result<Vec<BurnchainHeaderHash>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:4104:9: replace SortitionDB::get_max_arrival_index -> Result<u64, db_error> with Ok(0)
stackslib/src/chainstate/burn/db/sortdb.rs:4104:9: replace SortitionDB::get_max_arrival_index -> Result<u64, db_error> with Ok(1)
stackslib/src/chainstate/burn/db/sortdb.rs:4122:9: replace SortitionDB::get_snapshot_by_arrival_index -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4150:9: replace SortitionDB::get_block_snapshot_consensus -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4202:9: replace SortitionDB::is_pox_active -> Result<bool, db_error> with Ok(false)
stackslib/src/chainstate/burn/db/sortdb.rs:4250:9: replace SortitionDB::get_block_burn_amount -> Result<u64, db_error> with Ok(0)
stackslib/src/chainstate/burn/db/sortdb.rs:4166:9: replace SortitionDB::get_block_snapshot -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4250:9: replace SortitionDB::get_block_burn_amount -> Result<u64, db_error> with Ok(1)
stackslib/src/chainstate/burn/db/sortdb.rs:4274:9: replace SortitionDB::get_user_burns_by_block -> Result<Vec<UserBurnSupportOp>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:4286:9: replace SortitionDB::get_block_commits_by_block -> Result<Vec<LeaderBlockCommitOp>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:4298:9: replace SortitionDB::get_missed_commits_by_intended -> Result<Vec<MissedBlockCommit>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:4322:9: replace SortitionDB::get_block_winning_vtxindex -> Result<Option<u16>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4322:9: replace SortitionDB::get_block_winning_vtxindex -> Result<Option<u16>, db_error> with Ok(Some(0))
stackslib/src/chainstate/burn/db/sortdb.rs:4340:9: replace SortitionDB::get_ancestor_snapshot -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4322:9: replace SortitionDB::get_block_winning_vtxindex -> Result<Option<u16>, db_error> with Ok(Some(1))
stackslib/src/chainstate/burn/db/sortdb.rs:4363:9: replace SortitionDB::get_ancestor_snapshot_tx -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4387:9: replace SortitionDB::get_block_commit_parent -> Result<Option<LeaderBlockCommitOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4404:9: replace SortitionDB::get_block_commit_of_sortition -> Result<Option<LeaderBlockCommitOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4426:9: replace SortitionDB::get_leader_key_at -> Result<Option<LeaderKeyRegisterOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4455:9: replace SortitionDB::get_block_commit_for_stacks_block -> Result<Option<LeaderBlockCommitOp>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4484:9: replace SortitionDB::get_block_snapshot_for_winning_stacks_block -> Result<Option<BlockSnapshot>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4499:9: replace SortitionDB::merge_block_header_cache -> () with ()
stackslib/src/chainstate/burn/db/sortdb.rs:4568:9: replace SortitionDB::get_stacks_epoch -> Result<Option<StacksEpoch>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4600:9: replace SortitionDB::get_stacks_epoch_by_epoch_id -> Result<Option<StacksEpoch>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4592:9: replace SortitionDB::get_stacks_epochs -> Result<Vec<StacksEpoch>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:4607:9: replace SortitionDB::get_last_epoch_2_05_reward_cycle -> Result<u64, db_error> with Ok(0)
stackslib/src/chainstate/burn/db/sortdb.rs:3807:9: replace SortitionDB::latest_stacks_blocks_processed -> Result<u64, BurnchainError> with Ok(0)
stackslib/src/chainstate/burn/db/sortdb.rs:4583:9: replace SortitionDB::get_sortition_ids_at_height -> Result<Vec<SortitionId>, db_error> with Ok(vec![])
stackslib/src/chainstate/burn/db/sortdb.rs:4695:9: replace SortitionHandleTx<'a>::append_chain_tip_snapshot -> Result<TrieHash, db_error> with Ok(Default::default())
stackslib/src/chainstate/burn/db/sortdb.rs:4742:9: replace SortitionHandleTx<'a>::get_initial_mining_bonus_remaining -> Result<u128, db_error> with Ok(0)
stackslib/src/chainstate/burn/db/sortdb.rs:4742:9: replace SortitionHandleTx<'a>::get_initial_mining_bonus_remaining -> Result<u128, db_error> with Ok(1)
stackslib/src/chainstate/burn/db/sortdb.rs:4751:9: replace SortitionHandleTx<'a>::get_initial_mining_bonus_per_block -> Result<Option<u128>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:4751:9: replace SortitionHandleTx<'a>::get_initial_mining_bonus_per_block -> Result<Option<u128>, db_error> with Ok(Some(1))
stackslib/src/chainstate/burn/db/sortdb.rs:4751:9: replace SortitionHandleTx<'a>::get_initial_mining_bonus_per_block -> Result<Option<u128>, db_error> with Ok(Some(0))
stackslib/src/chainstate/burn/db/sortdb.rs:4785:9: replace SortitionHandleTx<'a>::store_transition_ops -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:4762:9: replace SortitionHandleTx<'a>::store_burn_distribution with ()
stackslib/src/chainstate/burn/db/sortdb.rs:4811:9: replace SortitionHandleTx<'a>::store_burnchain_transaction -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:4875:9: replace SortitionHandleTx<'a>::insert_leader_key -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:4913:9: replace SortitionHandleTx<'a>::insert_delegate_stx -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:4895:9: replace SortitionHandleTx<'a>::insert_stack_stx -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:4957:9: replace SortitionHandleTx<'a>::insert_block_commit -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:4932:9: replace SortitionHandleTx<'a>::insert_transfer_stx -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:5037:9: replace SortitionHandleTx<'a>::insert_user_burn -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:5066:9: replace SortitionHandleTx<'a>::insert_missed_block_commit -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:5092:9: replace SortitionHandleTx<'a>::insert_block_snapshot -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:5160:9: replace SortitionHandleTx<'a>::get_num_pox_payouts -> usize with 0
stackslib/src/chainstate/burn/db/sortdb.rs:4134:9: replace SortitionDB::get_sortition_id_by_consensus -> Result<Option<SortitionId>, db_error> with Ok(None)
stackslib/src/chainstate/burn/db/sortdb.rs:5160:9: replace SortitionHandleTx<'a>::get_num_pox_payouts -> usize with 1
stackslib/src/chainstate/burn/db/sortdb.rs:5180:9: replace SortitionHandleTx<'a>::get_pox_payout_per_output -> u128 with 0
stackslib/src/chainstate/burn/db/sortdb.rs:5219:9: replace SortitionHandleTx<'a>::index_add_fork_info -> Result<(TrieHash, (Vec<PoxAddress>, u128)), db_error> with Ok((Default::default(), (vec![], 0)))
stackslib/src/chainstate/burn/db/sortdb.rs:5219:9: replace SortitionHandleTx<'a>::index_add_fork_info -> Result<(TrieHash, (Vec<PoxAddress>, u128)), db_error> with Ok((Default::default(), (vec![], 1)))
stackslib/src/chainstate/burn/db/sortdb.rs:5540:9: replace SortitionHandleTx<'a>::break_canonical_stacks_tip_tie -> Option<usize> with Some(0)
stackslib/src/chainstate/burn/db/sortdb.rs:4202:9: replace SortitionDB::is_pox_active -> Result<bool, db_error> with Ok(true)
stackslib/src/chainstate/burn/db/sortdb.rs:5540:9: replace SortitionHandleTx<'a>::break_canonical_stacks_tip_tie -> Option<usize> with None
stackslib/src/chainstate/burn/db/sortdb.rs:5540:9: replace SortitionHandleTx<'a>::break_canonical_stacks_tip_tie -> Option<usize> with Some(1)
stackslib/src/chainstate/burn/db/sortdb.rs:5767:9: replace SortitionHandleTx<'a>::process_new_block_arrivals -> Result<(Vec<String>, Vec<String>), db_error> with Ok((vec![], vec![String::new()]))
stackslib/src/chainstate/burn/db/sortdb.rs:5741:9: replace SortitionHandleTx<'a>::update_new_block_arrivals -> Result<(), db_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:5767:9: replace SortitionHandleTx<'a>::process_new_block_arrivals -> Result<(Vec<String>, Vec<String>), db_error> with Ok((vec![], vec![]))
stackslib/src/chainstate/burn/db/sortdb.rs:5180:9: replace SortitionHandleTx<'a>::get_pox_payout_per_output -> u128 with 1
stackslib/src/chainstate/burn/db/sortdb.rs:5767:9: replace SortitionHandleTx<'a>::process_new_block_arrivals -> Result<(Vec<String>, Vec<String>), db_error> with Ok((vec![], vec!["xyzzy".into()]))
stackslib/src/chainstate/burn/db/sortdb.rs:5767:9: replace SortitionHandleTx<'a>::process_new_block_arrivals -> Result<(Vec<String>, Vec<String>), db_error> with Ok((vec![String::new()], vec![]))
stackslib/src/chainstate/burn/db/sortdb.rs:5767:9: replace SortitionHandleTx<'a>::process_new_block_arrivals -> Result<(Vec<String>, Vec<String>), db_error> with Ok((vec![String::new()], vec![String::new()]))
stackslib/src/chainstate/burn/db/sortdb.rs:5767:9: replace SortitionHandleTx<'a>::process_new_block_arrivals -> Result<(Vec<String>, Vec<String>), db_error> with Ok((vec!["xyzzy".into()], vec![]))
stackslib/src/chainstate/burn/db/sortdb.rs:5767:9: replace SortitionHandleTx<'a>::process_new_block_arrivals -> Result<(Vec<String>, Vec<String>), db_error> with Ok((vec![String::new()], vec!["xyzzy".into()]))
stackslib/src/chainstate/burn/db/sortdb.rs:5767:9: replace SortitionHandleTx<'a>::process_new_block_arrivals -> Result<(Vec<String>, Vec<String>), db_error> with Ok((vec!["xyzzy".into()], vec![String::new()]))
stackslib/src/chainstate/burn/db/sortdb.rs:5767:9: replace SortitionHandleTx<'a>::process_new_block_arrivals -> Result<(Vec<String>, Vec<String>), db_error> with Ok((vec!["xyzzy".into()], vec!["xyzzy".into()]))
stackslib/src/chainstate/burn/operations/delegate_stx.rs:55:9: replace DelegateStxOp::parse_data -> Option<ParsedData> with None
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:148:9: replace LeaderBlockCommitOp::expected_chained_utxo -> u32 with 1
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:148:9: replace LeaderBlockCommitOp::expected_chained_utxo -> u32 with 0
stackslib/src/chainstate/burn/operations/delegate_stx.rs:228:9: replace <impl StacksMessageCodec for DelegateStxOp>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/burn/operations/delegate_stx.rs:208:9: replace DelegateStxOp::check -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:157:9: replace LeaderBlockCommitOp::burn_block_mined_at -> u64 with 0
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:157:9: replace LeaderBlockCommitOp::burn_block_mined_at -> u64 with 1
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:175:9: replace LeaderBlockCommitOp::parse_data -> Option<ParsedData> with None
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:225:9: replace LeaderBlockCommitOp::is_parent_genesis -> bool with true
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:431:9: replace LeaderBlockCommitOp::spent_output -> u32 with 0
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:431:9: replace LeaderBlockCommitOp::spent_output -> u32 with 1
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:419:9: replace LeaderBlockCommitOp::all_outputs_burn -> bool with false
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:435:9: replace LeaderBlockCommitOp::is_first_block -> bool with false
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:435:9: replace LeaderBlockCommitOp::is_first_block -> bool with true
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:419:9: replace LeaderBlockCommitOp::all_outputs_burn -> bool with true
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:488:9: replace MissedBlockCommit::spent_output -> u32 with 0
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:488:9: replace MissedBlockCommit::spent_output -> u32 with 1
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:449:9: replace <impl StacksMessageCodec for LeaderBlockCommitOp>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:499:9: replace RewardSetInfo::from_missed_commit -> Result<Option<RewardSetInfo>, op_error> with Ok(None)
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:687:9: replace LeaderBlockCommitOp::check_single_burn_output -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:549:9: replace LeaderBlockCommitOp::check_pox -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:709:9: replace LeaderBlockCommitOp::check_epoch_commit_marker -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:731:9: replace LeaderBlockCommitOp::check_epoch_commit -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:703:9: replace LeaderBlockCommitOp::check_prepare_commit_burn -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:839:9: replace LeaderBlockCommitOp::check_common -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/burn/operations/leader_key_register.rs:85:9: replace LeaderKeyRegisterOp::parse_data -> Option<ParsedData> with None
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:952:9: replace LeaderBlockCommitOp::check -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/burn/operations/leader_key_register.rs:176:9: replace <impl StacksMessageCodec for LeaderKeyRegisterOp>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/burn/operations/leader_key_register.rs:213:9: replace LeaderKeyRegisterOp::check -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/burn/operations/stack_stx.rs:183:9: replace StackStxOp::parse_data -> Option<ParsedData> with None
stackslib/src/chainstate/burn/operations/transfer_stx.rs:80:9: replace TransferStxOp::parse_data -> Option<ParsedData> with None
stackslib/src/chainstate/burn/operations/stack_stx.rs:313:9: replace <impl StacksMessageCodec for PreStxOp>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/burn/db/sortdb.rs:4607:9: replace SortitionDB::get_last_epoch_2_05_reward_cycle -> Result<u64, db_error> with Ok(1)
stackslib/src/chainstate/burn/operations/user_burn_support.rs:60:9: replace UserBurnSupportOp::parse_data -> Option<ParsedData> with None
stackslib/src/chainstate/burn/operations/stack_stx.rs:331:9: replace <impl StacksMessageCodec for StackStxOp>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/burn/operations/user_burn_support.rs:204:9: replace <impl StacksMessageCodec for UserBurnSupportOp>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/burn/operations/user_burn_support.rs:231:9: replace UserBurnSupportOp::check -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/burn/operations/transfer_stx.rs:211:9: replace <impl StacksMessageCodec for TransferStxOp>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/boot/docs.rs:143:5: replace make_json_boot_contracts_reference -> String with String::new()
stackslib/src/chainstate/stacks/db/accounts.rs:156:9: replace MinerReward::total -> u128 with 1
stackslib/src/chainstate/stacks/db/accounts.rs:163:9: replace MinerReward::is_child -> bool with true
stackslib/src/chainstate/stacks/db/accounts.rs:163:9: replace MinerReward::is_child -> bool with false
stackslib/src/chainstate/stacks/db/accounts.rs:167:9: replace MinerReward::is_parent -> bool with true
stackslib/src/chainstate/stacks/db/accounts.rs:167:9: replace MinerReward::is_parent -> bool with false
stackslib/src/chainstate/stacks/boot/docs.rs:9:5: replace make_contract_support_docs -> HashMap<&'static str, ContractSupportDocs> with HashMap::new()
stackslib/src/chainstate/stacks/db/accounts.rs:156:9: replace MinerReward::total -> u128 with 0
stackslib/src/chainstate/stacks/db/accounts.rs:205:9: replace MinerPaymentSchedule::streamed_tx_fees_confirmed -> u128 with 0
stackslib/src/chainstate/burn/operations/leader_block_commit.rs:518:9: replace RewardSetInfo::into_commit_outs -> Vec<PoxAddress> with vec![]
stackslib/src/chainstate/stacks/db/accounts.rs:171:9: replace MinerReward::try_add_parent -> Option<MinerReward> with None
stackslib/src/chainstate/stacks/db/accounts.rs:211:9: replace MinerPaymentSchedule::streamed_tx_fees_produced -> u128 with 0
stackslib/src/chainstate/burn/operations/transfer_stx.rs:230:9: replace TransferStxOp::check -> Result<(), op_error> with Ok(())
stackslib/src/chainstate/stacks/db/accounts.rs:205:9: replace MinerPaymentSchedule::streamed_tx_fees_confirmed -> u128 with 1
stackslib/src/chainstate/stacks/db/accounts.rs:211:9: replace MinerPaymentSchedule::streamed_tx_fees_produced -> u128 with 1
stackslib/src/chainstate/stacks/db/accounts.rs:273:9: replace StacksChainState::get_nonce -> u64 with 0
stackslib/src/chainstate/stacks/db/accounts.rs:282:9: replace StacksChainState::get_account_ft -> Result<u128, Error> with Ok(0)
stackslib/src/chainstate/stacks/db/accounts.rs:317:9: replace StacksChainState::account_debit with ()
stackslib/src/chainstate/stacks/db/accounts.rs:282:9: replace StacksChainState::get_account_ft -> Result<u128, Error> with Ok(1)
stackslib/src/chainstate/stacks/db/accounts.rs:366:9: replace StacksChainState::account_genesis_credit with ()
stackslib/src/chainstate/stacks/db/accounts.rs:382:9: replace StacksChainState::update_account_nonce with ()
stackslib/src/chainstate/stacks/db/accounts.rs:398:9: replace StacksChainState::insert_miner_payment_schedule -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/accounts.rs:625:9: replace StacksChainState::insert_matured_child_user_reward -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/accounts.rs:594:9: replace StacksChainState::insert_matured_child_miner_reward -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/accounts.rs:646:9: replace StacksChainState::inner_get_matured_miner_payments -> Result<Vec<MinerReward>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/accounts.rs:346:9: replace StacksChainState::account_credit with ()
stackslib/src/chainstate/stacks/db/accounts.rs:659:9: replace StacksChainState::get_matured_miner_payment -> Result<Option<MinerReward>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/accounts.rs:725:9: replace StacksChainState::get_scheduled_block_rewards_in_fork_at_height -> Result<Vec<MinerPaymentSchedule>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/accounts.rs:710:9: replace StacksChainState::get_scheduled_block_rewards_at_block -> Result<Vec<MinerPaymentSchedule>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/accounts.rs:753:9: replace StacksChainState::get_scheduled_block_rewards -> Result<Vec<MinerPaymentSchedule>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/accounts.rs:798:9: replace StacksChainState::poison_microblock_commission -> u128 with 0
stackslib/src/chainstate/stacks/db/accounts.rs:273:9: replace StacksChainState::get_nonce -> u64 with 1
stackslib/src/chainstate/stacks/db/blocks.rs:187:9: replace <impl BlockEventDispatcher for DummyEventDispatcher>::announce_block with ()
stackslib/src/chainstate/stacks/db/accounts.rs:767:9: replace StacksChainState::get_miner_info -> Result<Option<MinerPaymentSchedule>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/accounts.rs:564:9: replace StacksChainState::insert_matured_parent_miner_reward -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/accounts.rs:696:9: replace StacksChainState::get_poison_microblock_report -> Result<Option<(StacksAddress, u16)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/accounts.rs:979:9: replace StacksChainState::find_mature_miner_rewards -> Result<Option<(MinerReward, Vec<MinerReward>, MinerReward, MinerRewardInfo)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:431:9: replace StacksChainState::get_index_block_pathbuf -> PathBuf with Default::default()
stackslib/src/chainstate/stacks/db/blocks.rs:446:9: replace StacksChainState::get_index_block_path -> Result<String, Error> with Ok(String::new())
stackslib/src/chainstate/stacks/db/blocks.rs:446:9: replace StacksChainState::get_index_block_path -> Result<String, Error> with Ok("xyzzy".into())
stackslib/src/chainstate/stacks/db/blocks.rs:461:9: replace StacksChainState::get_block_path -> Result<String, Error> with Ok(String::new())
stackslib/src/chainstate/stacks/db/blocks.rs:461:9: replace StacksChainState::get_block_path -> Result<String, Error> with Ok("xyzzy".into())
stackslib/src/chainstate/stacks/db/blocks.rs:471:9: replace StacksChainState::make_block_dir -> Result<String, Error> with Ok(String::new())
stackslib/src/chainstate/stacks/db/blocks.rs:471:9: replace StacksChainState::make_block_dir -> Result<String, Error> with Ok("xyzzy".into())
stackslib/src/chainstate/stacks/db/blocks.rs:496:9: replace StacksChainState::atomic_file_store -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:540:9: replace StacksChainState::get_file_size -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/db/accounts.rs:505:9: replace StacksChainState::inner_insert_matured_miner_reward -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:533:9: replace StacksChainState::atomic_file_write -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/accounts.rs:798:9: replace StacksChainState::poison_microblock_commission -> u128 with 1
stackslib/src/chainstate/stacks/db/blocks.rs:540:9: replace StacksChainState::get_file_size -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/db/blocks.rs:597:9: replace StacksChainState::has_valid_block_indexed -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:617:9: replace StacksChainState::has_stored_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:578:9: replace StacksChainState::has_block_indexed -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:653:9: replace StacksChainState::store_block -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:578:9: replace StacksChainState::has_block_indexed -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:617:9: replace StacksChainState::has_stored_block -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:799:9: replace StacksChainState::load_block_bytes -> Result<Option<Vec<u8>>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:685:9: replace StacksChainState::free_block -> () with ()
stackslib/src/chainstate/stacks/db/blocks.rs:799:9: replace StacksChainState::load_block_bytes -> Result<Option<Vec<u8>>, Error> with Ok(Some(vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:741:9: replace StacksChainState::free_block_state -> () with ()
stackslib/src/chainstate/stacks/db/blocks.rs:799:9: replace StacksChainState::load_block_bytes -> Result<Option<Vec<u8>>, Error> with Ok(Some(vec![0]))
stackslib/src/chainstate/stacks/db/blocks.rs:799:9: replace StacksChainState::load_block_bytes -> Result<Option<Vec<u8>>, Error> with Ok(Some(vec![1]))
stackslib/src/chainstate/stacks/db/blocks.rs:326:9: replace StagingBlock::is_first_mined -> bool with false
stackslib/src/chainstate/stacks/db/blocks.rs:849:9: replace StacksChainState::inner_load_block_header -> Result<Option<StacksBlockHeader>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:837:9: replace StacksChainState::load_block -> Result<Option<StacksBlock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:868:9: replace StacksChainState::load_block_header -> Result<Option<StacksBlockHeader>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:886:9: replace StacksChainState::empty_stream -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:906:9: replace StacksChainState::load_block_data_blobs -> Result<Vec<Vec<u8>>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/blocks.rs:906:9: replace StacksChainState::load_block_data_blobs -> Result<Vec<Vec<u8>>, Error> with Ok(vec![vec![]])
stackslib/src/chainstate/stacks/db/blocks.rs:906:9: replace StacksChainState::load_block_data_blobs -> Result<Vec<Vec<u8>>, Error> with Ok(vec![vec![0]])
stackslib/src/chainstate/stacks/db/blocks.rs:906:9: replace StacksChainState::load_block_data_blobs -> Result<Vec<Vec<u8>>, Error> with Ok(vec![vec![1]])
stackslib/src/chainstate/stacks/db/blocks.rs:210:9: replace MemPoolRejection::into_json -> serde_json::Value with Default::default()
stackslib/src/chainstate/stacks/db/blocks.rs:932:9: replace StacksChainState::inner_load_staging_block_bytes -> Result<Option<Vec<u8>>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:932:9: replace StacksChainState::inner_load_staging_block_bytes -> Result<Option<Vec<u8>>, Error> with Ok(Some(vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:880:9: replace StacksChainState::load_block_header_indexed -> Result<Option<StacksBlockHeader>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:932:9: replace StacksChainState::inner_load_staging_block_bytes -> Result<Option<Vec<u8>>, Error> with Ok(Some(vec![0]))
stackslib/src/chainstate/stacks/db/blocks.rs:932:9: replace StacksChainState::inner_load_staging_block_bytes -> Result<Option<Vec<u8>>, Error> with Ok(Some(vec![1]))
stackslib/src/chainstate/stacks/db/blocks.rs:957:9: replace StacksChainState::load_staging_microblock_bytes -> Result<Option<Vec<u8>>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:969:9: replace StacksChainState::has_blocks_with_microblock_pubkh -> bool with true
stackslib/src/chainstate/stacks/db/blocks.rs:957:9: replace StacksChainState::load_staging_microblock_bytes -> Result<Option<Vec<u8>>, Error> with Ok(Some(vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:957:9: replace StacksChainState::load_staging_microblock_bytes -> Result<Option<Vec<u8>>, Error> with Ok(Some(vec![0]))
stackslib/src/chainstate/stacks/db/blocks.rs:969:9: replace StacksChainState::has_blocks_with_microblock_pubkh -> bool with false
stackslib/src/chainstate/stacks/db/blocks.rs:957:9: replace StacksChainState::load_staging_microblock_bytes -> Result<Option<Vec<u8>>, Error> with Ok(Some(vec![1]))
stackslib/src/chainstate/stacks/db/blocks.rs:1132:9: replace StacksChainState::load_staging_microblock_info -> Result<Option<StagingMicroblock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:985:9: replace StacksChainState::load_staging_block -> Result<Option<StagingBlock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1024:9: replace StacksChainState::get_staging_block_parent_microblock_hash -> Result<Option<BlockHeaderHash>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1077:9: replace StacksChainState::load_staging_block_pubkey_hash -> Result<Option<Hash160>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1098:9: replace StacksChainState::load_block_pubkey_hash -> Result<Option<Hash160>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1145:9: replace StacksChainState::load_staging_microblock_info_indexed -> Result<Option<StagingMicroblock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1157:9: replace StacksChainState::load_staging_microblock -> Result<Option<StagingMicroblock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1168:9: replace StacksChainState::load_staging_microblock_indexed -> Result<Option<StagingMicroblock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1305:9: replace StacksChainState::load_processed_microblock_stream_fork -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1197:9: replace StacksChainState::inner_load_microblock_stream_fork -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1197:9: replace StacksChainState::inner_load_microblock_stream_fork -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(Some(vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:1289:9: replace StacksChainState::load_microblock_stream_fork -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1289:9: replace StacksChainState::load_microblock_stream_fork -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(Some(vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:1320:9: replace StacksChainState::load_descendant_staging_microblock_stream -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1305:9: replace StacksChainState::load_processed_microblock_stream_fork -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(Some(vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:1563:9: replace StacksChainState::store_staging_block -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:1681:9: replace StacksChainState::store_staging_microblock -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:1739:9: replace StacksChainState::store_staging_block_user_burn_supports -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:1762:9: replace StacksChainState::read_i64s -> Result<Vec<i64>, Error> with Ok(vec![0])
stackslib/src/chainstate/stacks/db/blocks.rs:1762:9: replace StacksChainState::read_i64s -> Result<Vec<i64>, Error> with Ok(vec![1])
stackslib/src/chainstate/stacks/db/blocks.rs:1320:9: replace StacksChainState::load_descendant_staging_microblock_stream -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(Some(vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:1762:9: replace StacksChainState::read_i64s -> Result<Vec<i64>, Error> with Ok(vec![-1])
stackslib/src/chainstate/stacks/db/blocks.rs:1789:9: replace StacksChainState::get_staging_block_status -> Result<Option<bool>, Error> with Ok(Some(true))
stackslib/src/chainstate/stacks/db/blocks.rs:1789:9: replace StacksChainState::get_staging_block_status -> Result<Option<bool>, Error> with Ok(Some(false))
stackslib/src/chainstate/stacks/db/blocks.rs:1340:9: replace StacksChainState::load_descendant_staging_microblock_stream_with_poison -> Result<Option<(Vec<StacksMicroblock>, Option<TransactionPayload>)>, Error> with Ok(Some((vec![], None)))
stackslib/src/chainstate/stacks/db/blocks.rs:1014:9: replace StacksChainState::load_staging_block_info -> Result<Option<StagingBlock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1340:9: replace StacksChainState::load_descendant_staging_microblock_stream_with_poison -> Result<Option<(Vec<StacksMicroblock>, Option<TransactionPayload>)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1762:9: replace StacksChainState::read_i64s -> Result<Vec<i64>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/blocks.rs:1822:9: replace StacksChainState::is_block_orphaned -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:1822:9: replace StacksChainState::is_block_orphaned -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:1789:9: replace StacksChainState::get_staging_block_status -> Result<Option<bool>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1846:9: replace StacksChainState::get_microblock_status -> Result<Option<bool>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:1846:9: replace StacksChainState::get_microblock_status -> Result<Option<bool>, Error> with Ok(Some(true))
stackslib/src/chainstate/stacks/db/blocks.rs:1846:9: replace StacksChainState::get_microblock_status -> Result<Option<bool>, Error> with Ok(Some(false))
stackslib/src/chainstate/stacks/db/blocks.rs:1918:9: replace StacksChainState::has_processed_microblocks_at_tail -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:1918:9: replace StacksChainState::has_processed_microblocks_at_tail -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:2181:9: replace StacksChainState::has_staging_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:2059:9: replace StacksChainState::get_min_max_stacks_block_heights_in_reward_cycle -> Result<(u64, u64), Error> with Ok((0, 0))
stackslib/src/chainstate/stacks/db/blocks.rs:2192:9: replace StacksChainState::get_known_consensus_hashes_for_block -> Result<Vec<ConsensusHash>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/blocks.rs:1463:9: replace StacksChainState::load_next_descendant_microblock -> Result<Option<StacksMicroblock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:2059:9: replace StacksChainState::get_min_max_stacks_block_heights_in_reward_cycle -> Result<(u64, u64), Error> with Ok((1, 0))
stackslib/src/chainstate/stacks/db/blocks.rs:1869:9: replace StacksChainState::has_processed_microblocks -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:2201:9: replace StacksChainState::has_stacks_block_for -> bool with false
stackslib/src/chainstate/stacks/db/blocks.rs:2059:9: replace StacksChainState::get_min_max_stacks_block_heights_in_reward_cycle -> Result<(u64, u64), Error> with Ok((0, 1))
stackslib/src/chainstate/stacks/db/blocks.rs:2296:9: replace StacksChainState::is_block_compatible_with_affirmation_map -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:2059:9: replace StacksChainState::get_min_max_stacks_block_heights_in_reward_cycle -> Result<(u64, u64), Error> with Ok((1, 1))
stackslib/src/chainstate/stacks/db/blocks.rs:2201:9: replace StacksChainState::has_stacks_block_for -> bool with true
stackslib/src/chainstate/stacks/db/blocks.rs:2296:9: replace StacksChainState::is_block_compatible_with_affirmation_map -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:2428:9: replace StacksChainState::set_block_processed -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:2687:9: replace StacksChainState::set_microblocks_processed -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:2621:9: replace StacksChainState::drop_staging_microblocks -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:2316:9: replace StacksChainState::delete_microblock_data -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:2338:9: replace StacksChainState::delete_orphaned_epoch_data -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:2778:9: replace StacksChainState::has_processed_microblocks_indexed -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:2398:9: replace StacksChainState::forget_orphaned_epoch_data -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:2778:9: replace StacksChainState::has_processed_microblocks_indexed -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:2843:9: replace StacksChainState::has_descendant_microblock_indexed -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:2830:9: replace StacksChainState::has_any_staging_microblock_indexed -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:2830:9: replace StacksChainState::has_any_staging_microblock_indexed -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:2869:9: replace StacksChainState::inner_get_block_header_hashes -> Result<Option<(ConsensusHash, BlockHeaderHash)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:2892:9: replace StacksChainState::get_block_header_hashes -> Result<Option<(ConsensusHash, BlockHeaderHash)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:2981:9: replace StacksChainState::has_higher_unprocessed_blocks -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:2905:9: replace StacksChainState::get_parent_block_header_hashes -> Result<Option<(ConsensusHash, BlockHeaderHash)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:2794:9: replace StacksChainState::get_confirmed_microblock_index_hash -> Result<Option<StacksBlockId>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:3007:9: replace StacksChainState::extract_signed_microblocks -> Vec<StacksMicroblock> with vec![]
stackslib/src/chainstate/stacks/db/blocks.rs:3042:9: replace StacksChainState::validate_parent_microblock_stream -> Option<(usize, Option<TransactionPayload>)> with Some((1, None))
stackslib/src/chainstate/stacks/db/blocks.rs:3042:9: replace StacksChainState::validate_parent_microblock_stream -> Option<(usize, Option<TransactionPayload>)> with None
stackslib/src/chainstate/stacks/db/blocks.rs:3242:9: replace StacksChainState::validate_anchored_block_burnchain -> Result<Option<(u64, u64)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:3242:9: replace StacksChainState::validate_anchored_block_burnchain -> Result<Option<(u64, u64)>, Error> with Ok(Some((0, 0)))
stackslib/src/chainstate/stacks/db/blocks.rs:2997:9: replace StacksChainState::get_highest_unprocessed_block -> Result<Option<StagingBlock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:3242:9: replace StacksChainState::validate_anchored_block_burnchain -> Result<Option<(u64, u64)>, Error> with Ok(Some((0, 1)))
stackslib/src/chainstate/stacks/db/blocks.rs:3363:9: replace StacksChainState::has_anchored_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:3042:9: replace StacksChainState::validate_parent_microblock_stream -> Option<(usize, Option<TransactionPayload>)> with Some((0, None))
stackslib/src/chainstate/stacks/db/blocks.rs:3430:9: replace StacksChainState::preprocess_anchored_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:3430:9: replace StacksChainState::preprocess_anchored_block -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:3212:9: replace StacksChainState::block_crosses_epoch_boundary -> Result<bool, db_error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:3694:9: replace StacksChainState::get_coinbase_reward -> u128 with 0
stackslib/src/chainstate/stacks/db/blocks.rs:3555:9: replace StacksChainState::preprocess_streamed_microblock -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:3694:9: replace StacksChainState::get_coinbase_reward -> u128 with 1
stackslib/src/chainstate/stacks/db/blocks.rs:3779:9: replace StacksChainState::find_parent_microblock_stream -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:3818:9: replace StacksChainState::process_next_orphaned_staging_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/blocks.rs:3555:9: replace StacksChainState::preprocess_streamed_microblock -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:3212:9: replace StacksChainState::block_crosses_epoch_boundary -> Result<bool, db_error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:3242:9: replace StacksChainState::validate_anchored_block_burnchain -> Result<Option<(u64, u64)>, Error> with Ok(Some((1, 1)))
stackslib/src/chainstate/stacks/db/blocks.rs:3779:9: replace StacksChainState::find_parent_microblock_stream -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(Some(vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:3242:9: replace StacksChainState::validate_anchored_block_burnchain -> Result<Option<(u64, u64)>, Error> with Ok(Some((1, 0)))
stackslib/src/chainstate/stacks/db/blocks.rs:3818:9: replace StacksChainState::process_next_orphaned_staging_block -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:3363:9: replace StacksChainState::has_anchored_block -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/blocks.rs:3871:9: replace StacksChainState::count_processed_staging_blocks -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/db/blocks.rs:3888:9: replace StacksChainState::measure_block_wait_time -> Result<Vec<i64>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/blocks.rs:3888:9: replace StacksChainState::measure_block_wait_time -> Result<Vec<i64>, Error> with Ok(vec![0])
stackslib/src/chainstate/stacks/db/blocks.rs:3901:9: replace StacksChainState::measure_block_download_time -> Result<Vec<i64>, Error> with Ok(vec![1])
stackslib/src/chainstate/stacks/db/blocks.rs:3916:9: replace StacksChainState::find_next_staging_block -> Result<Option<(Vec<StacksMicroblock>, StagingBlock)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:3901:9: replace StacksChainState::measure_block_download_time -> Result<Vec<i64>, Error> with Ok(vec![0])
stackslib/src/chainstate/stacks/db/blocks.rs:4092:9: replace StacksChainState::process_microblocks_transactions -> Result<(u128, u128, Vec<StacksTransactionReceipt>), (Error, BlockHeaderHash)> with Ok((0, 0, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4092:9: replace StacksChainState::process_microblocks_transactions -> Result<(u128, u128, Vec<StacksTransactionReceipt>), (Error, BlockHeaderHash)> with Ok((0, 1, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4092:9: replace StacksChainState::process_microblocks_transactions -> Result<(u128, u128, Vec<StacksTransactionReceipt>), (Error, BlockHeaderHash)> with Ok((1, 0, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4122:9: replace StacksChainState::process_epoch_transition -> Result<(bool, Vec<StacksTransactionReceipt>), Error> with Ok((true, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4122:9: replace StacksChainState::process_epoch_transition -> Result<(bool, Vec<StacksTransactionReceipt>), Error> with Ok((false, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4265:9: replace StacksChainState::process_stacking_ops -> Vec<StacksTransactionReceipt> with vec![]
stackslib/src/chainstate/stacks/db/blocks.rs:4355:9: replace StacksChainState::process_transfer_ops -> Vec<StacksTransactionReceipt> with vec![]
stackslib/src/chainstate/stacks/db/blocks.rs:4417:9: replace StacksChainState::process_delegate_ops -> Vec<StacksTransactionReceipt> with vec![]
stackslib/src/chainstate/stacks/db/blocks.rs:4527:9: replace StacksChainState::process_block_transactions -> Result<(u128, u128, Vec<StacksTransactionReceipt>), Error> with Ok((0, 0, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4527:9: replace StacksChainState::process_block_transactions -> Result<(u128, u128, Vec<StacksTransactionReceipt>), Error> with Ok((0, 1, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4527:9: replace StacksChainState::process_block_transactions -> Result<(u128, u128, Vec<StacksTransactionReceipt>), Error> with Ok((1, 0, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4527:9: replace StacksChainState::process_block_transactions -> Result<(u128, u128, Vec<StacksTransactionReceipt>), Error> with Ok((1, 1, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4092:9: replace StacksChainState::process_microblocks_transactions -> Result<(u128, u128, Vec<StacksTransactionReceipt>), (Error, BlockHeaderHash)> with Ok((1, 1, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4550:9: replace StacksChainState::process_matured_miner_reward -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/blocks.rs:4600:9: replace StacksChainState::process_matured_miner_rewards -> Result<u128, Error> with Ok(0)
stackslib/src/chainstate/stacks/db/blocks.rs:4600:9: replace StacksChainState::process_matured_miner_rewards -> Result<u128, Error> with Ok(1)
stackslib/src/chainstate/stacks/db/blocks.rs:4709:9: replace StacksChainState::get_stacking_and_transfer_burn_ops_v205 -> Result<(Vec<StackStxOp>, Vec<TransferStxOp>), Error> with Ok((vec![], vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4723:9: replace StacksChainState::get_stacking_and_transfer_and_delegate_burn_ops_v210 -> Result<(Vec<StackStxOp>, Vec<TransferStxOp>, Vec<DelegateStxOp>), Error> with Ok((vec![], vec![], vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4823:9: replace StacksChainState::get_stacking_and_transfer_and_delegate_burn_ops -> Result<(Vec<StackStxOp>, Vec<TransferStxOp>, Vec<DelegateStxOp>), Error> with Ok((vec![], vec![], vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4618:9: replace StacksChainState::process_stx_unlocks -> Result<(u128, Vec<StacksTransactionEvent>), Error> with Ok((0, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:4618:9: replace StacksChainState::process_stx_unlocks -> Result<(u128, Vec<StacksTransactionEvent>), Error> with Ok((1, vec![]))
stackslib/src/chainstate/stacks/db/blocks.rs:5713:9: replace StacksChainState::check_block_attachment -> bool with false
stackslib/src/chainstate/stacks/db/blocks.rs:5739:9: replace StacksChainState::get_parent_header_info -> Result<Option<StacksHeaderInfo>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:5849:9: replace StacksChainState::process_next_staging_block -> Result<(Option<StacksEpochReceipt>, Option<TransactionPayload>), Error> with Ok((None, None))
stackslib/src/chainstate/stacks/db/blocks.rs:4867:9: replace StacksChainState::check_and_handle_reward_start -> Result<Vec<StacksTransactionEvent>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/blocks.rs:6214:9: replace StacksChainState::process_blocks -> Result<Vec<(Option<StacksEpochReceipt>, Option<TransactionPayload>)>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/blocks.rs:5215:9: replace StacksChainState::finish_block -> Result<Vec<StacksTransactionEvent>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/blocks.rs:6286:9: replace StacksChainState::is_valid_address_version -> bool with true
stackslib/src/chainstate/stacks/db/blocks.rs:3871:9: replace StacksChainState::count_processed_staging_blocks -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/db/blocks.rs:3888:9: replace StacksChainState::measure_block_wait_time -> Result<Vec<i64>, Error> with Ok(vec![1])
stackslib/src/chainstate/stacks/db/blocks.rs:5807:9: replace StacksChainState::extract_connecting_microblocks -> Result<Vec<StacksMicroblock>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/blocks.rs:6351:9: replace StacksChainState::get_stacks_block_height -> Result<Option<u64>, Error> with Ok(Some(0))
stackslib/src/chainstate/stacks/db/blocks.rs:6303:9: replace StacksChainState::get_stacks_chain_tip -> Result<Option<StagingBlock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:6286:9: replace StacksChainState::is_valid_address_version -> bool with false
stackslib/src/chainstate/stacks/db/blocks.rs:6312:9: replace StacksChainState::get_stacks_chain_tips -> Result<Vec<StagingBlock>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/blocks.rs:6351:9: replace StacksChainState::get_stacks_block_height -> Result<Option<u64>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/contracts.rs:46:9: replace StacksChainState::get_contract -> Result<Option<Contract>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/headers.rs:116:9: replace StacksChainState::insert_stacks_block_header -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/headers.rs:199:9: replace StacksChainState::get_stacks_block_anchored_cost -> Result<Option<ExecutionCost>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/contracts.rs:60:9: replace StacksChainState::get_data_var -> Result<Option<Value>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/headers.rs:210:9: replace StacksChainState::is_stacks_block_processed -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/headers.rs:210:9: replace StacksChainState::is_stacks_block_processed -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/headers.rs:226:9: replace StacksChainState::get_anchored_block_header_info -> Result<Option<StacksHeaderInfo>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/headers.rs:240:9: replace StacksChainState::get_stacks_block_header_info_by_index_block_hash -> Result<Option<StacksHeaderInfo>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/headers.rs:253:9: replace StacksChainState::get_tip_ancestor -> Result<Option<StacksHeaderInfo>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/headers.rs:263:9: replace StacksChainState::get_index_tip_ancestor -> Result<Option<StacksHeaderInfo>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:6395:9: replace StacksChainState::will_admit_mempool_tx -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/chainstate/stacks/db/headers.rs:324:9: replace StacksChainState::has_stacks_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/db/headers.rs:324:9: replace StacksChainState::has_stacks_block -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/db/headers.rs:316:9: replace StacksChainState::get_parent_block_id -> Result<Option<StacksBlockId>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/headers.rs:368:9: replace StacksChainState::get_all_headers_at_height_and_weight -> Result<Vec<StacksHeaderInfo>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/headers.rs:376:9: replace StacksChainState::get_max_header_height -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/db/headers.rs:376:9: replace StacksChainState::get_max_header_height -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/db/headers.rs:387:9: replace StacksChainState::get_max_affirmation_weight_at_height -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/db/headers.rs:280:9: replace StacksChainState::get_ancestors_headers -> Result<Vec<StacksHeaderInfo>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/blocks.rs:6214:9: replace StacksChainState::process_blocks -> Result<Vec<(Option<StacksEpochReceipt>, Option<TransactionPayload>)>, Error> with Ok(vec![(None, None)])
stackslib/src/chainstate/stacks/db/blocks.rs:6337:9: replace StacksChainState::get_stacks_block_parent -> Result<Option<StagingBlock>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:6363:9: replace StacksChainState::can_admit_mempool_semantic -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/chainstate/stacks/db/headers.rs:387:9: replace StacksChainState::get_max_affirmation_weight_at_height -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/db/transactions.rs:274:9: replace StacksTransactionReceipt::is_coinbase_tx -> bool with false
stackslib/src/chainstate/stacks/db/transactions.rs:295:9: replace <impl Display for TransactionNonceMismatch>::fmt -> std::fmt::Result with Ok(Default::default())
stackslib/src/chainstate/stacks/db/transactions.rs:445:9: replace StacksChainState::pay_transaction_fee -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/db/transactions.rs:445:9: replace StacksChainState::pay_transaction_fee -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/db/headers.rs:345:9: replace StacksChainState::get_ancestor_index_hashes -> Result<Vec<StacksBlockId>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/db/transactions.rs:522:9: replace StacksChainState::check_transaction_postconditions -> bool with false
stackslib/src/chainstate/stacks/db/transactions.rs:476:9: replace StacksChainState::process_transaction_precheck -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/db/unconfirmed.rs:417:9: replace UnconfirmedState::is_readable -> bool with false
stackslib/src/chainstate/stacks/db/unconfirmed.rs:422:9: replace UnconfirmedState::is_writable -> bool with true
stackslib/src/chainstate/stacks/db/unconfirmed.rs:417:9: replace UnconfirmedState::is_readable -> bool with true
stackslib/src/chainstate/stacks/db/unconfirmed.rs:376:9: replace UnconfirmedState::load_child_microblocks -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(Some(vec![]))
stackslib/src/chainstate/stacks/db/unconfirmed.rs:376:9: replace UnconfirmedState::load_child_microblocks -> Result<Option<Vec<StacksMicroblock>>, Error> with Ok(None)
stackslib/src/chainstate/stacks/db/blocks.rs:6490:9: replace StacksChainState::can_include_tx -> Result<(), MemPoolRejection> with Ok(())
stackslib/src/chainstate/stacks/db/unconfirmed.rs:433:9: replace UnconfirmedState::has_data -> bool with true
stackslib/src/chainstate/stacks/db/unconfirmed.rs:428:9: replace UnconfirmedState::set_dirty with ()
stackslib/src/chainstate/stacks/db/unconfirmed.rs:422:9: replace UnconfirmedState::is_writable -> bool with false
stackslib/src/chainstate/stacks/db/unconfirmed.rs:433:9: replace UnconfirmedState::has_data -> bool with false
stackslib/src/chainstate/stacks/db/unconfirmed.rs:450:9: replace UnconfirmedState::num_microblocks -> u64 with 0
stackslib/src/chainstate/stacks/db/unconfirmed.rs:450:9: replace UnconfirmedState::num_microblocks -> u64 with 1
stackslib/src/chainstate/stacks/db/unconfirmed.rs:224:9: replace UnconfirmedState::append_microblocks -> Result<ProcessedUnconfirmedState, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/db/transactions.rs:522:9: replace StacksChainState::check_transaction_postconditions -> bool with true
stackslib/src/chainstate/stacks/db/unconfirmed.rs:490:9: replace StacksChainState::drop_unconfirmed_state with ()
stackslib/src/chainstate/stacks/db/unconfirmed.rs:399:9: replace UnconfirmedState::refresh -> Result<ProcessedUnconfirmedState, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/bits.rs:40:5: replace get_path_byte_len -> usize with 0
stackslib/src/chainstate/stacks/index/bits.rs:40:5: replace get_path_byte_len -> usize with 1
stackslib/src/chainstate/stacks/index/bits.rs:48:5: replace path_from_bytes -> Result<Vec<u8>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/index/bits.rs:48:5: replace path_from_bytes -> Result<Vec<u8>, Error> with Ok(vec![0])
stackslib/src/chainstate/stacks/db/unconfirmed.rs:438:9: replace UnconfirmedState::num_mined_txs -> usize with 0
stackslib/src/chainstate/stacks/db/unconfirmed.rs:539:9: replace StacksChainState::reload_unconfirmed_state -> Result<ProcessedUnconfirmedState, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/bits.rs:48:5: replace path_from_bytes -> Result<Vec<u8>, Error> with Ok(vec![1])
stackslib/src/chainstate/stacks/index/bits.rs:85:5: replace check_node_id -> bool with false
stackslib/src/chainstate/stacks/index/bits.rs:91:5: replace node_id_to_ptr_count -> usize with 0
stackslib/src/chainstate/stacks/db/unconfirmed.rs:438:9: replace UnconfirmedState::num_mined_txs -> usize with 1
stackslib/src/chainstate/stacks/index/bits.rs:91:5: replace node_id_to_ptr_count -> usize with 1
stackslib/src/chainstate/stacks/index/bits.rs:105:5: replace get_ptrs_byte_len -> usize with 0
stackslib/src/chainstate/stacks/index/bits.rs:105:5: replace get_ptrs_byte_len -> usize with 1
stackslib/src/chainstate/stacks/index/bits.rs:116:5: replace ptrs_from_bytes -> Result<u8, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/bits.rs:116:5: replace ptrs_from_bytes -> Result<u8, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/bits.rs:188:5: replace get_leaf_hash -> TrieHash with Default::default()
stackslib/src/chainstate/stacks/index/bits.rs:218:5: replace read_hash_bytes -> Result<[u8; TRIEHASH_ENCODED_SIZE], Error> with Ok([0; TRIEHASH_ENCODED_SIZE])
stackslib/src/chainstate/stacks/index/bits.rs:218:5: replace read_hash_bytes -> Result<[u8; TRIEHASH_ENCODED_SIZE], Error> with Ok([1; TRIEHASH_ENCODED_SIZE])
stackslib/src/chainstate/stacks/index/bits.rs:163:5: replace get_node_hash -> TrieHash with Default::default()
stackslib/src/chainstate/stacks/db/unconfirmed.rs:460:9: replace UnconfirmedState::get_unconfirmed_state_if_exists -> Result<Option<StacksBlockId>, String> with Ok(None)
stackslib/src/chainstate/stacks/db/unconfirmed.rs:446:9: replace UnconfirmedState::get_unconfirmed_transaction -> Option<(StacksTransaction, BlockHeaderHash, u16)> with None
stackslib/src/chainstate/stacks/db/unconfirmed.rs:634:9: replace StacksChainState::set_unconfirmed_dirty with ()
stackslib/src/chainstate/stacks/index/bits.rs:257:5: replace read_node_hash_bytes -> Result<[u8; TRIEHASH_ENCODED_SIZE], Error> with Ok([0; TRIEHASH_ENCODED_SIZE])
stackslib/src/chainstate/stacks/index/bits.rs:257:5: replace read_node_hash_bytes -> Result<[u8; TRIEHASH_ENCODED_SIZE], Error> with Ok([1; TRIEHASH_ENCODED_SIZE])
stackslib/src/chainstate/stacks/index/bits.rs:380:5: replace get_node_byte_len -> usize with 0
stackslib/src/chainstate/stacks/index/bits.rs:380:5: replace get_node_byte_len -> usize with 1
stackslib/src/chainstate/stacks/index/bits.rs:392:5: replace write_nodetype_bytes -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/bits.rs:392:5: replace write_nodetype_bytes -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/bits.rs:408:5: replace write_path_to_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/bits.rs:264:5: replace read_root_hash -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/cache.rs:107:9: replace TrieCacheState<T>::load_node_hash -> Option<TrieHash> with None
stackslib/src/chainstate/stacks/index/bits.rs:270:5: replace count_children -> usize with 0
stackslib/src/chainstate/stacks/index/cache.rs:107:9: replace TrieCacheState<T>::load_node_hash -> Option<TrieHash> with Some(Default::default())
stackslib/src/chainstate/stacks/index/bits.rs:270:5: replace count_children -> usize with 1
stackslib/src/chainstate/stacks/index/cache.rs:143:9: replace TrieCacheState<T>::store_block_hash with ()
stackslib/src/chainstate/stacks/index/cache.rs:150:9: replace TrieCacheState<T>::ref_block_hash -> Option<&T> with None
stackslib/src/chainstate/stacks/index/cache.rs:155:9: replace TrieCacheState<T>::load_block_id -> Option<u32> with None
stackslib/src/chainstate/stacks/index/cache.rs:155:9: replace TrieCacheState<T>::load_block_id -> Option<u32> with Some(0)
stackslib/src/chainstate/stacks/index/cache.rs:155:9: replace TrieCacheState<T>::load_block_id -> Option<u32> with Some(1)
stackslib/src/chainstate/stacks/index/cache.rs:126:9: replace TrieCacheState<T>::store_node with ()
stackslib/src/chainstate/stacks/index/cache.rs:209:9: replace TrieCache<T>::state_mut -> &mut TrieCacheState<T> with Box::leak(Box::new(TrieCacheState::new()))
stackslib/src/chainstate/stacks/index/bits.rs:206:5: replace get_nodetype_hash_bytes -> TrieHash with Default::default()
stackslib/src/chainstate/stacks/index/cache.rs:218:9: replace TrieCache<T>::load_node -> Option<TrieNodeType> with None
stackslib/src/chainstate/stacks/index/cache.rs:232:9: replace TrieCache<T>::load_node_and_hash -> Option<(TrieNodeType, TrieHash)> with None
stackslib/src/chainstate/stacks/index/cache.rs:241:9: replace TrieCache<T>::load_node_hash -> Option<TrieHash> with None
stackslib/src/chainstate/stacks/index/cache.rs:241:9: replace TrieCache<T>::load_node_hash -> Option<TrieHash> with Some(Default::default())
stackslib/src/chainstate/stacks/index/cache.rs:100:9: replace TrieCacheState<T>::load_node -> Option<TrieNodeType> with None
stackslib/src/chainstate/stacks/index/cache.rs:317:9: replace TrieCache<T>::store_block_hash with ()
stackslib/src/chainstate/stacks/index/cache.rs:322:9: replace TrieCache<T>::ref_block_hash -> Option<&T> with None
stackslib/src/chainstate/stacks/index/cache.rs:327:9: replace TrieCache<T>::load_block_id -> Option<u32> with None
stackslib/src/chainstate/stacks/index/cache.rs:273:9: replace TrieCache<T>::store_node with ()
stackslib/src/chainstate/stacks/index/cache.rs:327:9: replace TrieCache<T>::load_block_id -> Option<u32> with Some(0)
stackslib/src/chainstate/stacks/index/cache.rs:327:9: replace TrieCache<T>::load_block_id -> Option<u32> with Some(1)
stackslib/src/chainstate/stacks/index/file.rs:109:9: replace TrieFile::exists -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/index/cache.rs:138:9: replace TrieCacheState<T>::load_block_hash -> Option<T> with None
stackslib/src/chainstate/stacks/index/file.rs:155:9: replace TrieFile::store_trie_blob -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:155:9: replace TrieFile::store_trie_blob -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/file.rs:109:9: replace TrieFile::exists -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/index/file.rs:162:9: replace TrieFile::read_trie_blob_from_db -> Result<Vec<u8>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/index/cache.rs:132:9: replace TrieCacheState<T>::store_node_hash with ()
stackslib/src/chainstate/stacks/index/file.rs:162:9: replace TrieFile::read_trie_blob_from_db -> Result<Vec<u8>, Error> with Ok(vec![0])
stackslib/src/chainstate/stacks/index/file.rs:162:9: replace TrieFile::read_trie_blob_from_db -> Result<Vec<u8>, Error> with Ok(vec![1])
stackslib/src/chainstate/stacks/index/file.rs:358:9: replace TrieFile::get_trie_offset -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:358:9: replace TrieFile::get_trie_offset -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/file.rs:459:9: replace TrieFile::append_trie_blob -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:459:9: replace TrieFile::append_trie_blob -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/file.rs:478:9: replace <impl Write for TrieFileDisk>::write -> io::Result<usize> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:478:9: replace <impl Write for TrieFileDisk>::write -> io::Result<usize> with Ok(1)
stackslib/src/chainstate/stacks/index/file.rs:187:9: replace TrieFile::inner_post_migrate_vacuum -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/file.rs:482:9: replace <impl Write for TrieFileDisk>::flush -> io::Result<()> with Ok(())
stackslib/src/chainstate/stacks/index/file.rs:489:9: replace <impl Write for TrieFileRAM>::write -> io::Result<usize> with Ok(1)
stackslib/src/chainstate/stacks/index/file.rs:500:9: replace <impl Write for TrieFile>::write -> io::Result<usize> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:500:9: replace <impl Write for TrieFile>::write -> io::Result<usize> with Ok(1)
stackslib/src/chainstate/stacks/index/file.rs:517:9: replace <impl Read for TrieFileDisk>::read -> io::Result<usize> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:517:9: replace <impl Read for TrieFileDisk>::read -> io::Result<usize> with Ok(1)
stackslib/src/chainstate/stacks/index/file.rs:382:9: replace TrieFile::get_node_hash_bytes -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/file.rs:257:9: replace TrieFile::export_trie_blobs -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/file.rs:531:9: replace <impl Read for TrieFile>::read -> io::Result<usize> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:541:9: replace <impl Seek for TrieFileDisk>::seek -> io::Result<u64> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:531:9: replace <impl Read for TrieFile>::read -> io::Result<usize> with Ok(1)
stackslib/src/chainstate/stacks/index/file.rs:346:9: replace <impl NodeHashReader for TrieFileNodeHashReader<'_>>::read_node_hash_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/file.rs:541:9: replace <impl Seek for TrieFileDisk>::seek -> io::Result<u64> with Ok(1)
stackslib/src/chainstate/stacks/index/file.rs:554:9: replace <impl Seek for TrieFile>::seek -> io::Result<u64> with Ok(0)
stackslib/src/chainstate/stacks/index/marf.rs:127:9: replace MarfConnection::get -> Result<Option<MARFValue>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/file.rs:554:9: replace <impl Seek for TrieFile>::seek -> io::Result<u64> with Ok(1)
stackslib/src/chainstate/stacks/index/marf.rs:146:9: replace MarfConnection::get_block_at_height -> Result<Option<T>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/file.rs:489:9: replace <impl Write for TrieFileRAM>::write -> io::Result<usize> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:524:9: replace <impl Read for TrieFileRAM>::read -> io::Result<usize> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:524:9: replace <impl Read for TrieFileRAM>::read -> io::Result<usize> with Ok(1)
stackslib/src/chainstate/stacks/index/file.rs:548:9: replace <impl Seek for TrieFileRAM>::seek -> io::Result<u64> with Ok(0)
stackslib/src/chainstate/stacks/index/file.rs:548:9: replace <impl Seek for TrieFileRAM>::seek -> io::Result<u64> with Ok(1)
stackslib/src/chainstate/stacks/index/marf.rs:232:9: replace MarfTransaction<'a, T>::commit -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:245:9: replace MarfTransaction<'a, T>::commit_to -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:263:9: replace MarfTransaction<'a, T>::commit_mined -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:277:9: replace MarfTransaction<'a, T>::get_open_chain_tip -> Option<&T> with None
stackslib/src/chainstate/stacks/index/marf.rs:281:9: replace MarfTransaction<'a, T>::get_open_chain_tip_height -> Option<u32> with None
stackslib/src/chainstate/stacks/index/marf.rs:281:9: replace MarfTransaction<'a, T>::get_open_chain_tip_height -> Option<u32> with Some(1)
stackslib/src/chainstate/stacks/index/marf.rs:281:9: replace MarfTransaction<'a, T>::get_open_chain_tip_height -> Option<u32> with Some(0)
stackslib/src/chainstate/stacks/index/marf.rs:289:9: replace MarfTransaction<'a, T>::get_block_height_of -> Result<Option<u32>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/marf.rs:289:9: replace MarfTransaction<'a, T>::get_block_height_of -> Result<Option<u32>, Error> with Ok(Some(0))
stackslib/src/chainstate/stacks/index/file.rs:507:9: replace <impl Write for TrieFile>::flush -> io::Result<()> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:289:9: replace MarfTransaction<'a, T>::get_block_height_of -> Result<Option<u32>, Error> with Ok(Some(1))
stackslib/src/chainstate/stacks/index/marf.rs:333:9: replace MarfTransaction<'a, T>::begin -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:358:9: replace MarfTransaction<'a, T>::inner_get_extension_height -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/marf.rs:358:9: replace MarfTransaction<'a, T>::inner_get_extension_height -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/marf.rs:392:9: replace MarfTransaction<'a, T>::inner_setup_extension -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:416:9: replace MarfTransaction<'a, T>::set_block_heights -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:479:9: replace MarfTransaction<'a, T>::insert_batch -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:150:9: replace MarfConnection::get_block_height -> Result<Option<u32>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/marf.rs:566:9: replace MarfTransaction<'a, T>::seal -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/marf.rs:644:9: replace MARF<T>::node_copy_update_ptrs -> () with ()
stackslib/src/chainstate/stacks/index/marf.rs:657:9: replace MARF<T>::node_copy_update -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/marf.rs:713:9: replace MARF<T>::root_copy -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:533:9: replace MarfTransaction<'a, T>::drop_current with ()
stackslib/src/chainstate/stacks/index/marf.rs:737:9: replace MARF<T>::extend_trie -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:997:9: replace MARF<T>::get_path -> Result<Option<TrieLeaf>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/marf.rs:1050:9: replace MARF<T>::do_insert_leaf -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:1080:9: replace MARF<T>::insert_leaf -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:1093:9: replace MARF<T>::insert_leaf_in_batch -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:1129:9: replace MARF<T>::get_by_key -> Result<Option<MARFValue>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/marf.rs:1158:9: replace MARF<T>::get_block_height_miner_tip -> Result<Option<u32>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/marf.rs:1158:9: replace MARF<T>::get_block_height_miner_tip -> Result<Option<u32>, Error> with Ok(Some(0))
stackslib/src/chainstate/stacks/index/marf.rs:1158:9: replace MARF<T>::get_block_height_miner_tip -> Result<Option<u32>, Error> with Ok(Some(1))
stackslib/src/chainstate/stacks/index/marf.rs:1182:9: replace MARF<T>::get_block_height -> Result<Option<u32>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/marf.rs:1182:9: replace MARF<T>::get_block_height -> Result<Option<u32>, Error> with Ok(Some(0))
stackslib/src/chainstate/stacks/index/marf.rs:1182:9: replace MARF<T>::get_block_height -> Result<Option<u32>, Error> with Ok(Some(1))
stackslib/src/chainstate/stacks/index/marf.rs:1190:9: replace MARF<T>::get_block_at_height -> Result<Option<T>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/marf.rs:1246:9: replace MARF<T>::inner_insert_batch -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:1322:9: replace MARF<T>::get_bhh_at_height -> Result<Option<T>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/marf.rs:163:9: replace MarfConnection::check_ancestor_block_hash -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:1304:9: replace MARF<T>::open_block -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:1332:9: replace MARF<T>::insert_batch -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:979:9: replace MARF<T>::format -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:1365:9: replace MARF<T>::insert_raw -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:1353:9: replace MARF<T>::insert -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:545:9: replace MarfTransaction<'a, T>::drop_unconfirmed with ()
stackslib/src/chainstate/stacks/index/marf.rs:1473:9: replace MARF<T>::get_block_height_of -> Result<Option<u32>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/marf.rs:1473:9: replace MARF<T>::get_block_height_of -> Result<Option<u32>, Error> with Ok(Some(0))
stackslib/src/chainstate/stacks/index/marf.rs:1473:9: replace MARF<T>::get_block_height_of -> Result<Option<u32>, Error> with Ok(Some(1))
stackslib/src/chainstate/stacks/index/marf.rs:1420:9: replace MARF<T>::commit -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:1388:9: replace MARF<T>::drop_current with ()
stackslib/src/chainstate/stacks/index/marf.rs:1312:9: replace MARF<T>::get_with_proof -> Result<Option<(MARFValue, TrieMerkleProof<T>)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/marf.rs:1403:9: replace MARF<T>::drop_unconfirmed with ()
stackslib/src/chainstate/stacks/index/node.rs:77:5: replace is_backptr -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:77:5: replace is_backptr -> bool with false
stackslib/src/chainstate/stacks/index/marf.rs:1538:9: replace MARF<T>::get_root_hash_at -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/node.rs:82:5: replace set_backptr -> u8 with 0
stackslib/src/chainstate/stacks/index/node.rs:82:5: replace set_backptr -> u8 with 1
stackslib/src/chainstate/stacks/index/node.rs:87:5: replace clear_backptr -> u8 with 0
stackslib/src/chainstate/stacks/index/node.rs:87:5: replace clear_backptr -> u8 with 1
stackslib/src/chainstate/stacks/index/marf.rs:1436:9: replace MARF<T>::commit_mined -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/marf.rs:1453:9: replace MARF<T>::commit_to -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:177:9: replace TrieNode::byte_len -> usize with 0
stackslib/src/chainstate/stacks/index/node.rs:93:5: replace write_ptrs_to_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:162:9: replace TrieNode::write_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:177:9: replace TrieNode::byte_len -> usize with 1
stackslib/src/chainstate/stacks/index/node.rs:261:9: replace TriePtr::id -> u8 with 0
stackslib/src/chainstate/stacks/index/node.rs:261:9: replace TriePtr::id -> u8 with 1
stackslib/src/chainstate/stacks/index/node.rs:266:9: replace TriePtr::chr -> u8 with 0
stackslib/src/chainstate/stacks/index/node.rs:266:9: replace TriePtr::chr -> u8 with 1
stackslib/src/chainstate/stacks/index/node.rs:271:9: replace TriePtr::ptr -> u32 with 0
stackslib/src/chainstate/stacks/index/node.rs:224:5: replace ptrs_fmt -> String with String::new()
stackslib/src/chainstate/stacks/index/node.rs:271:9: replace TriePtr::ptr -> u32 with 1
stackslib/src/chainstate/stacks/index/node.rs:206:9: replace <impl ConsensusSerializable for T>::write_consensus_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:276:9: replace TriePtr::back_block -> u32 with 0
stackslib/src/chainstate/stacks/index/node.rs:276:9: replace TriePtr::back_block -> u32 with 1
stackslib/src/chainstate/stacks/index/node.rs:281:9: replace TriePtr::from_backptr -> TriePtr with Default::default()
stackslib/src/chainstate/stacks/index/node.rs:291:9: replace TriePtr::write_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:322:9: replace TriePtr::from_bytes -> TriePtr with Default::default()
stackslib/src/chainstate/stacks/index/node.rs:368:9: replace TrieCursor<T>::chr -> Option<u8> with None
stackslib/src/chainstate/stacks/index/node.rs:368:9: replace TrieCursor<T>::chr -> Option<u8> with Some(0)
stackslib/src/chainstate/stacks/index/node.rs:368:9: replace TrieCursor<T>::chr -> Option<u8> with Some(1)
stackslib/src/chainstate/stacks/index/node.rs:377:9: replace TrieCursor<T>::tell -> usize with 0
stackslib/src/chainstate/stacks/index/node.rs:377:9: replace TrieCursor<T>::tell -> usize with 1
stackslib/src/chainstate/stacks/index/node.rs:382:9: replace TrieCursor<T>::ntell -> usize with 0
stackslib/src/chainstate/stacks/index/node.rs:104:5: replace ptrs_consensus_hash -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:387:9: replace TrieCursor<T>::eop -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:382:9: replace TrieCursor<T>::ntell -> usize with 1
stackslib/src/chainstate/stacks/index/node.rs:387:9: replace TrieCursor<T>::eop -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:400:9: replace TrieCursor<T>::node -> Option<TrieNodeType> with None
stackslib/src/chainstate/stacks/index/node.rs:393:9: replace TrieCursor<T>::ptr -> TriePtr with Default::default()
stackslib/src/chainstate/stacks/index/node.rs:408:9: replace TrieCursor<T>::eonp -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:408:9: replace TrieCursor<T>::eonp -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:434:9: replace TrieCursor<T>::walk -> Result<Option<TriePtr>, CursorError> with Ok(None)
stackslib/src/chainstate/stacks/index/node.rs:434:9: replace TrieCursor<T>::walk -> Result<Option<TriePtr>, CursorError> with Ok(Some(Default::default()))
stackslib/src/chainstate/stacks/index/node.rs:519:9: replace TrieCursor<T>::repair_retarget -> () with ()
stackslib/src/chainstate/stacks/index/node.rs:577:9: replace TrieCursor<T>::repair_backptr_finish -> () with ()
stackslib/src/chainstate/stacks/index/node.rs:305:9: replace TriePtr::write_consensus_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:600:9: replace <impl PartialEq for TrieLeaf>::eq -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:600:9: replace <impl PartialEq for TrieLeaf>::eq -> bool with true
stackslib/src/chainstate/stacks/index/marf.rs:1491:9: replace MARF<T>::get_open_chain_tip_height -> Option<u32> with Some(1)
stackslib/src/chainstate/stacks/index/node.rs:636:9: replace <impl StacksMessageCodec for TrieLeaf>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:684:9: replace <impl Debug for TrieNode16>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/chainstate/stacks/index/node.rs:735:9: replace <impl PartialEq for TrieNode48>::eq -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:826:9: replace <impl TrieNode for TrieNode4>::id -> u8 with 0
stackslib/src/chainstate/stacks/index/node.rs:826:9: replace <impl TrieNode for TrieNode4>::id -> u8 with 1
stackslib/src/chainstate/stacks/index/node.rs:837:9: replace <impl TrieNode for TrieNode4>::walk -> Option<TriePtr> with None
stackslib/src/chainstate/stacks/index/node.rs:837:9: replace <impl TrieNode for TrieNode4>::walk -> Option<TriePtr> with Some(Default::default())
stackslib/src/chainstate/stacks/index/node.rs:857:9: replace <impl TrieNode for TrieNode4>::insert -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:857:9: replace <impl TrieNode for TrieNode4>::insert -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:871:9: replace <impl TrieNode for TrieNode4>::replace -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:871:9: replace <impl TrieNode for TrieNode4>::replace -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:881:9: replace <impl TrieNode for TrieNode4>::ptrs -> &[TriePtr] with Vec::leak(Vec::new())
stackslib/src/chainstate/stacks/index/node.rs:881:9: replace <impl TrieNode for TrieNode4>::ptrs -> &[TriePtr] with Vec::leak(vec![Default::default()])
stackslib/src/chainstate/stacks/index/node.rs:895:9: replace <impl TrieNode for TrieNode16>::id -> u8 with 0
stackslib/src/chainstate/stacks/index/node.rs:895:9: replace <impl TrieNode for TrieNode16>::id -> u8 with 1
stackslib/src/chainstate/stacks/index/node.rs:906:9: replace <impl TrieNode for TrieNode16>::walk -> Option<TriePtr> with None
stackslib/src/chainstate/stacks/index/node.rs:906:9: replace <impl TrieNode for TrieNode16>::walk -> Option<TriePtr> with Some(Default::default())
stackslib/src/chainstate/stacks/index/node.rs:927:9: replace <impl TrieNode for TrieNode16>::insert -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:927:9: replace <impl TrieNode for TrieNode16>::insert -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:941:9: replace <impl TrieNode for TrieNode16>::replace -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:941:9: replace <impl TrieNode for TrieNode16>::replace -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:951:9: replace <impl TrieNode for TrieNode16>::ptrs -> &[TriePtr] with Vec::leak(Vec::new())
stackslib/src/chainstate/stacks/index/node.rs:951:9: replace <impl TrieNode for TrieNode16>::ptrs -> &[TriePtr] with Vec::leak(vec![Default::default()])
stackslib/src/chainstate/stacks/index/node.rs:786:9: replace <impl PartialEq for TrieNode256>::eq -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:977:9: replace <impl TrieNode for TrieNode48>::walk -> Option<TriePtr> with Some(Default::default())
stackslib/src/chainstate/stacks/index/node.rs:985:9: replace <impl TrieNode for TrieNode48>::write_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:996:9: replace <impl TrieNode for TrieNode48>::byte_len -> usize with 1
stackslib/src/chainstate/stacks/index/node.rs:965:9: replace <impl TrieNode for TrieNode48>::id -> u8 with 0
stackslib/src/chainstate/stacks/index/node.rs:965:9: replace <impl TrieNode for TrieNode48>::id -> u8 with 1
stackslib/src/chainstate/stacks/index/node.rs:977:9: replace <impl TrieNode for TrieNode48>::walk -> Option<TriePtr> with None
stackslib/src/chainstate/stacks/index/node.rs:996:9: replace <impl TrieNode for TrieNode48>::byte_len -> usize with 0
stackslib/src/chainstate/stacks/index/node.rs:1078:9: replace <impl TrieNode for TrieNode48>::replace -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1078:9: replace <impl TrieNode for TrieNode48>::replace -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1062:9: replace <impl TrieNode for TrieNode48>::insert -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1102:9: replace <impl TrieNode for TrieNode256>::id -> u8 with 0
stackslib/src/chainstate/stacks/index/node.rs:1102:9: replace <impl TrieNode for TrieNode256>::id -> u8 with 1
stackslib/src/chainstate/stacks/index/node.rs:1113:9: replace <impl TrieNode for TrieNode256>::walk -> Option<TriePtr> with None
stackslib/src/chainstate/stacks/index/node.rs:1113:9: replace <impl TrieNode for TrieNode256>::walk -> Option<TriePtr> with Some(Default::default())
stackslib/src/chainstate/stacks/index/node.rs:657:9: replace <impl Debug for TrieNode4>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/chainstate/stacks/index/node.rs:1132:9: replace <impl TrieNode for TrieNode256>::insert -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1132:9: replace <impl TrieNode for TrieNode256>::insert -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1141:9: replace <impl TrieNode for TrieNode256>::replace -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1062:9: replace <impl TrieNode for TrieNode48>::insert -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1141:9: replace <impl TrieNode for TrieNode256>::replace -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1151:9: replace <impl TrieNode for TrieNode256>::ptrs -> &[TriePtr] with Vec::leak(vec![Default::default()])
stackslib/src/chainstate/stacks/index/node.rs:1151:9: replace <impl TrieNode for TrieNode256>::ptrs -> &[TriePtr] with Vec::leak(Vec::new())
stackslib/src/chainstate/stacks/index/node.rs:1088:9: replace <impl TrieNode for TrieNode48>::ptrs -> &[TriePtr] with Vec::leak(Vec::new())
stackslib/src/chainstate/stacks/index/node.rs:1173:9: replace <impl TrieNode for TrieLeaf>::walk -> Option<TriePtr> with Some(Default::default())
stackslib/src/chainstate/stacks/index/node.rs:1184:9: replace <impl TrieNode for TrieLeaf>::byte_len -> usize with 0
stackslib/src/chainstate/stacks/index/node.rs:1177:9: replace <impl TrieNode for TrieLeaf>::write_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:1088:9: replace <impl TrieNode for TrieNode48>::ptrs -> &[TriePtr] with Vec::leak(vec![Default::default()])
stackslib/src/chainstate/stacks/index/node.rs:1165:9: replace <impl TrieNode for TrieLeaf>::id -> u8 with 0
stackslib/src/chainstate/stacks/index/node.rs:1184:9: replace <impl TrieNode for TrieLeaf>::byte_len -> usize with 1
stackslib/src/chainstate/stacks/index/node.rs:1265:9: replace TrieNodeType::is_leaf -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1226:9: replace <impl TrieNode for TrieLeaf>::replace -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1222:9: replace <impl TrieNode for TrieLeaf>::insert -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1222:9: replace <impl TrieNode for TrieLeaf>::insert -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1230:9: replace <impl TrieNode for TrieLeaf>::ptrs -> &[TriePtr] with Vec::leak(vec![Default::default()])
stackslib/src/chainstate/stacks/index/node.rs:1230:9: replace <impl TrieNode for TrieLeaf>::ptrs -> &[TriePtr] with Vec::leak(Vec::new())
stackslib/src/chainstate/stacks/index/node.rs:1265:9: replace TrieNodeType::is_leaf -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1279:9: replace TrieNodeType::is_node16 -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1286:9: replace TrieNodeType::is_node48 -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1286:9: replace TrieNodeType::is_node48 -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1279:9: replace TrieNodeType::is_node16 -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1293:9: replace TrieNodeType::is_node256 -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1300:9: replace TrieNodeType::id -> u8 with 0
stackslib/src/chainstate/stacks/index/node.rs:1300:9: replace TrieNodeType::id -> u8 with 1
stackslib/src/chainstate/stacks/index/node.rs:1304:9: replace TrieNodeType::walk -> Option<TriePtr> with None
stackslib/src/chainstate/stacks/index/node.rs:1308:9: replace TrieNodeType::write_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/node.rs:1320:9: replace TrieNodeType::byte_len -> usize with 0
stackslib/src/chainstate/stacks/index/node.rs:1304:9: replace TrieNodeType::walk -> Option<TriePtr> with Some(Default::default())
stackslib/src/chainstate/stacks/index/node.rs:1320:9: replace TrieNodeType::byte_len -> usize with 1
stackslib/src/chainstate/stacks/index/node.rs:1324:9: replace TrieNodeType::insert -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1324:9: replace TrieNodeType::insert -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1328:9: replace TrieNodeType::replace -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1328:9: replace TrieNodeType::replace -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1332:9: replace TrieNodeType::ptrs -> &[TriePtr] with Vec::leak(Vec::new())
stackslib/src/chainstate/stacks/index/node.rs:1332:9: replace TrieNodeType::ptrs -> &[TriePtr] with Vec::leak(vec![Default::default()])
stackslib/src/chainstate/stacks/index/node.rs:1336:9: replace TrieNodeType::ptrs_mut -> &mut[TriePtr] with Vec::leak(Vec::new())
stackslib/src/chainstate/stacks/index/node.rs:1336:9: replace TrieNodeType::ptrs_mut -> &mut[TriePtr] with Vec::leak(vec![Default::default()])
stackslib/src/chainstate/stacks/index/node.rs:1165:9: replace <impl TrieNode for TrieLeaf>::id -> u8 with 1
stackslib/src/chainstate/stacks/index/node.rs:1360:9: replace TrieNodeType::set_path -> () with ()
stackslib/src/chainstate/stacks/index/node.rs:1272:9: replace TrieNodeType::is_node4 -> bool with false
stackslib/src/chainstate/stacks/index/node.rs:1346:9: replace TrieNodeType::max_ptrs -> usize with 0
stackslib/src/chainstate/stacks/index/node.rs:1316:9: replace TrieNodeType::write_consensus_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/proofs.rs:117:9: replace <impl PartialEq for TrieMerkleProofType<T>>::eq -> bool with true
stackslib/src/chainstate/stacks/index/node.rs:1272:9: replace TrieNodeType::is_node4 -> bool with true
stackslib/src/chainstate/stacks/index/proofs.rs:55:9: replace <impl ConsensusSerializable for ProofTrieNode<T>>::write_consensus_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/proofs.rs:89:9: replace ProofTrieNode<T>::ptrs -> &[ProofTriePtr<T>] with Vec::leak(Vec::new())
stackslib/src/chainstate/stacks/index/proofs.rs:170:9: replace <impl Debug for TrieMerkleProofType<T>>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/chainstate/stacks/index/proofs.rs:148:5: replace hashes_fmt -> String with String::new()
stackslib/src/chainstate/stacks/index/node.rs:1293:9: replace TrieNodeType::is_node256 -> bool with true
stackslib/src/chainstate/stacks/index/proofs.rs:366:9: replace TrieMerkleProof<T>::to_hex -> String with String::new()
stackslib/src/chainstate/stacks/index/proofs.rs:377:9: replace TrieMerkleProof<T>::make_proof_hashes -> Result<Vec<TrieHash>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/index/proofs.rs:377:9: replace TrieMerkleProof<T>::make_proof_hashes -> Result<Vec<TrieHash>, Error> with Ok(vec![Default::default()])
stackslib/src/chainstate/stacks/index/proofs.rs:670:9: replace TrieMerkleProof<T>::next_shunt_hash -> Option<TrieHash> with Some(Default::default())
stackslib/src/chainstate/stacks/index/proofs.rs:477:9: replace TrieMerkleProof<T>::make_initial_shunt_proof -> Result<Vec<TrieMerkleProofType<T>>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/index/proofs.rs:670:9: replace TrieMerkleProof<T>::next_shunt_hash -> Option<TrieHash> with None
stackslib/src/chainstate/stacks/index/proofs.rs:509:9: replace TrieMerkleProof<T>::make_backptr_shunt_proof -> Result<Vec<TrieMerkleProofType<T>>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/index/proofs.rs:248:9: replace <impl StacksMessageCodec for ProofTriePtr<T>>::consensus_serialize -> Result<(), codec_error> with Ok(())
stackslib/src/chainstate/stacks/index/proofs.rs:704:9: replace TrieMerkleProof<T>::verify_shunt_proof_head -> Option<TrieHash> with None
stackslib/src/chainstate/stacks/index/proofs.rs:704:9: replace TrieMerkleProof<T>::verify_shunt_proof_head -> Option<TrieHash> with Some(Default::default())
stackslib/src/chainstate/stacks/index/proofs.rs:749:9: replace TrieMerkleProof<T>::verify_shunt_proof_tail -> Option<TrieHash> with Some(Default::default())
stackslib/src/chainstate/stacks/index/proofs.rs:749:9: replace TrieMerkleProof<T>::verify_shunt_proof_tail -> Option<TrieHash> with None
stackslib/src/chainstate/stacks/index/proofs.rs:965:9: replace TrieMerkleProof<T>::get_segment_proof_path_prefix -> Option<Vec<u8>> with None
stackslib/src/chainstate/stacks/index/proofs.rs:965:9: replace TrieMerkleProof<T>::get_segment_proof_path_prefix -> Option<Vec<u8>> with Some(vec![])
stackslib/src/chainstate/stacks/index/proofs.rs:965:9: replace TrieMerkleProof<T>::get_segment_proof_path_prefix -> Option<Vec<u8>> with Some(vec![1])
stackslib/src/chainstate/stacks/index/proofs.rs:787:9: replace TrieMerkleProof<T>::verify_shunt_proof_junction -> Option<TrieHash> with None
stackslib/src/chainstate/stacks/index/proofs.rs:787:9: replace TrieMerkleProof<T>::verify_shunt_proof_junction -> Option<TrieHash> with Some(Default::default())
stackslib/src/chainstate/stacks/index/proofs.rs:842:9: replace TrieMerkleProof<T>::make_segment_proof -> Result<Vec<TrieMerkleProofType<T>>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/index/proofs.rs:1130:9: replace TrieMerkleProof<T>::verify_proof -> bool with true
stackslib/src/chainstate/stacks/index/proofs.rs:892:9: replace TrieMerkleProof<T>::get_segment_proof_hash -> Option<TrieHash> with None
stackslib/src/chainstate/stacks/index/proofs.rs:926:9: replace TrieMerkleProof<T>::verify_segment_proof -> Option<TrieHash> with None
stackslib/src/chainstate/stacks/index/proofs.rs:892:9: replace TrieMerkleProof<T>::get_segment_proof_hash -> Option<TrieHash> with Some(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:85:9: replace <impl BlockMap for TrieFileStorage<T>>::is_block_hash_cached -> bool with true
stackslib/src/chainstate/stacks/index/proofs.rs:926:9: replace TrieMerkleProof<T>::verify_segment_proof -> Option<TrieHash> with Some(Default::default())
stackslib/src/chainstate/stacks/index/proofs.rs:965:9: replace TrieMerkleProof<T>::get_segment_proof_path_prefix -> Option<Vec<u8>> with Some(vec![0])
stackslib/src/chainstate/stacks/index/proofs.rs:1009:9: replace TrieMerkleProof<T>::is_proof_well_formed -> bool with false
stackslib/src/chainstate/stacks/index/storage.rs:124:9: replace <impl BlockMap for TrieStorageConnection<'a, T>>::is_block_hash_cached -> bool with true
stackslib/src/chainstate/stacks/index/proofs.rs:1130:9: replace TrieMerkleProof<T>::verify_proof -> bool with false
stackslib/src/chainstate/stacks/index/storage.rs:124:9: replace <impl BlockMap for TrieStorageConnection<'a, T>>::is_block_hash_cached -> bool with false
stackslib/src/chainstate/stacks/index/proofs.rs:1360:9: replace TrieMerkleProof<T>::verify -> bool with true
stackslib/src/chainstate/stacks/index/storage.rs:128:9: replace <impl BlockMap for TrieStorageConnection<'a, T>>::get_block_id -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:128:9: replace <impl BlockMap for TrieStorageConnection<'a, T>>::get_block_id -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/storage.rs:133:9: replace <impl BlockMap for TrieStorageConnection<'a, T>>::get_block_id_caching -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:133:9: replace <impl BlockMap for TrieStorageConnection<'a, T>>::get_block_id_caching -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/storage.rs:85:9: replace <impl BlockMap for TrieFileStorage<T>>::is_block_hash_cached -> bool with false
stackslib/src/chainstate/stacks/index/storage.rs:89:9: replace <impl BlockMap for TrieFileStorage<T>>::get_block_id -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/proofs.rs:1360:9: replace TrieMerkleProof<T>::verify -> bool with false
stackslib/src/chainstate/stacks/index/storage.rs:167:9: replace <impl BlockMap for TrieStorageTransaction<'a, T>>::get_block_id_caching -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:167:9: replace <impl BlockMap for TrieStorageTransaction<'a, T>>::get_block_id_caching -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/storage.rs:187:9: replace <impl BlockMap for TrieSqlHashMapCursor<'_, T>>::is_block_hash_cached -> bool with true
stackslib/src/chainstate/stacks/index/storage.rs:163:9: replace <impl BlockMap for TrieStorageTransaction<'a, T>>::get_block_id -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:159:9: replace <impl BlockMap for TrieStorageTransaction<'a, T>>::is_block_hash_cached -> bool with false
stackslib/src/chainstate/stacks/index/storage.rs:163:9: replace <impl BlockMap for TrieStorageTransaction<'a, T>>::get_block_id -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/storage.rs:187:9: replace <impl BlockMap for TrieSqlHashMapCursor<'_, T>>::is_block_hash_cached -> bool with false
stackslib/src/chainstate/stacks/index/storage.rs:191:9: replace <impl BlockMap for TrieSqlHashMapCursor<'_, T>>::get_block_id -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/storage.rs:219:9: replace <impl Display for FlushOptions<'_, T>>::fmt -> fmt::Result with Ok(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:290:9: replace UncommittedState<T>::write_nodetype -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:315:9: replace UncommittedState<T>::last_ptr -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:315:9: replace UncommittedState<T>::last_ptr -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/storage.rs:94:9: replace <impl BlockMap for TrieFileStorage<T>>::get_block_id_caching -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:343:9: replace UncommittedState<T>::dump -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:485:9: replace TrieRAM<T>::replace_from with ()
stackslib/src/chainstate/stacks/index/storage.rs:584:9: replace TrieRAM<T>::write_trie_indirect -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:618:9: replace TrieRAM<T>::calculate_marf_root_hash -> TrieHash with Default::default()
stackslib/src/chainstate/stacks/index/storage.rs:639:9: replace TrieRAM<T>::inner_seal_marf -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:669:9: replace TrieRAM<T>::inner_seal -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:714:9: replace TrieRAM<T>::calculate_node_hashes -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:826:9: replace TrieRAM<T>::dump_consume -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:826:9: replace TrieRAM<T>::dump_consume -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/storage.rs:191:9: replace <impl BlockMap for TrieSqlHashMapCursor<'_, T>>::get_block_id -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:274:9: replace UncommittedState<T>::read_node_hash -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:1052:9: replace TrieRAM<T>::write_nodetype -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:694:9: replace TrieRAM<T>::inner_seal_dump -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:970:9: replace TrieRAM<T>::size_hint -> usize with 1
stackslib/src/chainstate/stacks/index/storage.rs:1114:9: replace TrieRAM<T>::last_ptr -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:1114:9: replace TrieRAM<T>::last_ptr -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/storage.rs:1312:9: replace TrieStorageTransientData<T>::set_block with ()
stackslib/src/chainstate/stacks/index/storage.rs:1090:9: replace TrieRAM<T>::write_node_hash -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:1132:9: replace <impl NodeHashReader for TrieRAM<T>>::read_node_hash_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:1318:9: replace TrieStorageTransientData<T>::clear_block_id with ()
stackslib/src/chainstate/stacks/index/storage.rs:1513:9: replace TrieFileStorage<T>::readonly -> bool with true
stackslib/src/chainstate/stacks/index/storage.rs:988:9: replace TrieRAM<T>::read_node_hash -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:1513:9: replace TrieFileStorage<T>::readonly -> bool with false
stackslib/src/chainstate/stacks/index/storage.rs:1663:9: replace TrieStorageTransaction<'a, T>::inner_flush -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:1740:9: replace TrieStorageTransaction<'a, T>::flush -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:1158:9: replace <impl NodeHashReader for TrieSqlCursor<'_>>::read_node_hash_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:1749:9: replace TrieStorageTransaction<'a, T>::flush_to -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:1755:9: replace TrieStorageTransaction<'a, T>::flush_mined -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:1789:9: replace TrieStorageTransaction<'a, T>::seal -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:1808:9: replace TrieStorageTransaction<'a, T>::extend_to_block -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:1760:9: replace TrieStorageTransaction<'a, T>::drop_extending_trie with ()
stackslib/src/chainstate/stacks/index/storage.rs:1322:9: replace TrieStorageTransientData<T>::retarget_block with ()
stackslib/src/chainstate/stacks/index/storage.rs:977:9: replace TrieRAM<T>::format -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:1844:9: replace TrieStorageTransaction<'a, T>::extend_to_unconfirmed_block -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/index/storage.rs:1774:9: replace TrieStorageTransaction<'a, T>::drop_unconfirmed_trie with ()
stackslib/src/chainstate/stacks/index/storage.rs:1935:9: replace TrieStorageTransaction<'a, T>::commit_tx with ()
stackslib/src/chainstate/stacks/index/storage.rs:1963:9: replace TrieStorageConnection<'a, T>::readonly -> bool with true
stackslib/src/chainstate/stacks/index/storage.rs:1967:9: replace TrieStorageConnection<'a, T>::unconfirmed -> bool with true
stackslib/src/chainstate/stacks/index/storage.rs:1521:9: replace TrieFileStorage<T>::unconfirmed -> bool with true
stackslib/src/chainstate/stacks/index/storage.rs:1521:9: replace TrieFileStorage<T>::unconfirmed -> bool with false
stackslib/src/chainstate/stacks/index/storage.rs:1844:9: replace TrieStorageTransaction<'a, T>::extend_to_unconfirmed_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/index/storage.rs:1967:9: replace TrieStorageConnection<'a, T>::unconfirmed -> bool with false
stackslib/src/chainstate/stacks/index/storage.rs:1975:9: replace TrieStorageConnection<'a, T>::clear_cached_ancestor_hashes_bytes with ()
stackslib/src/chainstate/stacks/index/storage.rs:1979:9: replace TrieStorageConnection<'a, T>::get_root_hash_at -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:1990:9: replace TrieStorageConnection<'a, T>::check_cached_ancestor_hashes_bytes -> Option<Vec<TrieHash>> with Some(vec![])
stackslib/src/chainstate/stacks/index/storage.rs:1990:9: replace TrieStorageConnection<'a, T>::check_cached_ancestor_hashes_bytes -> Option<Vec<TrieHash>> with None
stackslib/src/chainstate/stacks/index/storage.rs:2091:9: replace TrieStorageConnection<'a, T>::switch_trie with ()
stackslib/src/chainstate/stacks/index/storage.rs:2103:9: replace TrieStorageConnection<'a, T>::has_confirmed_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/index/storage.rs:1948:9: replace TrieStorageTransaction<'a, T>::rollback with ()
stackslib/src/chainstate/stacks/index/storage.rs:2112:9: replace TrieStorageConnection<'a, T>::has_unconfirmed_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/index/storage.rs:2103:9: replace TrieStorageConnection<'a, T>::has_confirmed_block -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/index/storage.rs:2122:9: replace TrieStorageConnection<'a, T>::has_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/index/storage.rs:2129:9: replace TrieStorageConnection<'a, T>::open_block_maybe_id -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:2138:9: replace TrieStorageConnection<'a, T>::open_block_known_id -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:2164:9: replace TrieStorageConnection<'a, T>::open_block -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:2251:9: replace TrieStorageConnection<'a, T>::get_block_identifier -> Option<u32> with Some(0)
stackslib/src/chainstate/stacks/index/storage.rs:2251:9: replace TrieStorageConnection<'a, T>::get_block_identifier -> Option<u32> with Some(1)
stackslib/src/chainstate/stacks/index/storage.rs:1990:9: replace TrieStorageConnection<'a, T>::check_cached_ancestor_hashes_bytes -> Option<Vec<TrieHash>> with Some(vec![Default::default()])
stackslib/src/chainstate/stacks/index/storage.rs:2262:9: replace TrieStorageConnection<'a, T>::get_cur_block_identifier -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:2262:9: replace TrieStorageConnection<'a, T>::get_cur_block_identifier -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/storage.rs:2289:9: replace TrieStorageConnection<'a, T>::root_ptr -> u32 with 0
stackslib/src/chainstate/stacks/index/storage.rs:2289:9: replace TrieStorageConnection<'a, T>::root_ptr -> u32 with 1
stackslib/src/chainstate/stacks/index/storage.rs:2307:9: replace TrieStorageConnection<'a, T>::root_ptr_disk -> u32 with 0
stackslib/src/chainstate/stacks/index/storage.rs:2307:9: replace TrieStorageConnection<'a, T>::root_ptr_disk -> u32 with 1
stackslib/src/chainstate/stacks/index/storage.rs:2122:9: replace TrieStorageConnection<'a, T>::has_block -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/index/storage.rs:2300:9: replace TrieStorageConnection<'a, T>::root_trieptr -> TriePtr with Default::default()
stackslib/src/chainstate/stacks/index/storage.rs:2339:9: replace TrieStorageConnection<'a, T>::write_children_hashes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:2416:9: replace TrieStorageConnection<'a, T>::inner_write_children_hashes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:2660:9: replace TrieStorageConnection<'a, T>::write_nodetype -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:2700:9: replace TrieStorageConnection<'a, T>::write_node -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/storage.rs:2711:9: replace TrieStorageConnection<'a, T>::last_ptr -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/storage.rs:2711:9: replace TrieStorageConnection<'a, T>::last_ptr -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/storage.rs:2720:9: replace TrieStorageConnection<'a, T>::num_blocks -> usize with 0
stackslib/src/chainstate/stacks/index/storage.rs:2473:9: replace TrieStorageConnection<'a, T>::inner_read_persisted_node_hash -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:2490:9: replace TrieStorageConnection<'a, T>::read_node_hash_bytes -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/storage.rs:2112:9: replace TrieStorageConnection<'a, T>::has_unconfirmed_block -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/index/trie.rs:151:9: replace Trie::walk_from_maybe_hash -> Result<Option<(TriePtr, TrieNodeType, TrieHash)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/trie.rs:190:9: replace Trie::walk_from_nohash -> Result<Option<(TriePtr, TrieNodeType)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/trie.rs:55:5: replace get_nodetype_hash -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/trie.rs:257:9: replace Trie::get_children_hashes -> Result<Vec<TrieHash>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/index/trie.rs:278:9: replace Trie::replace_leaf -> Result<TriePtr, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/trie.rs:305:9: replace Trie::append_leaf -> Result<TriePtr, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/trie.rs:345:9: replace Trie::promote_leaf_to_node4 -> Result<TriePtr, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/trie.rs:449:9: replace Trie::node_has_space -> bool with true
stackslib/src/chainstate/stacks/index/trie.rs:449:9: replace Trie::node_has_space -> bool with false
stackslib/src/chainstate/stacks/index/trie.rs:489:9: replace Trie::try_attach_leaf -> Result<Option<TriePtr>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/trie.rs:489:9: replace Trie::try_attach_leaf -> Result<Option<TriePtr>, Error> with Ok(Some(Default::default()))
stackslib/src/chainstate/stacks/index/trie.rs:539:9: replace Trie::insert_leaf -> Result<TriePtr, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/trie.rs:713:9: replace Trie::add_value -> Result<TriePtr, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/trie.rs:619:9: replace Trie::splice_leaf -> Result<TriePtr, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/trie.rs:816:9: replace Trie::get_trie_ancestor_hashes_bytes -> Result<Vec<TrieHash>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/index/trie.rs:839:9: replace Trie::get_trie_root_ancestor_hashes_bytes -> Result<Vec<TrieHash>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/index/trie.rs:839:9: replace Trie::get_trie_root_ancestor_hashes_bytes -> Result<Vec<TrieHash>, Error> with Ok(vec![Default::default()])
stackslib/src/chainstate/stacks/index/trie.rs:861:9: replace Trie::get_trie_root_hash -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/trie.rs:878:9: replace Trie::recalculate_root_hash -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/trie.rs:1019:9: replace Trie::update_root_hash -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/trie.rs:1030:9: replace Trie::update_root_node_hash -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/trie_sql.rs:102:5: replace create_tables_if_needed -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/trie_sql.rs:113:5: replace get_schema_version -> u64 with 0
stackslib/src/chainstate/stacks/index/trie.rs:752:9: replace Trie::inner_get_trie_ancestor_hashes_bytes -> Result<Vec<TrieHash>, Error> with Ok(vec![Default::default()])
stackslib/src/chainstate/stacks/index/trie_sql.rs:113:5: replace get_schema_version -> u64 with 1
stackslib/src/chainstate/stacks/index/trie.rs:182:9: replace Trie::walk_from -> Result<Option<(TriePtr, TrieNodeType, TrieHash)>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/trie_sql.rs:139:5: replace migrate_tables_if_needed -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/trie_sql.rs:139:5: replace migrate_tables_if_needed -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/trie_sql.rs:178:5: replace get_block_identifier -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/trie_sql.rs:126:5: replace get_migrated_version -> u64 with 0
stackslib/src/chainstate/stacks/index/trie_sql.rs:178:5: replace get_block_identifier -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/trie.rs:257:9: replace Trie::get_children_hashes -> Result<Vec<TrieHash>, Error> with Ok(vec![Default::default()])
stackslib/src/chainstate/stacks/index/trie_sql.rs:199:5: replace get_confirmed_block_identifier -> Result<Option<u32>, Error> with Ok(Some(0))
stackslib/src/chainstate/stacks/index/trie_sql.rs:199:5: replace get_confirmed_block_identifier -> Result<Option<u32>, Error> with Ok(Some(1))
stackslib/src/chainstate/stacks/index/trie_sql.rs:212:5: replace get_unconfirmed_block_identifier -> Result<Option<u32>, Error> with Ok(Some(0))
stackslib/src/chainstate/stacks/index/trie.rs:816:9: replace Trie::get_trie_ancestor_hashes_bytes -> Result<Vec<TrieHash>, Error> with Ok(vec![Default::default()])
stackslib/src/chainstate/stacks/index/trie_sql.rs:212:5: replace get_unconfirmed_block_identifier -> Result<Option<u32>, Error> with Ok(Some(1))
stackslib/src/chainstate/stacks/index/trie_sql.rs:241:5: replace write_trie_blob -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/trie_sql.rs:241:5: replace write_trie_blob -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/trie_sql.rs:265:5: replace inner_write_external_trie_blob -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/trie_sql.rs:265:5: replace inner_write_external_trie_blob -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/trie_sql.rs:187:5: replace get_mined_block_identifier -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/trie_sql.rs:333:5: replace write_external_trie_blob -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/trie_sql.rs:333:5: replace write_external_trie_blob -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/trie.rs:752:9: replace Trie::inner_get_trie_ancestor_hashes_bytes -> Result<Vec<TrieHash>, Error> with Ok(vec![])
stackslib/src/chainstate/stacks/index/trie_sql.rs:199:5: replace get_confirmed_block_identifier -> Result<Option<u32>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/storage.rs:2739:9: replace TrieStorageConnection<'a, T>::reset_benchmarks with ()
stackslib/src/chainstate/stacks/index/trie_sql.rs:212:5: replace get_unconfirmed_block_identifier -> Result<Option<u32>, Error> with Ok(None)
stackslib/src/chainstate/stacks/index/trie_sql.rs:342:5: replace write_trie_blob_to_mined -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/trie_sql.rs:371:5: replace write_trie_blob_to_unconfirmed -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/trie_sql.rs:371:5: replace write_trie_blob_to_unconfirmed -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/trie_sql.rs:522:5: replace get_external_trie_offset_length -> Result<(u64, u64), Error> with Ok((0, 0))
stackslib/src/chainstate/stacks/index/trie_sql.rs:522:5: replace get_external_trie_offset_length -> Result<(u64, u64), Error> with Ok((0, 1))
stackslib/src/chainstate/stacks/index/trie_sql.rs:522:5: replace get_external_trie_offset_length -> Result<(u64, u64), Error> with Ok((1, 1))
stackslib/src/chainstate/stacks/index/trie_sql.rs:522:5: replace get_external_trie_offset_length -> Result<(u64, u64), Error> with Ok((1, 0))
stackslib/src/chainstate/stacks/index/trie_sql.rs:321:5: replace update_external_trie_blob -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/trie_sql.rs:321:5: replace update_external_trie_blob -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/trie_sql.rs:542:5: replace get_external_blobs_length -> Result<u64, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/trie_sql.rs:533:5: replace get_external_trie_offset_length_by_bhh -> Result<(u64, u64), Error> with Ok((0, 1))
stackslib/src/chainstate/stacks/index/trie_sql.rs:533:5: replace get_external_trie_offset_length_by_bhh -> Result<(u64, u64), Error> with Ok((1, 0))
stackslib/src/chainstate/stacks/index/trie_sql.rs:542:5: replace get_external_blobs_length -> Result<u64, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/trie_sql.rs:551:5: replace detect_partial_migration -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/index/trie_sql.rs:551:5: replace detect_partial_migration -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/index/trie_sql.rs:451:5: replace read_node_hash_bytes -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/trie_sql.rs:533:5: replace get_external_trie_offset_length_by_bhh -> Result<(u64, u64), Error> with Ok((0, 0))
stackslib/src/chainstate/stacks/index/trie_sql.rs:572:5: replace set_migrated -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/trie_sql.rs:622:5: replace tx_lock_bhh_for_extension -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/index/trie_sql.rs:662:5: replace lock_bhh_for_extension -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/index/trie_sql.rs:585:5: replace get_node_hash_bytes -> Result<TrieHash, Error> with Ok(Default::default())
stackslib/src/chainstate/stacks/index/trie_sql.rs:667:5: replace count_blocks -> Result<u32, Error> with Ok(0)
stackslib/src/chainstate/stacks/index/trie_sql.rs:622:5: replace tx_lock_bhh_for_extension -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/index/trie_sql.rs:533:5: replace get_external_trie_offset_length_by_bhh -> Result<(u64, u64), Error> with Ok((1, 1))
stackslib/src/chainstate/stacks/index/trie_sql.rs:676:5: replace is_unconfirmed_block -> Result<bool, Error> with Ok(false)
stackslib/src/chainstate/stacks/index/trie_sql.rs:676:5: replace is_unconfirmed_block -> Result<bool, Error> with Ok(true)
stackslib/src/chainstate/stacks/index/trie_sql.rs:667:5: replace count_blocks -> Result<u32, Error> with Ok(1)
stackslib/src/chainstate/stacks/index/trie_sql.rs:685:5: replace drop_lock -> Result<(), Error> with Ok(())
stackslib/src/chainstate/stacks/index/trie_sql.rs:693:5: replace drop_unconfirmed_trie -> Result<(), Error> with Ok(())
